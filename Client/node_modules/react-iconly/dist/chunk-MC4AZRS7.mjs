import {
  require_prop_types,
  withIcon_default
} from "./chunk-FXCGIESB.mjs";
import {
  __toESM
} from "./chunk-VFWK3BIF.mjs";

// src/Icons/CaretRight.js
var import_prop_types = __toESM(require_prop_types());
import * as React from "react";
var CaretRight = ({ color, secondaryColor, strokeWidth, opacity, set }) => {
  const Bold = () => /* @__PURE__ */ React.createElement("g", { transform: "translate(3 6.5)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M9.141.09a.715.715,0,0,0-.38.627V4.783H.734a.717.717,0,1,0,0,1.435H8.762v4.065a.712.712,0,0,0,.38.627.748.748,0,0,0,.746-.02l7.77-4.783a.709.709,0,0,0,0-1.215L9.888.11A.748.748,0,0,0,9.141.09",
      fill: color
    }
  ));
  const Bulk = () => /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", { id: "clip-path" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M0,0H10.9V8.939H0Z",
      transform: "translate(0 0.534)",
      fill: "none"
    }
  ))), /* @__PURE__ */ React.createElement("g", { transform: "translate(3 17.5) rotate(-90)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0",
      transform: "translate(4.738 0)",
      fill: secondaryColor,
      opacity
    }
  ), /* @__PURE__ */ React.createElement("g", { transform: "translate(0 7.944)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M0,0H10.9V8.939H0Z",
      transform: "translate(0 0.534)",
      fill: "none"
    }
  ), /* @__PURE__ */ React.createElement("g", { clipPath: "url(#clip-path)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711",
      transform: "translate(0 0.534)",
      fill: color
    }
  )))));
  const Light = () => /* @__PURE__ */ React.createElement("g", { transform: "translate(3 17.5) rotate(-90)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M.5,8.95V0",
      transform: "translate(5.251 0.75)",
      fill: "none",
      stroke: color,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth
    }
  ), /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M0,0,5,7.937,10,0Z",
      transform: "translate(0.75 9.7)",
      fill: "none",
      stroke: color,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth
    }
  ));
  const Broken = () => /* @__PURE__ */ React.createElement("g", { transform: "translate(2.5 6)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468",
      transform: "translate(0.5 11.5) rotate(-90)",
      fill: color
    }
  ));
  const TwoTone = () => /* @__PURE__ */ React.createElement("g", { transform: "translate(3 17.5) rotate(-90)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M.5,8.95V0",
      transform: "translate(5.251 0.75)",
      fill: "none",
      stroke: secondaryColor,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth,
      opacity
    }
  ), /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M0,0,5,7.937,10,0Z",
      transform: "translate(0.75 9.7)",
      fill: "none",
      stroke: color,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth
    }
  ));
  const Curved = () => /* @__PURE__ */ React.createElement("g", { transform: "translate(3 17.5) rotate(-90)" }, /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M.5,8.95V0",
      transform: "translate(4.894 0.75)",
      fill: "none",
      stroke: color,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth
    }
  ), /* @__PURE__ */ React.createElement(
    "path",
    {
      d: "M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z",
      transform: "translate(0.75 9.7)",
      fill: "none",
      stroke: color,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeMiterlimit: "10",
      strokeWidth
    }
  ));
  switch (set) {
    case "bold":
      return /* @__PURE__ */ React.createElement(Bold, null);
    case "bulk":
      return /* @__PURE__ */ React.createElement(Bulk, null);
    case "broken":
      return /* @__PURE__ */ React.createElement(Broken, null);
    case "two-tone":
      return /* @__PURE__ */ React.createElement(TwoTone, null);
    case "curved":
      return /* @__PURE__ */ React.createElement(Curved, null);
    default:
      return /* @__PURE__ */ React.createElement(Light, null);
  }
};
CaretRight.displayName = "IconlyCaretRight";
CaretRight.propTypes = {
  opacity: import_prop_types.default.string,
  color: import_prop_types.default.string,
  secondaryColor: import_prop_types.default.string,
  set: import_prop_types.default.string,
  strokeWidth: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number])
};
var CaretRight_default = withIcon_default(CaretRight);

export {
  CaretRight_default
};
