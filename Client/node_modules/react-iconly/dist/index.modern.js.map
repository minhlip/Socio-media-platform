{"version":3,"file":"index.modern.js","sources":["../src/lib/context.js","../node_modules/prop-types/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/node_modules/react-is/index.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../src/lib/constants.js","../src/lib/utils.js","../src/lib/withIcon.js","../src/Icons/Search.js","../src/Icons/Folder.js","../src/Icons/Wallet.js","../src/Icons/Graph.js","../src/Icons/Bookmark.js","../src/Icons/Category.js","../src/Icons/Home.js","../src/Icons/Notification.js","../src/Icons/Chat.js","../src/Icons/Heart.js","../src/Icons/Heart2.js","../src/Icons/Paper.js","../src/Icons/PaperPlus.js","../src/Icons/PaperNegative.js","../src/Icons/PaperFail.js","../src/Icons/PaperDownload.js","../src/Icons/PaperUpload.js","../src/Icons/Send.js","../src/Icons/Password.js","../src/Icons/Swap.js","../src/Icons/Work.js","../src/Icons/Scan.js","../src/Icons/Activity.js","../src/Icons/Calendar.js","../src/Icons/Message.js","../src/Icons/Video.js","../src/Icons/Plus.js","../src/Icons/Chart.js","../src/Icons/Game.js","../src/Icons/Bag.js","../src/Icons/Bag2.js","../src/Icons/TicketStar.js","../src/Icons/MoreCircle.js","../src/Icons/MoreSquare.js","../src/Icons/Discount.js","../src/Icons/Buy.js","../src/Icons/InfoCircle.js","../src/Icons/InfoSquare.js","../src/Icons/Danger.js","../src/Icons/CloseSquare.js","../src/Icons/TickSquare.js","../src/Icons/Discovery.js","../src/Icons/Location.js","../src/Icons/Document.js","../src/Icons/Setting.js","../src/Icons/TimeSquare.js","../src/Icons/TimeCircle.js","../src/Icons/VolumeUp.js","../src/Icons/VolumeDown.js","../src/Icons/VolumeOff.js","../src/Icons/Star.js","../src/Icons/Ticket.js","../src/Icons/Camera.js","../src/Icons/User.js","../src/Icons/AddUser.js","../src/Icons/TwoUsers.js","../src/Icons/People.js","../src/Icons/Login.js","../src/Icons/Logout.js","../src/Icons/Download.js","../src/Icons/Upload.js","../src/Icons/Voice.js","../src/Icons/Voice2.js","../src/Icons/Delete.js","../src/Icons/Edit.js","../src/Icons/EditSquare.js","../src/Icons/Play.js","../src/Icons/ShieldDone.js","../src/Icons/ShieldFail.js","../src/Icons/Show.js","../src/Icons/Hide.js","../src/Icons/Filter.js","../src/Icons/Filter2.js","../src/Icons/Image.js","../src/Icons/Image2.js","../src/Icons/Call.js","../src/Icons/Calling.js","../src/Icons/CallMissed.js","../src/Icons/CallSilent.js","../src/Icons/Lock.js","../src/Icons/Unlock.js","../src/Icons/ChevronDownCircle.js","../src/Icons/ChevronRightCircle.js","../src/Icons/ChevronUpCircle.js","../src/Icons/ChevronLeftCircle.js","../src/Icons/ChevronDown.js","../src/Icons/ChevronRight.js","../src/Icons/ChevronUp.js","../src/Icons/ChevronLeft.js","../src/Icons/ArrowDownSquare.js","../src/Icons/ArrowRightSquare.js","../src/Icons/ArrowUpSquare.js","../src/Icons/ArrowLeftSquare.js","../src/Icons/ArrowDown.js","../src/Icons/ArrowRight.js","../src/Icons/ArrowUp.js","../src/Icons/ArrowLeft.js","../src/Icons/CaretRight.js","../src/Icons/CaretDown.js","../src/Icons/CaretUp.js","../src/Icons/CaretLeft.js","../src/lib/mapIcons.js"],"sourcesContent":["import React, { createContext, useContext } from 'react'\n\nexport const IconlyContext = createContext()\nIconlyContext.displayName = 'IconlyIconlyContext'\n\nexport const IconlyProvider = ({\n  children,\n  primaryColor,\n  secondaryColor,\n  set,\n  size,\n  stroke\n}) => {\n  const defaulValue = {\n    primaryColor: primaryColor || 'currentColor',\n    secondaryColor: secondaryColor || null,\n    set: set || 'light',\n    size: size || 'medium',\n    stroke: stroke || 'regular'\n  }\n\n  return (\n    <IconlyContext.Provider value={defaulValue}>\n      {children}\n    </IconlyContext.Provider>\n  )\n}\n\nexport const useIconlyTheme = () => {\n  const context = useContext(IconlyContext)\n  if (context === undefined) {\n    throw new Error(`useIconlyTheme must be used within a IconlyProvider`)\n  }\n  return context\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export const sizes = {\n  small: '16px',\n  medium: '24px',\n  large: '32px',\n  xlarge: '48px'\n}\n\nexport const strokes = {\n  light: '1px',\n  regular: '1.5px',\n  bold: '2px'\n}\n","import { sizes, strokes } from './constants'\n\nexport const isBrowser = typeof window !== `undefined`\n\nexport const getSize = (size) => {\n  if (Number.isInteger(size)) {\n    return `${size}px`\n  }\n  return size && sizes[size] ? sizes[size] : null\n}\n\nexport const getStroke = (stroke) => {\n  return stroke && strokes[stroke] ? strokes[stroke] : null\n}\n\nexport const getOpacity = (primaryColor, secondaryColor) => {\n  if (!secondaryColor) {\n    return '0.4'\n  }\n  return primaryColor === secondaryColor ? '0.4' : '1'\n}\n\nexport const getThemeProp = (prop, theme) => {\n  return theme && theme[prop] ? theme[prop] : null\n}\n","import React, { memo } from 'react'\nimport { getSize, getThemeProp, getStroke, getOpacity } from './utils'\nimport { IconlyContext } from './context'\nimport PropTypes from 'prop-types'\n\nfunction withIcon(Component) {\n  class IconWrapper extends React.Component {\n    static contextType = IconlyContext\n    render() {\n      const {\n        size,\n        label,\n        primaryColor,\n        secondaryColor,\n        filled,\n        set,\n        style,\n        stroke,\n        ...restProps\n      } = this.props\n      const theme = this.context\n      const iconSize =\n        getSize(size) || getSize(getThemeProp('size', theme)) || '24px'\n\n      const iconPrimaryColor =\n        primaryColor || getThemeProp('primaryColor', theme) || 'currentColor'\n\n      const iconSecondaryColor =\n        secondaryColor ||\n        getThemeProp('secondaryColor', theme) ||\n        iconPrimaryColor ||\n        'currentColor'\n\n      return (\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width={iconSize}\n          height={iconSize}\n          viewBox='0 0 24 24'\n          role={label ? 'img' : 'presentation'}\n          aria-label={label || undefined}\n          style={style}\n          {...restProps}\n        >\n          <Component\n            color={iconPrimaryColor}\n            opacity={getOpacity(primaryColor, secondaryColor)}\n            secondaryColor={iconSecondaryColor}\n            set={filled ? 'bold' : set || getThemeProp('set', theme) || 'light'}\n            strokeWidth={\n              stroke\n                ? getStroke(stroke)\n                : getStroke(getThemeProp('stroke', theme)) || '1.5px'\n            }\n          />\n        </svg>\n      )\n    }\n  }\n  IconWrapper.propTypes = {\n    /**\n     * String to use as the aria-label for the icon.\n     * **Use an empty string when you already have readable text around the icon,\n     * like text inside a button**!\n     */\n    label: PropTypes.string,\n\n    /**\n     * Set de icons sets to 'bold'\n     */\n    filled: PropTypes.bool,\n\n    /**\n     * For primary colour for icons.\n     */\n    primaryColor: PropTypes.string,\n\n    /**\n     * For secondary colour for 2-color icons.\n     */\n    secondaryColor: PropTypes.string,\n\n    /**\n     * Control the size of the icon.\n     */\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'medium', 'large', 'xlarge'])\n    ]),\n\n    /**\n     * Icon set option\n     *- Bold\n     *- Bulk\n     *- Light - Border (default)\n     *- Light - Outline\n     *- Broken\n     *- Two Tone\n     *- Curved\n     */\n    set: PropTypes.oneOf([\n      'bold',\n      'bulk',\n      'light',\n      'broken',\n      'two-tone',\n      'curved'\n    ]),\n\n    /**\n     * Line Stroke option\n     */\n    stroke: PropTypes.oneOf(['light', 'regular', 'bold']),\n\n    /**\n     * Custom styles property\n     */\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n  }\n\n  const MemoIcon = memo(IconWrapper)\n  return MemoIcon\n}\n\nexport default withIcon\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Search = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M17.741,19.608l-2.12-2.43a1.083,1.083,0,0,1,0-1.524.986.986,0,0,1,1.393,0l2.554,2.062h.045a1.348,1.348,0,0,1,0,1.892,1.315,1.315,0,0,1-1.872,0ZM0,8.67A8.624,8.624,0,0,1,8.578,0a8.531,8.531,0,0,1,6.065,2.54,8.716,8.716,0,0,1,2.512,6.13A8.624,8.624,0,0,1,8.578,17.34,8.624,8.624,0,0,1,0,8.67Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <ellipse\n        cx='8.599'\n        cy='8.653'\n        rx='8.599'\n        ry='8.653'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M3.278,4.577a1.321,1.321,0,0,1-.889-.385L.352,1.812A1.088,1.088,0,0,1,.272.29h0A.974.974,0,0,1,1.66.29L4.221,2.339a1.348,1.348,0,0,1,.291,1.431,1.335,1.335,0,0,1-1.18.851Z'\n        transform='translate(15.397 15.379)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g\n      transform='translate(2 2)'\n      fill='none'\n      stroke={color}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeMiterlimit={10}\n      strokeWidth={strokeWidth}\n    >\n      <circle\n        cx={8.989}\n        cy={8.989}\n        r={8.989}\n        transform='translate(.778 .778)'\n      />\n      <path d='M16.018 16.485L19.542 20' />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M19.756,18.607l-3.437-3.361h0l-.081-.123a.809.809,0,0,0-1.137,0h0a8.113,8.113,0,0,1-10.519.34A7.679,7.679,0,0,1,2.876,5.31,8.075,8.075,0,0,1,12.953,2.342a7.741,7.741,0,0,1,4.314,9.385.779.779,0,0,0,.182.772.822.822,0,0,0,.774.232.8.8,0,0,0,.593-.54h0a9.334,9.334,0,0,0-5-11.25A9.754,9.754,0,0,0,1.689,4.085,9.256,9.256,0,0,0,3.049,16.28a9.789,9.789,0,0,0,12.535.515l3.044,2.976a.819.819,0,0,0,1.137,0,.784.784,0,0,0,0-1.12h0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <circle\n        cx='8.989'\n        cy='8.989'\n        r='8.989'\n        transform='translate(0.778 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.524,3.515'\n        transform='translate(16.018 16.485)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.561,0A8.561,8.561,0,1,1,0,8.561,8.561,8.561,0,0,1,8.561,0Z'\n        transform='translate(0.714 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.411,0A1.411,1.411,0,1,1,0,1.41,1.411,1.411,0,0,1,1.411,0Z'\n        transform='translate(16.488 16.488)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nSearch.displayName = 'IconlySearch'\nSearch.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Search)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Folder = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.75,20H6.24C2.391,20,0,17.606,0,13.75V6.241C0,2.1,1.84,0,5.47,0H7.081A2.956,2.956,0,0,1,9.42,1.15L10.3,2.32a1.472,1.472,0,0,0,1.15.56h3.07a5.446,5.446,0,0,1,4,1.361A6.36,6.36,0,0,1,20,8.89v4.87a6.278,6.278,0,0,1-1.674,4.568A6.3,6.3,0,0,1,13.75,20ZM5.37,11.79a.743.743,0,0,0-.751.751.751.751,0,0,0,.751.75h9.26a.746.746,0,0,0,.74-.75.737.737,0,0,0-.74-.751Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.884,3.115H11.941a2.429,2.429,0,0,1-1.894-.887L9.078.888A2.367,2.367,0,0,0,7.193,0H5.113C1.378,0,0,2.192,0,5.919V9.947c0,.443,20,.442,20,0V8.776C20.015,5.049,18.672,3.115,14.884,3.115Z'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M14.367,16.9h0c-.1,0-.207,0-.309-.008H5.931c-.1.005-.2.008-.307.008a6.017,6.017,0,0,1-4.068-1.578,4.487,4.487,0,0,1-.667-.887,5.8,5.8,0,0,1-.782-2.183A8.148,8.148,0,0,1,0,10.93V5.677A12.144,12.144,0,0,1,.071,4.363c.01-.076.025-.151.04-.224a1.894,1.894,0,0,0,.049-.37A5.619,5.619,0,0,1,.649,2.252C1.353.747,2.808.015,5.095.015h9.78c.133-.01.269-.016.4-.016A5.241,5.241,0,0,1,18.5,1.116a2.78,2.78,0,0,1,.329.329,3.935,3.935,0,0,1,.729,1.269A8.51,8.51,0,0,1,20,5.677V10.93a9.441,9.441,0,0,1-.1,1.322,5.961,5.961,0,0,1-.8,2.183,4.445,4.445,0,0,1-.676.887A5.983,5.983,0,0,1,14.367,16.9Zm-9.4-8.11a.825.825,0,1,0,0,1.651H15.09a.826.826,0,0,0,.825-.8.742.742,0,0,0-.177-.533.788.788,0,0,0-.623-.319Z'\n        transform='translate(0 3.099)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(1.5 1.5)'>\n      <path\n        d='M19.169,13.482c0,3.578-2.109,5.687-5.687,5.687H5.7c-3.587,0-5.7-2.109-5.7-5.687v-7.8C0,2.109,1.314,0,4.893,0h2A2.282,2.282,0,0,1,8.717.913L9.63,2.127a2.291,2.291,0,0,0,1.826.913h2.83c3.587,0,4.911,1.826,4.911,5.477Z'\n        transform='translate(0.776 0.776)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.456H9.593'\n        transform='translate(5.559 12.533)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M19.235,10.677A.765.765,0,0,0,20,9.912V8.892c0-4.046-1.8-6.016-5.495-6.016H11.78a1.424,1.424,0,0,1-1.134-.554l-.879-1.17A2.989,2.989,0,0,0,7.4,0H5.486C1.846,0,0,2.1,0,6.253v7.5C0,17.608,2.391,20,6.251,20h7.49c3.851,0,6.251-2.392,6.251-6.245a.774.774,0,0,0-1.538,0c0,3.034-1.67,4.714-4.712,4.714h-7.5C3.2,18.47,1.53,16.8,1.53,13.755v-.73H13.837a.765.765,0,0,0,0-1.53H1.53V6.218C1.53,2.911,2.708,1.5,5.477,1.5H7.411a1.468,1.468,0,0,1,1.134.563l.879,1.161A2.962,2.962,0,0,0,11.78,4.4H14.5c2.857,0,3.965,1.275,3.965,4.494v1.02a.765.765,0,0,0,.774.765Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 1.5)'>\n      <path\n        d='M19.169,13.482c0,3.578-2.109,5.687-5.687,5.687H5.7c-3.587,0-5.7-2.109-5.7-5.687v-7.8C0,2.109,1.314,0,4.893,0h2A2.282,2.282,0,0,1,8.717.913L9.63,2.127a2.291,2.291,0,0,0,1.826.913h2.83c3.587,0,4.911,1.826,4.911,5.477Z'\n        transform='translate(0.776 0.776)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.456H9.593'\n        transform='translate(5.559 12.533)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M0,.476H9.593'\n        transform='translate(4.806 11.598)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.3C0,2.856,1.25.759,3.622.273a8.088,8.088,0,0,1,5.67.489c1.5.808,1.069,2,2.608,2.875s4.017-.44,5.635,1.306c1.694,1.828,1.685,4.633,1.685,6.422,0,6.8-3.807,7.335-9.61,7.335S0,18.229,0,11.364Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nFolder.displayName = 'IconlyFolder'\nFolder.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Folder)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Wallet = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.515,18H5.485a5.64,5.64,0,0,1-4.036-1.411A5.323,5.323,0,0,1,0,12.661V5.339A5.323,5.323,0,0,1,1.449,1.411,5.64,5.64,0,0,1,5.485,0h9.031a5.618,5.618,0,0,1,4.036,1.417A5.392,5.392,0,0,1,20,5.382H15.769v.034a3.583,3.583,0,0,0-2.513,1.017,3.4,3.4,0,0,0-1.043,2.449,3.516,3.516,0,0,0,3.556,3.467H20v.311a5.323,5.323,0,0,1-1.449,3.928A5.64,5.64,0,0,1,14.515,18ZM4.738,3.892a.757.757,0,0,0-.764.736.766.766,0,0,0,.764.754h5.645a.745.745,0,1,0,0-1.49Zm14.515,6.967H15.819A2.1,2.1,0,0,1,13.76,9.265a1.977,1.977,0,0,1,.433-1.652,2.089,2.089,0,0,1,1.576-.74h3.484A.739.739,0,0,1,20,7.6v2.531A.75.75,0,0,1,19.253,10.858ZM15.91,8.042a.757.757,0,0,0-.53.212.732.732,0,0,0-.225.524.766.766,0,0,0,.765.754h.329a.745.745,0,1,0,0-1.49H15.91Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.517,18H5.484a5.633,5.633,0,0,1-4.034-1.413A5.332,5.332,0,0,1,0,12.654V5.338A5.32,5.32,0,0,1,1.449,1.409,5.641,5.641,0,0,1,5.484,0h9.03a5.639,5.639,0,0,1,4.034,1.409A5.321,5.321,0,0,1,20,5.338v.037H15.762a3.54,3.54,0,0,0-3.57,3.482,3.421,3.421,0,0,0,1.044,2.467,3.6,3.6,0,0,0,2.527,1.024H20v.306a5.333,5.333,0,0,1-1.449,3.933A5.632,5.632,0,0,1,14.517,18ZM4.739,3.875a.759.759,0,0,0-.761.744.731.731,0,0,0,.222.528.769.769,0,0,0,.54.221H10.39a.769.769,0,0,0,.54-.221.733.733,0,0,0,.222-.529.759.759,0,0,0-.767-.743Z'\n        fill={color}\n      />\n      <path\n        d='M.037,2.4a2.018,2.018,0,0,0,2,1.6h3.25A.726.726,0,0,0,6,3.266V.734A.728.728,0,0,0,5.283,0H1.956A1.985,1.985,0,0,0,0,2.01,2.031,2.031,0,0,0,.037,2.4'\n        transform='translate(14 6.9)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <circle\n        id='Oval'\n        cx='1'\n        cy='1'\n        r='1'\n        transform='translate(15 7.9)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M6.74,5.383H2.692A2.691,2.691,0,1,1,2.692,0H6.74'\n        transform='translate(12.398 6.013)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.612.456H.3'\n        transform='translate(14.937 8.187)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.248,0h8.643a5.248,5.248,0,0,1,5.248,5.248v7.177a5.248,5.248,0,0,1-5.248,5.248H5.248A5.248,5.248,0,0,1,0,12.425V5.248A5.248,5.248,0,0,1,5.248,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.456H5.4'\n        transform='translate(4.536 4.082)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M13.548,18.318a.675.675,0,0,1,.667-.682,4.509,4.509,0,0,0,4.452-4.554V7.365H15.383a2,2,0,0,0,0,4.008h1.364a.682.682,0,0,1,0,1.364H15.383a3.369,3.369,0,0,1,0-6.736h3.284V5.919a4.509,4.509,0,0,0-4.452-4.555H5.785A4.455,4.455,0,0,0,1.567,4.528h8.788a.682.682,0,0,1,0,1.364H1.336c0,.009,0,.017,0,.027v7.162a4.508,4.508,0,0,0,4.452,4.554h4.241a.682.682,0,0,1,0,1.364H5.785A5.859,5.859,0,0,1,0,13.082V5.919A5.859,5.859,0,0,1,5.785,0h8.429A5.86,5.86,0,0,1,20,5.919v7.162A5.86,5.86,0,0,1,14.215,19,.675.675,0,0,1,13.548,18.318Zm1.98-8.329a.682.682,0,0,1,0-1.364h.3a.682.682,0,0,1,0,1.364Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M6.74,5.383H2.692A2.691,2.691,0,1,1,2.692,0H6.74'\n        transform='translate(12.398 6.013)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.612.456H.3'\n        transform='translate(14.937 8.187)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.248,0h8.643a5.248,5.248,0,0,1,5.248,5.248v7.177a5.248,5.248,0,0,1-5.248,5.248H5.248A5.248,5.248,0,0,1,0,12.425V5.248A5.248,5.248,0,0,1,5.248,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.456H5.4'\n        transform='translate(4.536 4.082)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M6.45,5.127H2.563A2.563,2.563,0,0,1,2.563,0H6.419'\n        transform='translate(12.722 6.549)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.625.476h-.3'\n        transform='translate(15.097 8.577)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.476H4.06'\n        transform='translate(5.606 4.668)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,8.539C0,2.134,2.325,0,9.3,0s9.3,2.134,9.3,8.539-2.325,8.539-9.3,8.539S0,14.943,0,8.539Z'\n        transform='translate(0.714 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nWallet.displayName = 'IconlyWallet'\nWallet.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Wallet)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Graph = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M1.088,15.514A8.2,8.2,0,0,1,.065,12.378,5.93,5.93,0,0,1,0,11.391,8.694,8.694,0,0,1,6.956,2.959a1.1,1.1,0,0,1,1.2.6,1.1,1.1,0,0,1,.127.257c.136,2.1.281,4.158.417,6.22a1.851,1.851,0,0,0,.1.63,1.023,1.023,0,0,0,1.005.631l6.656-.426.046.017a1.085,1.085,0,0,1,.756.322,1.048,1.048,0,0,1,.3.753A8.671,8.671,0,0,1,10.683,19.8a8.948,8.948,0,0,1-1.889.2A8.813,8.813,0,0,1,1.088,15.514Zm9.784-6.423a.88.88,0,0,1-.293-.658L10.062.889V.765A.793.793,0,0,1,10.327.21.823.823,0,0,1,10.913,0,9.422,9.422,0,0,1,20,7.89a.3.3,0,0,1,0,.08.786.786,0,0,1-.2.575.813.813,0,0,1-.555.269l-7.679.507q-.041,0-.082,0A.915.915,0,0,1,10.872,9.091Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.153.644a1.06,1.06,0,0,1,.1.329l.278,4.14h0l.138,2.081a2.14,2.14,0,0,0,.1.631,1.043,1.043,0,0,0,1.005.631l6.657-.435a1.1,1.1,0,0,1,.774.3,1.06,1.06,0,0,1,.319.609l.012.14a8.682,8.682,0,0,1-6.884,7.818,8.856,8.856,0,0,1-9.592-4.263,8.214,8.214,0,0,1-1-3.146A6.018,6.018,0,0,1,0,8.491,8.7,8.7,0,0,1,6.984.013,1.091,1.091,0,0,1,8.153.644Z'\n        transform='translate(0 2.911)'\n        fill={color}\n      />\n      <path\n        d='M.849,0a9.444,9.444,0,0,1,9.13,7.811l-.007.033h0l-.02.047,0,.13a.8.8,0,0,1-.192.472.827.827,0,0,1-.462.271l-.11.015-7.681.5a.917.917,0,0,1-.7-.227.884.884,0,0,1-.288-.537L.007.845a.122.122,0,0,1,0-.08A.785.785,0,0,1,.265.21.815.815,0,0,1,.849,0Z'\n        transform='translate(10.021 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.7,6.975A8.311,8.311,0,0,0,.741,0,.714.714,0,0,0,0,.687H0V.751L.449,7.461a.824.824,0,0,0,.87.769l6.728-.449A.714.714,0,0,0,8.7,7.012Z'\n        transform='translate(10.819 0.777)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.145.024A.915.915,0,0,1,7.189.545a.824.824,0,0,1,.082.3c.092,1.3.284,4.146.394,5.684a1.043,1.043,0,0,0,1.117.97h0l5.648-.348a.915.915,0,0,1,.97.915h0A7.7,7.7,0,0,1,.974,11.264a7.323,7.323,0,0,1-.915-2.8A4.723,4.723,0,0,1,0,7.548,7.707,7.707,0,0,1,6.136.024'\n        transform='translate(0.756 4.745)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M4.511,18.085a8.249,8.249,0,0,1-4.447-6.4A5.112,5.112,0,0,1,0,10.721,8.287,8.287,0,0,1,6.629,2.613a.8.8,0,1,1,.316,1.568,6.708,6.708,0,0,0-5.339,6.566,4.152,4.152,0,0,0,.044.74,6.732,6.732,0,0,0,13.149,1,.808.808,0,0,1,.982-.549.794.794,0,0,1,.495.362.779.779,0,0,1,.083.6A8.367,8.367,0,0,1,8.312,19,8.345,8.345,0,0,1,4.511,18.085ZM11.924,9.58a1.61,1.61,0,0,1-1.6-1.463L9.89,1.577A1.472,1.472,0,0,1,10.3.462,1.561,1.561,0,0,1,11.408,0h.033a8.92,8.92,0,0,1,8.547,7.438H20v.14a1.47,1.47,0,0,1-.367,1.072,1.488,1.488,0,0,1-1.026.495l-6.575.436Zm0-1.568,6.486-.427a7.3,7.3,0,0,0-2.4-4.21,7.391,7.391,0,0,0-4.525-1.789Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.7,6.975A8.311,8.311,0,0,0,.741,0,.714.714,0,0,0,0,.687H0V.751L.449,7.461a.824.824,0,0,0,.87.769l6.728-.449A.714.714,0,0,0,8.7,7.012Z'\n        transform='translate(10.819 0.777)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M6.145.024A.915.915,0,0,1,7.189.545a.824.824,0,0,1,.082.3c.092,1.3.284,4.146.394,5.684a1.043,1.043,0,0,0,1.117.97h0l5.648-.348a.915.915,0,0,1,.97.915h0A7.7,7.7,0,0,1,.974,11.264a7.323,7.323,0,0,1-.915-2.8A4.723,4.723,0,0,1,0,7.548,7.707,7.707,0,0,1,6.136.024'\n        transform='translate(0.756 4.745)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.2 2)'>\n      <path\n        d='M.67.6C-.038,1.414-.32,6.539.5,7.363s5.768.406,6.956-.529C10.317,4.583,2.93-2,.67.6Z'\n        transform='translate(10.809 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M15.188,7.984c1.084,1.084-1.79,7.264-7.486,7.264A7.7,7.7,0,0,1,0,7.547c0-5.3,5.229-8.69,6.728-7.191.863.863-.109,4.924,1.439,6.473S14.1,6.9,15.188,7.984Z'\n        transform='translate(0.75 3.806)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nGraph.displayName = 'IconlyGraph'\nGraph.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Graph)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Bookmark = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M14.986,20a1.026,1.026,0,0,1-.515-.141L7.99,16.62,1.5,19.86a1.069,1.069,0,0,1-.491.13A1.016,1.016,0,0,1,0,18.97V3.79A3.316,3.316,0,0,1,1.437.875,6.154,6.154,0,0,1,4.9,0h6.17a6.181,6.181,0,0,1,3.47.875A3.362,3.362,0,0,1,16,3.79V18.97a1.022,1.022,0,0,1-.74.99A.933.933,0,0,1,14.986,20ZM4.22,6.04a.79.79,0,0,0,0,1.58h7.53a.79.79,0,0,0,0-1.58Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Bulk = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M7.991,4.913,1.5,8.155a1.019,1.019,0,0,1-1.376-.4A1.09,1.09,0,0,1,0,7.258V0C0,.72.406,1.164,1.473,1.661Z'\n        transform='translate(0 11.709)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M14.98,20a1.012,1.012,0,0,1-.506-.136L7.991,16.621,1.473,13.37C.4,12.87,0,12.419,0,11.709V3.793A3.322,3.322,0,0,1,1.435.874,6.145,6.145,0,0,1,4.9,0h6.174A6.188,6.188,0,0,1,14.54.874,3.36,3.36,0,0,1,16,3.793V18.967a1.065,1.065,0,0,1-.123.489,1.023,1.023,0,0,1-.616.5A1.012,1.012,0,0,1,14.98,20ZM4.225,6.041a.791.791,0,0,0,0,1.581h7.524a.791.791,0,0,0,0-1.581Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.368,15.854,1.437,19.1a.989.989,0,0,1-1.318-.394h0A1.043,1.043,0,0,1,0,18.243V3.844C0,1.1,1.876,0,4.577,0H10.92C13.538,0,15.5,1.025,15.5,3.661V18.243a.979.979,0,0,1-.979.979,1.08,1.08,0,0,1-.476-.119L8.073,15.854A.741.741,0,0,0,7.368,15.854Z'\n        transform='translate(0.796 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.458H7.3'\n        transform='translate(4.87 6.865)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M11.526,0h-6.9C1.784,0,0,1.986,0,5.172V18.323A1.658,1.658,0,0,0,1.638,20a1.625,1.625,0,0,0,.784-.2l5.612-3.116,6.534,3.133a.709.709,0,0,0,.555,0,.733.733,0,0,0,.394-.4.759.759,0,0,0-.319-.883L8.707,15.428a1.385,1.385,0,0,0-1.362,0L1.724,18.535a.211.211,0,0,1-.207,0,.213.213,0,0,1-.095-.185V5.172c.009-2.357,1.164-3.7,3.233-3.7h6.9c2.655,0,3.043,2.207,3.043,3.53v.6H7.129a.708.708,0,0,0-.5.233.743.743,0,0,0-.191.526.715.715,0,0,0,.69.706h7.44v7.723A.716.716,0,1,0,16,14.8h0V5C16,1.915,14.293,0,11.526,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.368,15.854,1.437,19.1a.989.989,0,0,1-1.318-.394h0A1.043,1.043,0,0,1,0,18.243V3.844C0,1.1,1.876,0,4.577,0H10.92C13.538,0,15.5,1.025,15.5,3.661V18.243a.979.979,0,0,1-.979.979,1.08,1.08,0,0,1-.476-.119L8.073,15.854A.741.741,0,0,0,7.368,15.854Z'\n        transform='translate(0.796 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.458H7.3'\n        transform='translate(4.87 6.865)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(4.5 2.5)'>\n      <path\n        d='M0,.5H6.855'\n        transform='translate(4.042 6.218)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.47,0C1.083,0,0,.932,0,8.429,0,16.822-.153,19,1.443,19s4.2-3.684,6.027-3.684S11.9,19,13.5,19s1.439-2.178,1.439-10.571C14.936.932,13.857,0,7.47,0Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nBookmark.displayName = 'IconlyBookmark'\nBookmark.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Bookmark)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Category = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.081,20a2.549,2.549,0,0,1-2.541-2.56V14.031a2.543,2.543,0,0,1,2.541-2.561h3.38A2.549,2.549,0,0,1,20,14.031v3.408A2.554,2.554,0,0,1,17.46,20ZM2.54,20A2.555,2.555,0,0,1,0,17.439V14.031A2.549,2.549,0,0,1,2.54,11.47H5.92a2.543,2.543,0,0,1,2.54,2.561v3.408A2.548,2.548,0,0,1,5.92,20ZM14.081,8.53A2.542,2.542,0,0,1,11.54,5.97V2.561A2.549,2.549,0,0,1,14.081,0h3.38A2.554,2.554,0,0,1,20,2.561V5.97a2.548,2.548,0,0,1-2.54,2.56ZM2.54,8.53A2.548,2.548,0,0,1,0,5.97V2.561A2.555,2.555,0,0,1,2.54,0H5.92A2.549,2.549,0,0,1,8.46,2.561V5.97A2.542,2.542,0,0,1,5.92,8.53Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.539,0H5.924A2.549,2.549,0,0,1,8.463,2.56V5.975a2.549,2.549,0,0,1-2.539,2.56H2.539A2.549,2.549,0,0,1,0,5.975V2.56A2.549,2.549,0,0,1,2.539,0'\n        transform='translate(11.537 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M14.075,20a2.549,2.549,0,0,1-2.538-2.56V14.026a2.549,2.549,0,0,1,2.538-2.561h3.387A2.549,2.549,0,0,1,20,14.026V17.44A2.549,2.549,0,0,1,17.462,20ZM2.539,20A2.55,2.55,0,0,1,0,17.44V14.026a2.55,2.55,0,0,1,2.539-2.561H5.925a2.549,2.549,0,0,1,2.538,2.561V17.44A2.549,2.549,0,0,1,5.925,20Zm0-11.465A2.549,2.549,0,0,1,0,5.974V2.56A2.549,2.549,0,0,1,2.539,0H5.925A2.548,2.548,0,0,1,8.463,2.56V5.974A2.549,2.549,0,0,1,5.925,8.535Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.449,0H5.716A2.459,2.459,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(11.837 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.471V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(0 11.766)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.449,0H5.716A2.46,2.46,0,0,1,8.163,2.471V5.764a2.459,2.459,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(11.837 11.766)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M13.3,19a2.932,2.932,0,0,1-2.875-2.944V13.186A2.908,2.908,0,0,1,13.3,10.252h2.813A2.931,2.931,0,0,1,19,13.186v2.871A2.943,2.943,0,0,1,16.117,19Zm-1.332-5.815v2.871a1.36,1.36,0,0,0,.388.964,1.3,1.3,0,0,0,.934.4h2.832a1.3,1.3,0,0,0,.934-.4,1.357,1.357,0,0,0,.387-.964V13.186a1.368,1.368,0,0,0-.39-.961,1.311,1.311,0,0,0-.941-.4H13.3A1.347,1.347,0,0,0,11.973,13.186Zm-9.09,5.8A2.976,2.976,0,0,1,0,16.048V13.186a2.966,2.966,0,0,1,.845-2.078,2.842,2.842,0,0,1,2.038-.856H4.038a.769.769,0,0,1,.74.367.805.805,0,0,1,0,.84.77.77,0,0,1-.74.368H2.883a1.354,1.354,0,0,0-1.34,1.359v2.835a1.381,1.381,0,0,0,1.34,1.359H5.713a1.313,1.313,0,0,0,.947-.4,1.371,1.371,0,0,0,.393-.964V11.764a.8.8,0,0,1,.347-.813.763.763,0,0,1,.869.025.8.8,0,0,1,.3.832v4.239a2.913,2.913,0,0,1-2.883,2.943ZM14.989,8.776a.794.794,0,0,1,0-1.576h1.129a1.323,1.323,0,0,0,.948-.41,1.386,1.386,0,0,0,.383-.977V2.943a1.364,1.364,0,0,0-1.331-1.359H13.3a1.346,1.346,0,0,0-1.332,1.359V7.236a.791.791,0,0,1-.793.774.761.761,0,0,1-.541-.245A.794.794,0,0,1,10.43,7.2V2.943A2.967,2.967,0,0,1,11.269.862,2.846,2.846,0,0,1,13.3,0h2.813a2.976,2.976,0,0,1,2.874,2.943V5.805a2.966,2.966,0,0,1-.816,2.085,2.85,2.85,0,0,1-2.022.886ZM5.7,8.749H2.883A2.933,2.933,0,0,1,0,5.814V2.943A2.943,2.943,0,0,1,2.883,0H5.7A2.93,2.93,0,0,1,8.579,2.943V5.814a2.946,2.946,0,0,1-.845,2.078A2.829,2.829,0,0,1,5.7,8.749ZM1.924,1.973a1.381,1.381,0,0,0-.4.97V5.814a1.378,1.378,0,0,0,.39.988,1.319,1.319,0,0,0,.939.4H5.7a1.318,1.318,0,0,0,.949-.41,1.377,1.377,0,0,0,.383-.977V2.943A1.361,1.361,0,0,0,5.7,1.584H2.857A1.311,1.311,0,0,0,1.924,1.973Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.449,0H5.716A2.459,2.459,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(11.837 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.471V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(0 11.766)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.449,0H5.716A2.46,2.46,0,0,1,8.163,2.471V5.764a2.459,2.459,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z'\n        transform='translate(11.837 11.766)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z'\n        transform='translate(10.654 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z'\n        transform='translate(10.654 10.588)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.673,3.673,0,0,1,7.347,3.674Z'\n        transform='translate(0 10.588)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCategory.displayName = 'IconlyCategory'\nCategory.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Category)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Home = ({ color, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M6.635,18.773V15.716A1.419,1.419,0,0,1,8.058,14.3h2.874a1.429,1.429,0,0,1,1.007.414,1.408,1.408,0,0,1,.417,1v3.058a1.213,1.213,0,0,0,.356.867,1.231,1.231,0,0,0,.871.36h1.961a3.46,3.46,0,0,0,2.443-1A3.41,3.41,0,0,0,19,16.578V7.867a2.473,2.473,0,0,0-.9-1.9L11.434.676A3.1,3.1,0,0,0,7.485.747L.967,5.965A2.474,2.474,0,0,0,0,7.867v8.7A3.444,3.444,0,0,0,3.456,20H5.372a1.231,1.231,0,0,0,1.236-1.218Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M6.657,18.771V15.7a1.426,1.426,0,0,1,1.424-1.419h2.886A1.426,1.426,0,0,1,12.4,15.7h0v3.076A1.225,1.225,0,0,0,13.6,20h1.924A3.456,3.456,0,0,0,19,16.562h0V7.838a2.439,2.439,0,0,0-.962-1.9L11.458.685a3.18,3.18,0,0,0-3.944,0L.962,5.943A2.42,2.42,0,0,0,0,7.847v8.714A3.456,3.456,0,0,0,3.473,20H5.4a1.235,1.235,0,0,0,1.241-1.229h0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2.004)'>\n      <path\n        d='M3.921,19.84A3.93,3.93,0,0,1,0,15.917V7.952A3.025,3.025,0,0,1,1.174,5.6L1.9,5.065a.783.783,0,0,1,.9,1.244l-.7.522a1.469,1.469,0,0,0-.531,1.121v7.957a2.365,2.365,0,0,0,2.356,2.347h4v.018a.783.783,0,0,1,0,1.565Zm9.2-.009a1.9,1.9,0,0,1-1.9-1.9v-3.6a.5.5,0,0,0-.5-.5H8.1a.5.5,0,0,0-.5.513v1.373a.783.783,0,1,1-1.565,0V14.344a2.08,2.08,0,0,1,2.078-2.079h2.609a2.079,2.079,0,0,1,2.07,2.079v3.591a.33.33,0,0,0,.33.33H14.9a2.348,2.348,0,0,0,2.348-2.348V7.952a1.471,1.471,0,0,0-.556-1.13L10.687,2.03a2.052,2.052,0,0,0-2.608,0L6.148,3.474a.8.8,0,1,1-.931-1.3L7.122.8a3.609,3.609,0,0,1,4.522,0l6.009,4.792a3.052,3.052,0,0,1,1.138,2.348l-.008,7.974a3.922,3.922,0,0,1-3.922,3.921Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M6.657,18.771V15.7a1.426,1.426,0,0,1,1.424-1.419h2.886A1.426,1.426,0,0,1,12.4,15.7h0v3.076A1.225,1.225,0,0,0,13.6,20h1.924A3.456,3.456,0,0,0,19,16.562h0V7.838a2.439,2.439,0,0,0-.962-1.9L11.458.685a3.18,3.18,0,0,0-3.944,0L.962,5.943A2.42,2.42,0,0,0,0,7.847v8.714A3.456,3.456,0,0,0,3.473,20H5.4a1.235,1.235,0,0,0,1.241-1.229h0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.4 2)'>\n      <path\n        d='M0,.5H5.815'\n        transform='translate(6.679 13.635)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,11.713c0-5.631.614-5.238,3.919-8.3C5.365,2.246,7.615,0,9.558,0s4.237,2.235,5.7,3.41c3.305,3.065,3.918,2.672,3.918,8.3C19.172,20,17.213,20,9.586,20S0,20,0,11.713Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bold />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nHome.displayName = 'IconlyHome'\nHome.propTypes = {\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Home)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Notification = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.983,19.967a3.619,3.619,0,0,1-1.714-.733,1.551,1.551,0,0,1-.7-1.173c0-.5.462-.734.889-.833a25.955,25.955,0,0,1,4.046,0c.427.1.889.329.889.833a1.553,1.553,0,0,1-.695,1.174,3.635,3.635,0,0,1-1.713.732A4,4,0,0,1,8.48,20,3.667,3.667,0,0,1,7.983,19.967ZM3.764,15.747a4.535,4.535,0,0,1-2.9-1.413A3.615,3.615,0,0,1,0,11.956a3.368,3.368,0,0,1,.731-2.31A3.8,3.8,0,0,0,1.794,6.8V6.37A5.625,5.625,0,0,1,3.077,2.512,7.073,7.073,0,0,1,8.456,0h.09a7.041,7.041,0,0,1,5.467,2.624,5.546,5.546,0,0,1,1.2,3.746V6.8a3.889,3.889,0,0,0,1.062,2.849A3.364,3.364,0,0,1,17,11.956a3.614,3.614,0,0,1-.863,2.379,4.539,4.539,0,0,1-2.9,1.413c-1.571.133-3.144.247-4.737.247A41.689,41.689,0,0,1,3.764,15.747Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M16.27,9.645A3.884,3.884,0,0,1,15.207,6.8V6.37a5.546,5.546,0,0,0-1.2-3.746A7.041,7.041,0,0,0,8.544,0H8.456A7.071,7.071,0,0,0,3.077,2.513,5.623,5.623,0,0,0,1.793,6.37V6.8A3.8,3.8,0,0,1,.73,9.645,3.363,3.363,0,0,0,0,11.956a3.608,3.608,0,0,0,.864,2.378,4.532,4.532,0,0,0,2.9,1.413,41.646,41.646,0,0,0,4.737.247c1.593,0,3.164-.113,4.737-.247a4.532,4.532,0,0,0,2.9-1.413A3.614,3.614,0,0,0,17,11.956a3.363,3.363,0,0,0-.73-2.31'\n        transform='translate(0)'\n        fill={color}\n      />\n      <path\n        d='M4.936.08A25.6,25.6,0,0,0,.89.08C.462.179,0,.408,0,.912A1.55,1.55,0,0,0,.7,2.085h0a3.635,3.635,0,0,0,1.714.732,3.836,3.836,0,0,0,1.008,0A3.636,3.636,0,0,0,5.13,2.086h0a1.55,1.55,0,0,0,.7-1.173c0-.5-.462-.733-.89-.832'\n        transform='translate(5.573 17.148)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M0,11.787v-.219A3.6,3.6,0,0,1,.6,9.75,4.87,4.87,0,0,0,1.8,7.436c0-.666,0-1.342.058-2.009C2.155,2.218,5.327,0,8.461,0h.078c3.134,0,6.306,2.218,6.617,5.427.058.666,0,1.342.049,2.009A4.955,4.955,0,0,0,16.4,9.759a3.506,3.506,0,0,1,.6,1.809v.209a3.566,3.566,0,0,1-.844,2.39A4.505,4.505,0,0,1,13.3,15.538a45.078,45.078,0,0,1-9.615,0A4.554,4.554,0,0,1,.835,14.167,3.6,3.6,0,0,1,0,11.787Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A3.061,3.061,0,0,0,2.037,1.127,3.088,3.088,0,0,0,4.288.5,2.886,2.886,0,0,0,4.812,0'\n        transform='translate(6.055 18.852)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M5.679,18.618a.756.756,0,0,1,.1-1.069.769.769,0,0,1,1.077.1,2.064,2.064,0,0,0,.418.413,1.987,1.987,0,0,0,2.777-.413h.009a.77.77,0,0,1,1.078-.1.755.755,0,0,1,.1,1.069,3.491,3.491,0,0,1-5.563,0Zm-1.641-2.78A4.834,4.834,0,0,1,.968,14.3,4.079,4.079,0,0,1,0,11.561v-.122a4.207,4.207,0,0,1,.728-2.1L.8,9.248a3.833,3.833,0,0,0,.887-1.76V5.675a.765.765,0,0,1,1.464.158V7.646a.431.431,0,0,1,0,.1,5.26,5.26,0,0,1-1.225,2.446,2.531,2.531,0,0,0-.39,1.25v.194a2.574,2.574,0,0,0,.585,1.715,3.319,3.319,0,0,0,2.076.986,40.05,40.05,0,0,0,8.588,0,3.326,3.326,0,0,0,2.12-1.03,2.543,2.543,0,0,0,.559-1.663v-.2a2.629,2.629,0,0,0-.381-1.258,5.269,5.269,0,0,1-1.3-2.446.584.584,0,0,1,0-.1V5.816c-.257-2.657-2.928-4.3-5.252-4.3a5.76,5.76,0,0,0-2.821.73.769.769,0,0,1-.777.005A.753.753,0,0,1,4.97.924,7.241,7.241,0,0,1,8.465,0c3.069,0,6.512,2.164,6.9,5.64V7.453a3.75,3.75,0,0,0,.887,1.76.747.747,0,0,1,.071.1A4.055,4.055,0,0,1,17,11.36l-.027.184a4.14,4.14,0,0,1-.941,2.754,4.884,4.884,0,0,1-3.123,1.54,40.7,40.7,0,0,1-4.435.242A40.723,40.723,0,0,1,4.038,15.838Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M0,11.787v-.219A3.6,3.6,0,0,1,.6,9.75,4.87,4.87,0,0,0,1.8,7.436c0-.666,0-1.342.058-2.009C2.155,2.218,5.327,0,8.461,0h.078c3.134,0,6.306,2.218,6.617,5.427.058.666,0,1.342.049,2.009A4.955,4.955,0,0,0,16.4,9.759a3.506,3.506,0,0,1,.6,1.809v.209a3.566,3.566,0,0,1-.844,2.39A4.505,4.505,0,0,1,13.3,15.538a45.078,45.078,0,0,1-9.615,0A4.554,4.554,0,0,1,.835,14.167,3.6,3.6,0,0,1,0,11.787Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A3.061,3.061,0,0,0,2.037,1.127,3.088,3.088,0,0,0,4.288.5,2.886,2.886,0,0,0,4.812,0'\n        transform='translate(6.055 18.852)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(4.615 2.514)'>\n      <path\n        d='M7.382,0C2.947,0,1.021,4.015,1.021,6.67c0,1.984.288,1.4-.81,3.82-1.341,3.449,4.051,4.858,7.171,4.858s8.511-1.41,7.171-4.858c-1.1-2.42-.81-1.836-.81-3.82C13.743,4.015,11.815,0,7.382,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.62,0A2.992,2.992,0,0,1,0,0'\n        transform='translate(5.071 17.998)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nNotification.displayName = 'IconlyNotification'\nNotification.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Notification)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Chat = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20a9.955,9.955,0,0,1-4.92-1.3,2.2,2.2,0,0,0-1.107-.424,1.213,1.213,0,0,0-.383.063l-2.02.6a.754.754,0,0,1-.226.036.62.62,0,0,1-.5-.239.647.647,0,0,1-.094-.578l.67-2.244a1.046,1.046,0,0,0-.07-.9,10.566,10.566,0,0,1-1.35-5A10.158,10.158,0,0,1,2.831,3.032,9.89,9.89,0,0,1,10.02,0a9.865,9.865,0,0,1,7.12,2.994,10.058,10.058,0,0,1,2.1,3.182A9.89,9.89,0,0,1,20,9.985a10.138,10.138,0,0,1-.865,4.172,9.6,9.6,0,0,1-2.275,3.153A10.245,10.245,0,0,1,10,20ZM14.59,8.743a1.282,1.282,0,1,0,1.28,1.282A1.282,1.282,0,0,0,14.59,8.743Zm-4.629,0A1.268,1.268,0,0,0,8.7,10.015,1.28,1.28,0,1,0,9.98,8.743H9.961Zm-4.591,0a1.282,1.282,0,1,0,1.28,1.282A1.283,1.283,0,0,0,5.37,8.743Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10.02,0A10,10,0,0,0,0,10a10.56,10.56,0,0,0,1.35,4.99,1.045,1.045,0,0,1,.07.9L.75,18.13a.624.624,0,0,0,.82.78l2.02-.6a1.7,1.7,0,0,1,1.491.36A9.987,9.987,0,1,0,10.02,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M9.22,1.28A1.28,1.28,0,1,1,10.5,2.561,1.276,1.276,0,0,1,9.22,1.28Zm-4.61-.01a1.28,1.28,0,1,1,1.28,1.291A1.292,1.292,0,0,1,4.611,1.27ZM0,1.28a1.28,1.28,0,0,1,2.56,0A1.29,1.29,0,0,1,1.28,2.561,1.289,1.289,0,0,1,0,1.28Z'\n        transform='translate(4.09 8.73)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.085,1.166a1.169,1.169,0,1,1,1.169,1.169A1.169,1.169,0,0,1,9.085,1.166Zm-4.542,0A1.168,1.168,0,1,1,5.711,2.336,1.169,1.169,0,0,1,4.543,1.166ZM0,1.166A1.169,1.169,0,1,1,1.168,2.336,1.169,1.169,0,0,1,0,1.166Z'\n        transform='translate(4.527 9.056)'\n        fill={color}\n      />\n      <path\n        d='M10.02,0A10.006,10.006,0,0,0,0,10.015a10.584,10.584,0,0,0,1.35,5,1.051,1.051,0,0,1,.07.9L.75,18.157a.624.624,0,0,0,.82.78l2.02-.6a1.7,1.7,0,0,1,1.49.361A10,10,0,1,0,10.02,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M7.847,19.765A.749.749,0,0,1,8.172,18.3,8.5,8.5,0,1,0,10.006,1.5H10A8.5,8.5,0,0,0,2.46,13.931l.192.375a1.961,1.961,0,0,1,.135,1.482,17,17,0,0,0-.53,1.633C2.818,17.252,3.5,17,4,16.823l.2-.074a.749.749,0,0,1,.509,1.409l-.2.073a23.99,23.99,0,0,1-2.442.791.8.8,0,0,1-.177.018A1.206,1.206,0,0,1,1,18.7a1.309,1.309,0,0,1-.337-1,.828.828,0,0,1,.019-.148,17.461,17.461,0,0,1,.69-2.245.475.475,0,0,0-.049-.309l-.194-.374A10,10,0,0,1,10,0h.012a10,10,0,1,1-2.16,19.765ZM13.21,10A1.189,1.189,0,1,1,14.4,11.188,1.19,1.19,0,0,1,13.21,10Zm-4.4,0A1.189,1.189,0,1,1,10,11.188,1.19,1.19,0,0,1,8.807,10ZM4.4,10a1.189,1.189,0,1,1,1.189,1.189A1.19,1.19,0,0,1,4.4,10Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10.057,0A10,10,0,0,0,1.138,14.629l.2.39a1.3,1.3,0,0,1,.1,1,19.8,19.8,0,0,0-.715,2.324c0,.4.114.629.544.619A18.271,18.271,0,0,0,3.5,18.314a1.481,1.481,0,0,1,.954.057c.277.133.839.476.859.476A10,10,0,1,0,10.057,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <ellipse\n        cx='0.477'\n        cy='0.476'\n        rx='1.477'\n        ry='1.476'\n        transform='translate(4.81 9.524)'\n        fill={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n      />\n      <ellipse\n        cx='0.477'\n        cy='0.476'\n        rx='1.477'\n        ry='1.476'\n        transform='translate(9.58 9.524)'\n        fill={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n      />\n      <ellipse\n        cx='0.477'\n        cy='0.476'\n        rx='1.477'\n        ry='1.476'\n        transform='translate(14.35 9.524)'\n        fill={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.5.5H.5'\n        transform='translate(13.444 9.913)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.435 9.913)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(5.426 9.913)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M17.071,17.07a10.006,10.006,0,0,1-11.285,2c-.547-.22-4.085.76-4.853-.007s.213-4.307-.007-4.854A10,10,0,1,1,17.071,17.07Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChat.displayName = 'IconlyChat'\nChat.propTypes = {\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Chat)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Heart = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.501)'>\n      <path\n        d='M10.236,19.838a38.535,38.535,0,0,1-6.656-5.21A13.333,13.333,0,0,1,.412,9.55C-.777,5.834.612,1.579,4.5.319a6.579,6.579,0,0,1,6,1.016h0a6.589,6.589,0,0,1,6-1.016c3.887,1.259,5.286,5.514,4.1,9.231a13.333,13.333,0,0,1-3.168,5.078,38.535,38.535,0,0,1-6.656,5.21l-.26.162Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M9.754,18.837A36.258,36.258,0,0,1,3.426,13.88,12.668,12.668,0,0,1,.4,9.075C-.742,5.535.582,1.489,4.279.288A6.282,6.282,0,0,1,9.985,1.3h0A6.291,6.291,0,0,1,15.691.288c3.7,1.2,5.03,5.247,3.893,8.787a12.67,12.67,0,0,1-3.013,4.8,36.587,36.587,0,0,1-6.328,4.958L9.994,19Z'\n        transform='translate(0.022)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M10.011,19l-.235-.163a36.319,36.319,0,0,1-6.337-4.958,12.667,12.667,0,0,1-3.048-4.8C-.738,5.535.586,1.489,4.283.288A6.3,6.3,0,0,1,10.011,1.31Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M9.261,17.854a34.84,34.84,0,0,1-6.022-4.689A11.99,11.99,0,0,1,.373,8.6C-.7,5.25.554,1.421,4.071.288A5.978,5.978,0,0,1,9.5,1.2h0A5.987,5.987,0,0,1,14.921.288C18.438,1.421,19.7,5.25,18.628,8.6a11.99,11.99,0,0,1-2.866,4.57A34.84,34.84,0,0,1,9.74,17.854L9.505,18Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M19.235,3.494A6.208,6.208,0,0,0,15.521.3a6.565,6.565,0,0,0-5.515.737A6.565,6.565,0,0,0,4.491.3,6.208,6.208,0,0,0,.776,3.494,7.945,7.945,0,0,0,.406,9.427a12.364,12.364,0,0,0,2.974,4.764,34.307,34.307,0,0,0,5.991,4.683A.705.705,0,0,0,9.776,19a.743.743,0,0,0,.693-.537.763.763,0,0,0-.287-.838A33.042,33.042,0,0,1,4.429,13.13,10.981,10.981,0,0,1,1.782,8.959a6.4,6.4,0,0,1,.282-4.782A4.778,4.778,0,0,1,4.941,1.741a5.033,5.033,0,0,1,4.615.818.73.73,0,0,0,.882,0,5.042,5.042,0,0,1,4.615-.818A4.78,4.78,0,0,1,17.9,4.186a6.345,6.345,0,0,1,.3,4.8,10.946,10.946,0,0,1-2.647,4.18,23.352,23.352,0,0,1-2.647,2.328.738.738,0,0,0-.3.483.748.748,0,0,0,.128.559.724.724,0,0,0,1.006.2l.053-.045a23.865,23.865,0,0,0,2.815-2.472,12.518,12.518,0,0,0,2.965-4.764A7.9,7.9,0,0,0,19.235,3.494Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M9.748,17.854A36.489,36.489,0,0,1,3.41,13.165,11.922,11.922,0,0,1,.393,8.6C-.74,5.25.583,1.421,4.285.288A6.563,6.563,0,0,1,10,1.2h0a6.573,6.573,0,0,1,5.71-.914c3.7,1.133,5.035,4.963,3.9,8.308a11.922,11.922,0,0,1-3.017,4.57,36.489,36.489,0,0,1-6.339,4.689L10.005,18Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A2.814,2.814,0,0,1,2.018,2.422'\n        transform='translate(13.936 4.053)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2.55 3.55)'>\n      <path\n        d='M.372,8.9C-.7,5.546.554,1.381,4.071.249A4.869,4.869,0,0,1,9.5,1.939a4.73,4.73,0,0,1,5.42-1.69c3.516,1.132,4.778,5.3,3.706,8.647-1.67,5.31-7.5,8.076-9.126,8.076S2.1,14.268.372,8.9Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A2.154,2.154,0,0,1,1.917,2.422'\n        transform='translate(13.238 4.014)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nHeart.displayName = 'IconlyHeart'\nHeart.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Heart)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Heart2 = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.501)'>\n      <path\n        d='M10.03,19h0l-.259-.16A38.164,38.164,0,0,1,3.4,13.879,12.993,12.993,0,0,1,.39,9.08,7.744,7.744,0,0,1,.533,3.805,6.084,6.084,0,0,1,4.321.269,4.5,4.5,0,0,1,5.21.06h.12A5.7,5.7,0,0,1,6.17,0h.11A6.266,6.266,0,0,1,8.111.33H8.17A.331.331,0,0,1,8.26.39a3.375,3.375,0,0,1,.63.261L9.27.82a2.627,2.627,0,0,1,.285.19c.057.042.106.077.145.1l.041.024A2.435,2.435,0,0,1,10,1.3,6.224,6.224,0,0,1,13.806,0h.044a5.826,5.826,0,0,1,1.86.291,6.019,6.019,0,0,1,3.755,3.517A7.915,7.915,0,0,1,19.62,9.08a12.781,12.781,0,0,1-3.009,4.81,38.6,38.6,0,0,1-6.332,4.96l-.25.15ZM14.937,3.118a.809.809,0,0,0-.757.543.82.82,0,0,0,.5,1.029,1.676,1.676,0,0,1,1.07,1.57V6.29a.86.86,0,0,0,.19.62.841.841,0,0,0,.57.29.823.823,0,0,0,.79-.76V6.321A3.3,3.3,0,0,0,15.19,3.16.78.78,0,0,0,14.937,3.118Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M9.754,18.837A36.258,36.258,0,0,1,3.426,13.88,12.668,12.668,0,0,1,.4,9.075C-.742,5.535.582,1.489,4.279.288A6.282,6.282,0,0,1,9.985,1.3h0A6.291,6.291,0,0,1,15.691.288c3.7,1.2,5.03,5.247,3.893,8.787a12.67,12.67,0,0,1-3.013,4.8,36.587,36.587,0,0,1-6.328,4.958L9.994,19Z'\n        transform='translate(0.022)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M10.011,19l-.235-.163a36.319,36.319,0,0,1-6.337-4.958,12.667,12.667,0,0,1-3.048-4.8C-.738,5.535.586,1.489,4.283.288A6.3,6.3,0,0,1,10.011,1.31Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M2.23,4h0a.719.719,0,0,1-.517-.278.818.818,0,0,1-.167-.591h0A1.647,1.647,0,0,0,.552,1.54.787.787,0,0,1,.022.592.725.725,0,0,1,.886.019a.383.383,0,0,1,.139.052A3.2,3.2,0,0,1,3,3.226a.807.807,0,0,1-.229.56A.708.708,0,0,1,2.23,4Z'\n        transform='translate(14 3)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M9.261,17.854a34.84,34.84,0,0,1-6.022-4.689A11.99,11.99,0,0,1,.373,8.6C-.7,5.25.554,1.421,4.071.288A5.978,5.978,0,0,1,9.5,1.2h0A5.987,5.987,0,0,1,14.921.288C18.438,1.421,19.7,5.25,18.628,8.6a11.99,11.99,0,0,1-2.866,4.57A34.84,34.84,0,0,1,9.74,17.854L9.505,18Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A2.782,2.782,0,0,1,1.917,2.422'\n        transform='translate(13.239 4.053)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M9.371,18.874A34.311,34.311,0,0,1,3.38,14.191,12.375,12.375,0,0,1,.406,9.427,7.944,7.944,0,0,1,.777,3.494,6.208,6.208,0,0,1,4.491.3a6.565,6.565,0,0,1,5.515.737A6.563,6.563,0,0,1,15.521.3a6.209,6.209,0,0,1,3.715,3.191,7.9,7.9,0,0,1,.335,5.96,12.524,12.524,0,0,1-2.965,4.765,23.9,23.9,0,0,1-2.814,2.471l-.053.045a.724.724,0,0,1-1.006-.2.747.747,0,0,1-.128-.559.737.737,0,0,1,.3-.483,23.377,23.377,0,0,0,2.647-2.328A10.95,10.95,0,0,0,18.2,8.986a6.345,6.345,0,0,0-.3-4.8,4.782,4.782,0,0,0-2.849-2.445,5.043,5.043,0,0,0-4.615.818.729.729,0,0,1-.882,0,5.035,5.035,0,0,0-4.615-.818A4.782,4.782,0,0,0,2.065,4.177,6.4,6.4,0,0,0,1.782,8.96,10.991,10.991,0,0,0,4.43,13.13a33.016,33.016,0,0,0,5.753,4.495.762.762,0,0,1,.287.838A.744.744,0,0,1,9.777,19h0A.705.705,0,0,1,9.371,18.874ZM14.8,7.188a1.973,1.973,0,0,0-1.359-1.8.762.762,0,0,1-.311-.876A.741.741,0,0,1,13.888,4a3.467,3.467,0,0,1,2.374,3.011.751.751,0,0,1-.148.549.721.721,0,0,1-.488.278.734.734,0,0,1-.1.006A.746.746,0,0,1,14.8,7.188Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M9.748,17.854A36.489,36.489,0,0,1,3.41,13.165,11.922,11.922,0,0,1,.393,8.6C-.74,5.25.583,1.421,4.285.288A6.563,6.563,0,0,1,10,1.2h0a6.573,6.573,0,0,1,5.71-.914c3.7,1.133,5.035,4.963,3.9,8.308a11.922,11.922,0,0,1-3.017,4.57,36.489,36.489,0,0,1-6.339,4.689L10.005,18Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A2.814,2.814,0,0,1,2.018,2.422'\n        transform='translate(13.936 4.053)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2.55 3.55)'>\n      <path\n        d='M.372,8.9C-.7,5.546.554,1.381,4.071.249A4.869,4.869,0,0,1,9.5,1.939a4.73,4.73,0,0,1,5.42-1.69c3.516,1.132,4.778,5.3,3.706,8.647-1.67,5.31-7.5,8.076-9.126,8.076S2.1,14.268.372,8.9Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nHeart2.displayName = 'IconlyHeart2'\nHeart2.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Heart2)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Paper = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.473,4.473,0,0,1,12.554,20Zm.01-6.359a.756.756,0,0,0,.743.75h5.386a.756.756,0,0,0,.743-.75.742.742,0,0,0-.743-.741H5.426A.742.742,0,0,0,4.684,13.64Zm0-4.99a.742.742,0,0,0,.743.74H8.772a.742.742,0,0,0,.743-.74.756.756,0,0,0-.743-.75H5.426A.756.756,0,0,0,4.684,8.65Zm8.964-3.091a2.018,2.018,0,0,1-2-2.017V.906a.473.473,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.34.806h-.691C14.793,5.567,14.149,5.564,13.648,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.877A4.476,4.476,0,0,0,17,15.5V7.471a.453.453,0,0,0-.453-.458c-.423,0-.93.008-1.239.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.487.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.744,6.484a.745.745,0,0,1,0-1.49H6.188a.745.745,0,0,1,0,1.49Zm0-5A.744.744,0,1,1,.744,0H4.129a.744.744,0,1,1,0,1.489Z'\n        transform='translate(4.73 7.899)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.487,0H3.834A3.82,3.82,0,0,0,0,3.729V14.442a3.827,3.827,0,0,0,3.834,3.911h7.989a3.887,3.887,0,0,0,3.729-3.911V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.4.5H0'\n        transform='translate(5.387 13.058)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.356.5H0'\n        transform='translate(5.386 8.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.57,20A4.583,4.583,0,0,1,0,15.308V12.785a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A3.1,3.1,0,0,0,4.57,18.49h7.964a3.162,3.162,0,0,0,2.97-3.182V6.383L11.688,2.369V3.685A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.337,3.337,0,0,1-3.307-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.681a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.681V4.522A4.6,4.6,0,0,1,4.57.012h6.313C10.9.01,10.92,0,10.94,0s.037.01.057.012H11.2a.745.745,0,0,1,.54.233l5.049,5.312A.76.76,0,0,1,17,6.08v9.228A4.644,4.644,0,0,1,12.534,20Zm.8-5.594a.755.755,0,0,1,0-1.51h5.381a.755.755,0,0,1,0,1.51Zm0-4.986a.755.755,0,0,1,0-1.51H8.716a.755.755,0,0,1,0,1.51Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.487,0H3.834A3.82,3.82,0,0,0,0,3.729V14.442a3.827,3.827,0,0,0,3.834,3.911h7.989a3.887,3.887,0,0,0,3.729-3.911V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.4.5H0'\n        transform='translate(5.387 13.058)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.356.5H0'\n        transform='translate(5.386 8.106)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M5.4.5H0'\n        transform='translate(5.255 12.2)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.356.5H0'\n        transform='translate(5.255 8.189)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaper.displayName = 'IconlyPaper'\nPaper.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Paper)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst PaperPlus = ({ color, opacity, secondaryColor, strokeWidth, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.455-9.01a.742.742,0,0,0,.742.74h1.7V13.46a.738.738,0,1,0,1.475,0V11.73h1.713a.745.745,0,0,0,0-1.49H9.05V8.51a.738.738,0,1,0-1.475,0v1.73h-1.7A.747.747,0,0,0,5.129,10.99Zm8.518-5.431a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.339.807h-.645C14.824,5.568,14.161,5.565,13.647,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.876A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.422,0-.93.008-1.238.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.688,2.472H3.96V.745a.745.745,0,1,0-1.489,0V2.472H.744a.745.745,0,0,0,0,1.49H2.471V5.688a.745.745,0,1,0,1.489,0V3.962H5.688a.745.745,0,0,0,0-1.49'\n        transform='translate(5.179 7.764)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.893 10.414)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,4.9V0'\n        transform='translate(7.844 8.464)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.57,20A4.463,4.463,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A2.96,2.96,0,0,0,4.57,18.49h7.963A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm3-6.544V11.744H5.875a.755.755,0,0,1,0-1.51H7.57V8.521a.748.748,0,1,1,1.5,0v1.713h1.7a.755.755,0,0,1,0,1.51h-1.7v1.712a.748.748,0,1,1-1.5,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.893 10.414)'\n        fill='none'\n        opacity={opacity}\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,4.9V0'\n        transform='translate(7.844 8.464)'\n        fill='none'\n        opacity={opacity}\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.762 9.731)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,4.9V0'\n        transform='translate(7.713 7.781)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaperPlus.displayName = 'IconlyPaperPlus'\nPaperPlus.propTypes = {\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(PaperPlus)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst PaperNegative = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.455-9.01a.742.742,0,0,0,.742.74h4.891a.745.745,0,0,0,0-1.49H5.872A.747.747,0,0,0,5.129,10.99Zm8.518-5.431a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.339.807h-.645C14.824,5.568,14.161,5.565,13.647,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.463A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.488.008a.477.477,0,0,0,.342-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.688,1.489H.745A.745.745,0,1,1,.745,0H5.688a.745.745,0,1,1,0,1.489'\n        transform='translate(5.179 11.08)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.819,3.819,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z'\n        transform='translate(0.751 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.893 11.247)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.57,20A4.463,4.463,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A2.96,2.96,0,0,0,4.57,18.49h7.963A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.6,4.6,0,0,1,4.57.012h6.312c.02,0,.037-.012.058-.012s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm1.305-7.418a.755.755,0,0,1,0-1.51h4.886a.755.755,0,0,1,0,1.51Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.819,3.819,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z'\n        transform='translate(0.751 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.893 11.247)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.9.5H0'\n        transform='translate(5.762 9.731)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaperNegative.displayName = 'IconlyPaperNegative'\nPaperNegative.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(PaperNegative)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst PaperFail = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.418,0,.79,0,1.119.006.256,0,.48,0,.673,0,.142,0,.328,0,.528,0,.239,0,.485-.005.709-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20ZM8.3,12.041,9.5,13.26a.735.735,0,0,0,1.049,0,.749.749,0,0,0,0-1.049L9.347,10.99l1.208-1.22a.75.75,0,0,0,0-1.05.724.724,0,0,0-1.049,0L8.3,9.94,7.089,8.72a.713.713,0,0,0-1.04,0,.75.75,0,0,0,0,1.05l1.208,1.22L6.05,12.21a.749.749,0,0,0,0,1.049.691.691,0,0,0,.515.22.711.711,0,0,0,.525-.22L8.3,12.041h0Zm5.345-6.482a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334C13.531,1.7,15.4,3.661,16.447,4.759a.477.477,0,0,1-.341.807h-.645C14.82,5.568,14.157,5.565,13.643,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.463A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.487.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M3.546,2.492,4.767,1.27A.744.744,0,0,0,3.714.218L2.493,1.438,1.272.218A.745.745,0,0,0,.218,1.27L1.44,2.492.218,3.713A.745.745,0,1,0,1.272,4.765l1.221-1.22,1.221,1.22A.744.744,0,0,0,4.767,3.713Z'\n        transform='translate(5.889 8.493)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.487,0H3.729A3.729,3.729,0,0,0,0,3.729V14.578a3.8,3.8,0,0,0,3.94,3.775h7.883a3.768,3.768,0,0,0,3.729-3.775v-9.3Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.466,3.466,0,0'\n        transform='translate(6.61 9.182)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.466,3.466,0'\n        transform='translate(6.611 9.182)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.675,20A4.568,4.568,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A3.046,3.046,0,0,0,4.675,18.49h7.859A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.464a2.988,2.988,0,0,0-2.968,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.492,4.492,0,0,1,4.464.012h6.419C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm4.843-6.733-1.2-1.21-1.2,1.21a.743.743,0,0,1-1.058,0,.762.762,0,0,1,0-1.068l1.2-1.21-1.2-1.211a.761.761,0,0,1,0-1.067.745.745,0,0,1,1.058,0l1.2,1.211,1.2-1.211a.743.743,0,0,1,1.057,0,.759.759,0,0,1,0,1.067l-1.2,1.211,1.2,1.21a.76.76,0,0,1,0,1.068.741.741,0,0,1-1.057,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.487,0H3.729A3.729,3.729,0,0,0,0,3.729V14.578a3.8,3.8,0,0,0,3.94,3.775h7.883a3.768,3.768,0,0,0,3.729-3.775v-9.3Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.733,1.733,0,3.466,1.733,1.733,0,0,1.733,1.733,3.466,0,1.733,1.733,3.466,3.466Z'\n        transform='translate(6.61 9.182)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.466,3.466,0,0'\n        transform='translate(6.479 8.498)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.466,3.466,0'\n        transform='translate(6.48 8.498)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaperFail.displayName = 'IconlyPaperFail'\nPaperFail.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(PaperFail)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst PaperDownload = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.418,0,.79,0,1.119.006.256,0,.48,0,.673,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.109-9.29a.755.755,0,0,0,0,1.06l2.831,2.87a.78.78,0,0,0,.238.159.7.7,0,0,0,.287.06.644.644,0,0,0,.277-.06.78.78,0,0,0,.238-.159l2.841-2.87a.747.747,0,0,0-.01-1.06.729.729,0,0,0-1.04,0l-1.574,1.6V7.49a.734.734,0,0,0-.733-.75.747.747,0,0,0-.743.75v4.82l-1.574-1.6a.729.729,0,0,0-1.04,0Zm8.86-5.151a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334l3.987,4.187a.477.477,0,0,1-.34.807H15.46C14.819,5.568,14.156,5.565,13.642,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.464A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7,3.973a.745.745,0,0,0-1.054,0l-1.589,1.6V.745a.745.745,0,1,0-1.49,0V5.572l-1.59-1.6A.745.745,0,0,0,.216,5.026L3.079,7.9h0a.745.745,0,0,0,.24.161.757.757,0,0,0,.287.057A.741.741,0,0,0,3.9,8.062.753.753,0,0,0,4.133,7.9h0L7,5.026A.744.744,0,0,0,7,3.973'\n        transform='translate(4.61 6.736)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,6.573V0'\n        transform='translate(7.641 7.441)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.838,2.851,5.677,0'\n        transform='translate(5.302 11.163)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.57,20A4.57,4.57,0,0,1,0,15.332V12.809a.748.748,0,1,1,1.5,0v2.523A3.048,3.048,0,0,0,4.57,18.49h7.963A3.11,3.11,0,0,0,15.5,15.332V6.383L11.687,2.368V3.685A1.832,1.832,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.338,3.338,0,0,1-3.308-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.7a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.7V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.76.76,0,0,1,17,6.08v9.251A4.631,4.631,0,0,1,12.533,20Zm3.256-5.194a.772.772,0,0,1-.24-.163L4.756,11.772a.761.761,0,0,1,0-1.067.743.743,0,0,1,1.058,0l1.552,1.574V7.492a.748.748,0,1,1,1.5,0V12.28l1.552-1.573a.742.742,0,0,1,1.057,0,.759.759,0,0,1,0,1.067L8.646,14.643h0a.742.742,0,0,1-.816.162Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,6.573V0'\n        transform='translate(7.641 7.441)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.838,2.851,5.677,0'\n        transform='translate(5.302 11.163)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,6.041V0'\n        transform='translate(7.51 7.226)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.345,2.355,4.69,0'\n        transform='translate(5.665 10.912)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaperDownload.displayName = 'IconlyPaperDownload'\nPaperDownload.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(PaperDownload)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst PaperUpload = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.416,0,.785,0,1.11.005.256,0,.482,0,.682,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.453.453,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20ZM7.4,9.293V14.12a.738.738,0,1,0,1.475,0V9.29l1.574,1.6a.731.731,0,0,0,1.04,0,.739.739,0,0,0,.01-1.05L8.654,6.96A.78.78,0,0,0,8.416,6.8a.644.644,0,0,0-.277-.06.7.7,0,0,0-.287.06.78.78,0,0,0-.238.159L4.783,9.84a.748.748,0,0,0,0,1.05.731.731,0,0,0,1.04,0l1.572-1.6,0,0Zm6.246-3.733a2.018,2.018,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334C13.53,1.7,15.4,3.661,16.445,4.759a.477.477,0,0,1-.34.806h-.691C14.787,5.567,14.144,5.564,13.642,5.559Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.876A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.422,0-.93.008-1.238.008'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147'\n        transform='translate(11.763 0.42)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M6.995,4.147a.745.745,0,0,1-1.054,0l-1.589-1.6V7.375a.745.745,0,1,1-1.489,0V2.548l-1.591,1.6A.745.745,0,0,1,.217,3.094L3.079.219h0a.745.745,0,0,1,.815-.16.753.753,0,0,1,.238.159s0,0,0,0L7,3.094a.744.744,0,0,1,0,1.053'\n        transform='translate(4.61 6.737)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V6.573'\n        transform='translate(7.641 7.441)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.851,2.838,0,5.677,2.851'\n        transform='translate(5.302 7.44)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.57,20A4.57,4.57,0,0,1,0,15.332V12.809a.748.748,0,1,1,1.5,0v2.523A3.048,3.048,0,0,0,4.57,18.49h7.963A3.11,3.11,0,0,0,15.5,15.332V6.383L11.687,2.368V3.685A1.832,1.832,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.338,3.338,0,0,1-3.308-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.7a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.7V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.76.76,0,0,1,17,6.08v9.251A4.631,4.631,0,0,1,12.533,20Zm2.8-5.89V9.319L5.816,10.895a.743.743,0,0,1-1.058,0,.762.762,0,0,1,0-1.068l2.831-2.87h0a.745.745,0,0,1,1.058,0h0l2.831,2.87a.761.761,0,0,1,0,1.068.744.744,0,0,1-1.057,0L8.863,9.319v4.791a.748.748,0,1,1-1.5,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z'\n        transform='translate(0.75 0.762)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0'\n        transform='translate(10.974 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V6.573'\n        transform='translate(7.641 7.441)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.851,2.838,0,5.677,2.851'\n        transform='translate(5.302 7.44)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        opacity={opacity}\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.65 2.75)'>\n      <path\n        d='M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315'\n        transform='translate(10.284 0.083)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V6.041'\n        transform='translate(7.51 7.226)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.69,2.355,2.345,0,0,2.355'\n        transform='translate(5.665 7.227)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPaperUpload.displayName = 'IconlyPaperUpload'\nPaperUpload.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(PaperUpload)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Send = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M19.435.582A1.933,1.933,0,0,0,17.5.079L1.408,4.76A1.919,1.919,0,0,0,.024,6.281a2.253,2.253,0,0,0,1,2.1L6.06,11.477a1.3,1.3,0,0,0,1.61-.193l5.763-5.8a.734.734,0,0,1,1.06,0,.763.763,0,0,1,0,1.067l-5.773,5.8a1.324,1.324,0,0,0-.193,1.619L11.6,19.054A1.91,1.91,0,0,0,13.263,20a2.078,2.078,0,0,0,.25-.01A1.95,1.95,0,0,0,15.144,18.6L19.916,2.525a1.964,1.964,0,0,0-.48-1.943'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M19.427.578a1.938,1.938,0,0,0-1.93-.5L1.407,4.727A1.914,1.914,0,0,0,.024,6.238a2.235,2.235,0,0,0,1,2.09L6.057,11.4a1.308,1.308,0,0,0,1.609-.191l5.761-5.761a.735.735,0,0,1,1.06,0,.754.754,0,0,1,0,1.06L8.716,12.269a1.31,1.31,0,0,0-.193,1.609l3.074,5.05a2,2,0,0,0,1.91.929,1.944,1.944,0,0,0,1.63-1.38l4.77-15.969a1.943,1.943,0,0,0-.48-1.93'\n        transform='translate(0)'\n        fill={color}\n      />\n      <path\n        d='M4.765,7.626a.75.75,0,0,1,0-1.06L6.13,5.2A.75.75,0,0,1,7.191,6.26L5.825,7.626a.75.75,0,0,1-1.06,0ZM3.981,3.838a.75.75,0,0,1,0-1.06L5.346,1.411A.75.75,0,0,1,6.407,2.472L5.041,3.838a.75.75,0,0,1-1.06,0ZM.22,2.645a.75.75,0,0,1,0-1.06L1.585.219A.75.75,0,0,1,2.646,1.28L1.28,2.645a.75.75,0,0,1-1.06,0Z'\n        transform='translate(0.261 11.943)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M12.855,5.121l-5.664,5.7L.561,6.741A1.182,1.182,0,0,1,.847,4.6L16.5.047a1.176,1.176,0,0,1,1.447,1.471L13.3,17.158a1.168,1.168,0,0,1-2.123.274l-3.989-6.61'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M11.6,19.054l-4.1-6.79a.76.76,0,0,1,.112-.926L13.434,5.48a.745.745,0,0,1,1.06,0,.759.759,0,0,1,0,1.067l-5.4,5.44,3.794,6.282a.452.452,0,0,0,.822-.105l2.322-7.816a.748.748,0,0,1,.934-.507.756.756,0,0,1,.5.94L15.144,18.6a1.933,1.933,0,0,1-1.625,1.387,1.787,1.787,0,0,1-.258.017A1.925,1.925,0,0,1,11.6,19.054ZM4.323,10.407.936,8.322a1.97,1.97,0,0,1,.477-3.567L17.5.077a1.943,1.943,0,0,1,1.93.5,1.975,1.975,0,0,1,.484,1.948l-1.249,4.2A.75.75,0,1,1,17.232,6.3l1.248-4.2a.455.455,0,0,0-.56-.57L1.83,6.206a.458.458,0,0,0-.112.828L5.1,9.118a.758.758,0,0,1,.247,1.039.747.747,0,0,1-.64.361A.735.735,0,0,1,4.323,10.407Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M5.821,0,0,5.821'\n        transform='translate(7.391 5.227)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M7.391,11.048.576,6.881A1.2,1.2,0,0,1,.87,4.7L16.96.049a1.2,1.2,0,0,1,1.487,1.5L13.673,17.514a1.2,1.2,0,0,1-2.182.28l-4.1-6.746'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.8 2.8)'>\n      <path\n        d='M8.693,9.638S-3.283,7.161.879,4.758C4.391,2.731,16.495-.755,18.186.146c.9,1.691-2.585,13.795-4.612,17.307C11.171,21.615,8.693,9.638,8.693,9.638Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.492,9.492,0'\n        transform='translate(8.693 0.146)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nSend.displayName = 'IconlySend'\nSend.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Send)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Password = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 1.999)'>\n      <path\n        d='M5.666,20C2.277,20,0,17.623,0,14.084V5.917C0,2.378,2.277,0,5.666,0h8.669C17.724,0,20,2.378,20,5.917v8.168C20,17.623,17.723,20,14.334,20Zm7.266-9.25h1.329v1.1a.75.75,0,0,0,1.5,0V10a.751.751,0,0,0-.75-.75H9.319a2.6,2.6,0,1,0,0,1.5h2.112v1.1a.75.75,0,0,0,1.5,0v-1.1h0ZM5.739,10a1.1,1.1,0,1,1,1.1,1.1A1.1,1.1,0,0,1,5.739,10Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.334,0H5.665C2.276,0,0,2.378,0,5.917v8.167C0,17.622,2.276,20,5.665,20h8.668C17.722,20,20,17.622,20,14.084V5.917C20,2.378,17.723,0,14.334,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M10.78,5.2a.743.743,0,0,1-.751-.751V3.35H8.7v1.1A.751.751,0,0,1,7.95,5.2.742.742,0,0,1,7.2,4.45V3.35H5.08A2.567,2.567,0,0,1,2.61,5.2a2.6,2.6,0,1,1,0-5.2A2.566,2.566,0,0,1,5.08,1.85h5.7a.751.751,0,0,1,.75.75V4.45A.751.751,0,0,1,10.78,5.2ZM2.61,1.5a1.1,1.1,0,1,0,1.1,1.1A1.106,1.106,0,0,0,2.61,1.5Z'\n        transform='translate(4.234 7.399)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.7,1.852A1.852,1.852,0,1,1,1.851,0,1.852,1.852,0,0,1,3.7,1.852Z'\n        transform='translate(4.989 8.148)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H6.318V1.852'\n        transform='translate(8.692 10)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,1.852V0'\n        transform='translate(11.682 10)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.953,20a.75.75,0,1,1,0-1.5h5.38c2.531,0,4.167-1.733,4.167-4.416V5.916c0-2.683-1.636-4.415-4.166-4.415H5.665C3.135,1.5,1.5,3.233,1.5,5.916v8.168c0,2.683,1.634,4.416,4.164,4.416a.75.75,0,1,1,0,1.5C2.276,20,0,17.622,0,14.084V5.916C0,2.378,2.276,0,5.665,0h8.67C17.723,0,20,2.378,20,5.916v8.168C20,17.622,17.722,20,14.333,20Zm5.306-8.149v-1.1H12.931v1.1a.75.75,0,1,1-1.5,0v-1.1H9.318A2.6,2.6,0,1,1,4.467,8.932a.75.75,0,1,1,1.368.615A1.1,1.1,0,1,0,6.84,8.9a.75.75,0,1,1,0-1.5,2.6,2.6,0,0,1,2.478,1.85H15.01a.751.751,0,0,1,.75.751v1.851a.75.75,0,1,1-1.5,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.7,1.852A1.852,1.852,0,1,1,1.851,0,1.852,1.852,0,0,1,3.7,1.852Z'\n        transform='translate(4.989 8.148)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H6.318V1.852'\n        transform='translate(8.692 10)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,1.852V0'\n        transform='translate(11.682 10)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.75 2.75)'>\n      <path\n        d='M3.7,1.852A1.852,1.852,0,1,1,1.852,0h0A1.851,1.851,0,0,1,3.7,1.852Z'\n        transform='translate(4.235 7.398)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H6.318V1.852'\n        transform='translate(7.942 9.25)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,1.852V0'\n        transform='translate(10.932 9.25)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPassword.displayName = 'IconlyPassword'\nPassword.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Password)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Swap = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.454,17.721a4.445,4.445,0,0,1-.434-.394A17.665,17.665,0,0,1,10.909,12.7a4.061,4.061,0,0,1-.32-1.078V11.57a1.461,1.461,0,0,1,.779-1.288,6.515,6.515,0,0,1,1.04-.28A20.9,20.9,0,0,1,15.3,9.83a17.926,17.926,0,0,1,2.985.2,7.45,7.45,0,0,1,.835.209,1.5,1.5,0,0,1,.709.65,1.633,1.633,0,0,1,.171.732,3.875,3.875,0,0,1-.264.963,17.773,17.773,0,0,1-3.155,4.736c-.16.162-.355.337-.4.382a1.43,1.43,0,0,1-.891.3A1.363,1.363,0,0,1,14.454,17.721Zm-10.94-2.3.257-4.578a.934.934,0,1,1,1.867,0L5.9,15.417a1.191,1.191,0,1,1-2.381,0Zm-1.8-7.444A7.4,7.4,0,0,1,.88,7.764a1.491,1.491,0,0,1-.709-.65A1.62,1.62,0,0,1,0,6.384a3.943,3.943,0,0,1,.262-.963A17.762,17.762,0,0,1,3.418.685c.161-.162.355-.337.4-.383A1.433,1.433,0,0,1,4.712,0a1.368,1.368,0,0,1,.834.278,4.586,4.586,0,0,1,.435.4A17.751,17.751,0,0,1,9.091,5.3a4.108,4.108,0,0,1,.321,1.079v.047a1.464,1.464,0,0,1-.778,1.287A6.442,6.442,0,0,1,7.593,8,20.9,20.9,0,0,1,4.7,8.17,17.926,17.926,0,0,1,1.715,7.973Zm12.647-.811L14.1,2.583a1.191,1.191,0,1,1,2.381,0l-.257,4.579a.934.934,0,1,1-1.867,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M1.191,0A.941.941,0,0,0,.257.948L0,5.527A1.2,1.2,0,0,0,1.191,6.734a1.2,1.2,0,0,0,1.19-1.208L2.125.948A.941.941,0,0,0,1.191,0'\n        transform='translate(3.514 9.891)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.98.673a4.62,4.62,0,0,0-.434-.4A1.371,1.371,0,0,0,4.712,0a1.432,1.432,0,0,0-.893.3c-.046.046-.24.221-.4.384A17.743,17.743,0,0,0,.262,5.421,3.917,3.917,0,0,0,0,6.384a1.628,1.628,0,0,0,.171.73,1.491,1.491,0,0,0,.709.65,7.394,7.394,0,0,0,.834.209,17.975,17.975,0,0,0,2.986.2A20.868,20.868,0,0,0,7.593,8a6.358,6.358,0,0,0,1.04-.279A1.465,1.465,0,0,0,9.412,6.43V6.384A4.123,4.123,0,0,0,9.091,5.3,17.742,17.742,0,0,0,5.98.673'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M1.191,6.735a.941.941,0,0,0,.934-.948l.256-4.579A1.2,1.2,0,0,0,1.191,0,1.2,1.2,0,0,0,0,1.208L.257,5.787a.941.941,0,0,0,.934.948'\n        transform='translate(14.103 1.375)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M9.241,1.056a1.5,1.5,0,0,0-.709-.65A7.457,7.457,0,0,0,7.7.2,17.975,17.975,0,0,0,4.712,0,20.868,20.868,0,0,0,1.819.173,6.484,6.484,0,0,0,.778.453,1.463,1.463,0,0,0,0,1.741v.046A4.065,4.065,0,0,0,.321,2.866,17.694,17.694,0,0,0,3.431,7.5a4.5,4.5,0,0,0,.434.394,1.361,1.361,0,0,0,.836.279,1.434,1.434,0,0,0,.892-.3c.046-.046.24-.221.4-.382A17.777,17.777,0,0,0,9.148,2.751a3.881,3.881,0,0,0,.263-.963,1.629,1.629,0,0,0-.171-.732'\n        transform='translate(10.588 9.829)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M.556,13.618V0'\n        transform='translate(14.284 3.546)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M8.156,0,4.078,4.1,0,0'\n        transform='translate(10.762 13.068)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.556,0V13.618'\n        transform='translate(4.356 0.833)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.1,4.078,0,8.156,4.1'\n        transform='translate(0.833 0.832)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M14.359,17.937a.834.834,0,0,1-.509-.77V3.546a.824.824,0,1,1,1.648,0v11.6l2.042-2.077a.82.82,0,0,1,1.166,0,.842.842,0,0,1,0,1.179l-3.451,3.506a.816.816,0,0,1-.9.183Zm-2.7-2.65-1.6-1.629a.841.841,0,0,1,0-1.179.817.817,0,0,1,1.165,0l1.6,1.631a.84.84,0,0,1,0,1.178.818.818,0,0,1-1.166,0Zm-7.628-.835V.833a.832.832,0,0,1,.509-.77.817.817,0,0,1,.9.182l4.033,4.1a.84.84,0,0,1,0,1.179.817.817,0,0,1-1.165,0L5.681,2.852v11.6a.824.824,0,1,1-1.648,0ZM.243,5.519a.839.839,0,0,1,0-1.178l1.6-1.63a.818.818,0,0,1,1.166,0,.842.842,0,0,1,0,1.18l-1.6,1.629a.815.815,0,0,1-1.165,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M.556,13.618V0'\n        transform='translate(14.284 3.546)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M8.156,0,4.078,4.1,0,0'\n        transform='translate(10.762 13.068)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.556,0V13.618'\n        transform='translate(4.356 0.833)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,4.1,4.078,0,8.156,4.1'\n        transform='translate(0.833 0.832)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.9 4.6)'>\n      <path\n        d='M.5,0V12.618'\n        transform='translate(3.579 0.001)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.1S2.169,0,4.078,0,8.156,4.1,8.156,4.1'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,12.618V0'\n        transform='translate(13.506 2.21)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M8.156,0S5.986,4.1,4.078,4.1,0,0,0,0'\n        transform='translate(9.929 10.728)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nSwap.displayName = 'IconlySwap'\nSwap.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Swap)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Work = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M3.972,20a3.829,3.829,0,0,1-3.8-3.847L.1,10.987a.211.211,0,0,1,.09-.172.128.128,0,0,1,.071-.02.207.207,0,0,1,.119.041,17.072,17.072,0,0,0,7,2.632.722.722,0,0,0,.1.006.753.753,0,0,0,.722-.554,1.824,1.824,0,0,1,1.78-1.377h.031a1.824,1.824,0,0,1,1.78,1.377.753.753,0,0,0,.723.554.718.718,0,0,0,.1-.006,17.072,17.072,0,0,0,7-2.632l.04-.021a.183.183,0,0,1,.08-.019.132.132,0,0,1,.07.019.211.211,0,0,1,.09.172l-.08,5.165A3.829,3.829,0,0,1,16.018,20Zm5.273-6.248v1.307a.755.755,0,0,0,.75.759.746.746,0,0,0,.751-.759V13.752a.756.756,0,0,0-.751-.76A.765.765,0,0,0,9.245,13.752Zm3.6-2.078A3.3,3.3,0,0,0,10,10.025a3.358,3.358,0,0,0-2.873,1.642.327.327,0,0,1-.276.166.286.286,0,0,1-.056-.005A15.524,15.524,0,0,1,1.171,9.56L.21,8.891a.289.289,0,0,1-.13-.243C.051,8.141,0,6.487,0,6.471A3.839,3.839,0,0,1,3.812,2.613H5.783A2.977,2.977,0,0,1,8.7,0h2.581a2.977,2.977,0,0,1,2.921,2.613h1.981A3.839,3.839,0,0,1,20,6.471c0,.009-.059.913-.08,2.154a.33.33,0,0,1-.129.256c-.471.347-.918.647-.961.669a15.328,15.328,0,0,1-5.647,2.288.3.3,0,0,1-.057.005A.325.325,0,0,1,12.848,11.674ZM7.3,2.613h5.383a1.447,1.447,0,0,0-1.4-1.093H8.7A1.448,1.448,0,0,0,7.3,2.613Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,0C.05,2.338.19,6.337.21,6.778A4.651,4.651,0,0,0,1.2,9.346,3.689,3.689,0,0,0,4.292,10.71c1.856.01,3.9.01,5.889.01s3.931,0,5.566-.01a3.733,3.733,0,0,0,3.089-1.364,4.514,4.514,0,0,0,.974-2.568c.02-.371.12-4.712.18-6.778Z'\n        transform='translate(0 9.078)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M0,.75V2.044a.75.75,0,0,0,1.5,0V.75A.75.75,0,0,0,0,.75'\n        transform='translate(9.245 12.634)'\n        fill={color}\n      />\n      <path\n        d='M12.473,13.117a.749.749,0,0,1-.727-.564A1.8,1.8,0,0,0,9.99,11.2a1.826,1.826,0,0,0-1.779,1.357.754.754,0,0,1-.726.552.783.783,0,0,1-.1-.007,17.159,17.159,0,0,1-7.047-2.62A.747.747,0,0,1,0,9.855V6.389A3.817,3.817,0,0,1,3.817,2.581H5.784A2.959,2.959,0,0,1,8.7,0h2.582a2.957,2.957,0,0,1,2.92,2.581h1.977A3.812,3.812,0,0,1,19.99,6.389V9.855a.752.752,0,0,1-.336.626,17.143,17.143,0,0,1-7.078,2.629A.8.8,0,0,1,12.473,13.117ZM8.7,1.5A1.46,1.46,0,0,0,7.3,2.581h5.387a1.46,1.46,0,0,0-1.4-1.081Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,0S.142,1.738.175,2.286a3.823,3.823,0,0,0,.8,2.126A2.968,2.968,0,0,0,3.486,5.507c1.237,0,10.232,0,11.469,0a2.968,2.968,0,0,0,2.509-1.095,3.832,3.832,0,0,0,.8-2.126C18.3,1.738,18.441,0,18.441,0'\n        transform='translate(0.804 13.477)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.579V2.208A2.207,2.207,0,0,1,2.208,0H4.79A2.208,2.208,0,0,1,7,2.208v.371'\n        transform='translate(6.496 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,1.294V0'\n        transform='translate(9.495 13.384)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.058V6.525a16.327,16.327,0,0,0,6.738,2.5,2.58,2.58,0,0,1,4.985.01A16.326,16.326,0,0,0,18.49,6.525V3.058A3.051,3.051,0,0,0,15.433,0H3.067A3.059,3.059,0,0,0,0,3.058Z'\n        transform='translate(0.75 3.331)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.78,18.985a.751.751,0,0,1,.751-.751l6.2,0a2.219,2.219,0,0,0,1.932-.823,3.11,3.11,0,0,0,.633-1.693c.031-.553.185-2.3.185-2.3a.743.743,0,0,1,1.484.058c0,.023-.141,1.789-.173,2.334a4.569,4.569,0,0,1-.974,2.561,3.733,3.733,0,0,1-3.085,1.365l-6.2,0A.75.75,0,0,1,8.78,18.985Zm-4.52.748a3.73,3.73,0,0,1-3.086-1.366A4.557,4.557,0,0,1,.2,15.806C.168,15.262.027,13.5.027,13.473a.743.743,0,0,1,1.484-.057s.154,1.749.187,2.3a3.091,3.091,0,0,0,.631,1.692,2.217,2.217,0,0,0,1.933.824H5.4a.75.75,0,1,1,0,1.5Zm4.984-5.055V13.383a.75.75,0,0,1,1.5,0v1.294a.75.75,0,1,1-1.5,0Zm2.5-2.126A1.8,1.8,0,0,0,9.99,11.2a1.828,1.828,0,0,0-1.779,1.356.748.748,0,0,1-.716.554.763.763,0,0,1-.111-.008A17.148,17.148,0,0,1,.337,10.481.75.75,0,0,1,0,9.855V6.388A3.817,3.817,0,0,1,3.817,2.581H5.77A2.964,2.964,0,0,1,8.7,0h2.582A2.964,2.964,0,0,1,14.22,2.581h1.963A3.812,3.812,0,0,1,19.99,6.388V9.855a.752.752,0,0,1-.336.626,17.158,17.158,0,0,1-7.078,2.629.761.761,0,0,1-.1.006A.749.749,0,0,1,11.746,12.551Zm1.213-1.02A15.725,15.725,0,0,0,18.49,9.445V6.388a2.31,2.31,0,0,0-2.307-2.308H10a.75.75,0,1,1,0-1.5h2.7A1.462,1.462,0,0,0,11.286,1.5H8.7A1.46,1.46,0,0,0,7.245,2.958v.37a.748.748,0,0,1-.75.751l-2.678,0A2.315,2.315,0,0,0,1.5,6.388V9.445a15.673,15.673,0,0,0,5.511,2.078A3.336,3.336,0,0,1,9.99,9.7,3.288,3.288,0,0,1,12.959,11.532Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,0S.142,1.738.175,2.286a3.823,3.823,0,0,0,.8,2.126A2.968,2.968,0,0,0,3.486,5.507c1.237,0,10.232,0,11.469,0a2.968,2.968,0,0,0,2.509-1.095,3.832,3.832,0,0,0,.8-2.126C18.3,1.738,18.441,0,18.441,0'\n        transform='translate(0.804 13.477)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,2.579V2.208A2.207,2.207,0,0,1,2.208,0H4.79A2.208,2.208,0,0,1,7,2.208v.371'\n        transform='translate(6.496 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,1.294V0'\n        transform='translate(9.495 13.384)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.058V6.525a16.327,16.327,0,0,0,6.738,2.5,2.58,2.58,0,0,1,4.985.01A16.326,16.326,0,0,0,18.49,6.525V3.058A3.051,3.051,0,0,0,15.433,0H3.067A3.059,3.059,0,0,0,0,3.058Z'\n        transform='translate(0.75 3.331)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2.75 2.45)'>\n      <path\n        d='M.5,2.628V0'\n        transform='translate(8.711 11.439)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M18.257,0l-.029.021a17.52,17.52,0,0,1-9.1,2.393A17.48,17.48,0,0,1,.03.021L0,0'\n        transform='translate(0.082 9.027)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,8.2C0,2.051,2.3,0,9.211,0s9.211,2.051,9.211,8.2-2.3,8.2-9.211,8.2S0,14.355,0,8.2Z'\n        transform='translate(0 2.697)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.525,2.919v-.63A2.184,2.184,0,0,0,4.465,0H2.06A2.184,2.184,0,0,0,0,2.289v.63'\n        transform='translate(5.949 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nWork.displayName = 'IconlyWork'\nWork.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Work)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Scan = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M14.6,18a.747.747,0,1,1,0-1.493h1.593a2.44,2.44,0,0,0,2.462-2.414v-3.56H16.032v.992a2.269,2.269,0,0,1-2.27,2.266H8.238a2.269,2.269,0,0,1-2.269-2.266v-.992H3.346V14.1A2.437,2.437,0,0,0,5.8,16.506H7.428a.747.747,0,1,1,0,1.493H5.8a3.946,3.946,0,0,1-3.974-3.9V10.534H.762a.746.746,0,1,1,0-1.492H21.239a.746.746,0,1,1,0,1.492H20.177v3.56A3.95,3.95,0,0,1,16.194,18ZM6.24,7.523a.278.278,0,0,1-.27-.269V6.008A2.268,2.268,0,0,1,8.239,3.743h5.524a2.26,2.26,0,0,1,2.27,2.265V7.254a.28.28,0,0,1-.273.269Zm12.415-1.76V3.906a2.44,2.44,0,0,0-2.461-2.413H14.6a.754.754,0,0,1-.761-.745A.755.755,0,0,1,14.6,0h1.593a3.948,3.948,0,0,1,3.983,3.906V5.763a.761.761,0,0,1-1.522,0Zm-16.831,0V3.9A3.945,3.945,0,0,1,5.8,0h1.63a.755.755,0,0,1,.761.747.753.753,0,0,1-.761.746H5.8A2.436,2.436,0,0,0,3.347,3.9V5.762a.762.762,0,0,1-1.524,0Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M4.415,7.523a.279.279,0,0,1-.27-.269V6.008a2.269,2.269,0,0,1,2.27-2.265h5.523a2.26,2.26,0,0,1,2.271,2.265V7.254a.281.281,0,0,1-.274.269Zm12.416-1.76V3.906A2.44,2.44,0,0,0,14.37,1.493H12.777a.754.754,0,0,1-.761-.745A.755.755,0,0,1,12.777,0H14.37a3.948,3.948,0,0,1,3.983,3.906V5.763a.761.761,0,0,1-1.522,0ZM0,5.762V3.9A3.945,3.945,0,0,1,3.974,0H5.6a.754.754,0,0,1,.76.747.753.753,0,0,1-.76.746H3.975A2.436,2.436,0,0,0,1.523,3.9V5.762a.755.755,0,0,1-.761.747A.755.755,0,0,1,0,5.762Z'\n        transform='translate(1.824 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M21.239,0H.762A.755.755,0,0,0,0,.747a.754.754,0,0,0,.762.745H1.823V5.056A3.946,3.946,0,0,0,5.8,8.958H7.427a.747.747,0,1,0,0-1.493H5.8A2.436,2.436,0,0,1,3.346,5.056V1.492H5.969v.991A2.269,2.269,0,0,0,8.238,4.75h5.524a2.269,2.269,0,0,0,2.27-2.266V1.492h2.623v3.56a2.44,2.44,0,0,1-2.461,2.413H14.6a.747.747,0,1,0,0,1.493h1.593a3.949,3.949,0,0,0,3.983-3.907V1.492h1.062A.753.753,0,0,0,22,.747.754.754,0,0,0,21.239,0'\n        transform='translate(0 9.041)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(1.5 3.5)'>\n      <path\n        d='M21.132.524H0'\n        transform='translate(0 8.991)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.969,5.278V3.325A3.335,3.335,0,0,0,1.644,0H0'\n        transform='translate(14.281 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.278V3.321A3.32,3.32,0,0,1,3.317,0H5'\n        transform='translate(1.882 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.969,0V4.531A3.335,3.335,0,0,1,1.644,7.856H0'\n        transform='translate(14.281 9.514)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V4.535a3.32,3.32,0,0,0,3.317,3.32H5'\n        transform='translate(1.882 9.514)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M14.6,18a.747.747,0,1,1,0-1.493h1.593a2.44,2.44,0,0,0,2.462-2.414V10.535H3.346V14.1A2.437,2.437,0,0,0,5.8,16.506H7.428a.747.747,0,1,1,0,1.493H5.8a3.947,3.947,0,0,1-3.975-3.9V10.535H.761a.747.747,0,1,1,0-1.493H21.239a.747.747,0,1,1,0,1.493H20.177v3.559A3.95,3.95,0,0,1,16.194,18ZM9.142,14.267a.747.747,0,1,1,0-1.493h3.717a.747.747,0,1,1,0,1.493Zm0-7.757a.747.747,0,1,1,0-1.494h3.717a.747.747,0,1,1,0,1.494ZM1.823,5.762V3.9A3.945,3.945,0,0,1,5.8,0h1.63a.755.755,0,0,1,.761.747.753.753,0,0,1-.761.746H5.8A2.436,2.436,0,0,0,3.347,3.9V5.762a.762.762,0,0,1-1.524,0Zm16.832,0V3.906a2.441,2.441,0,0,0-2.462-2.413H14.6a.753.753,0,0,1-.76-.746A.753.753,0,0,1,14.6,0h1.593a3.949,3.949,0,0,1,3.983,3.905V5.763a.761.761,0,0,1-1.522,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(1.5 3.5)'>\n      <path\n        d='M21.132.524H0'\n        transform='translate(0 8.991)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.969,5.278V3.325A3.335,3.335,0,0,0,1.644,0H0'\n        transform='translate(14.281 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,5.278V3.321A3.32,3.32,0,0,1,3.317,0H5'\n        transform='translate(1.882 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M4.969,0V4.531A3.335,3.335,0,0,1,1.644,7.856H0'\n        transform='translate(14.281 9.514)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0V4.535a3.32,3.32,0,0,0,3.317,3.32H5'\n        transform='translate(1.882 9.514)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(1.45 2.95)'>\n      <path\n        d='M21.132.5H0'\n        transform='translate(0 9.35)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.77C.57,2.29,2.29.57,5.77,0'\n        transform='translate(1.546 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.981,8.186C2.5,7.606.781,5.9.211,2.416v0A17.035,17.035,0,0,1,0,0'\n        transform='translate(1.335 9.854)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.979,0a17.183,17.183,0,0,1-.21,2.42l0,0C5.2,5.9,3.48,7.606,0,8.186'\n        transform='translate(13.816 9.854)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0C3.48.57,5.2,2.29,5.77,5.77'\n        transform='translate(13.816 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nScan.displayName = 'IconlyScan'\nScan.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Scan)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Activity = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.4,20a5.469,5.469,0,0,1-3.976-1.428A5.474,5.474,0,0,1,0,14.6V7.2A5.5,5.5,0,0,1,1.425,3.215,5.455,5.455,0,0,1,5.4,1.78H13.45a4.858,4.858,0,0,0-.059.75A4.069,4.069,0,0,0,17.45,6.6a4.668,4.668,0,0,0,.74-.068V14.6a5.47,5.47,0,0,1-1.425,3.973A5.466,5.466,0,0,1,12.79,20ZM7.19,8.96a.781.781,0,0,0-.5.3L3.731,13.11l-.061.09a.747.747,0,0,0,.21.95.832.832,0,0,0,.46.15h.026A.715.715,0,0,0,4.93,14l2.51-3.231,2.849,2.141.09.058a.749.749,0,0,0,.95-.21l2.89-3.729-.04.02A.75.75,0,0,0,14.26,8.3a.736.736,0,0,0-.608-.439c-.028,0-.056,0-.084,0a.768.768,0,0,0-.617.314L10.531,11.3,7.76,9.121a.783.783,0,0,0-.481-.165C7.25,8.956,7.22,8.958,7.19,8.96Zm7.99-6.55a2.41,2.41,0,1,1,2.41,2.41A2.411,2.411,0,0,1,15.18,2.41Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.662,18H5.346A5.415,5.415,0,0,1,1.41,16.588,5.4,5.4,0,0,1,0,12.661V5.356A5.428,5.428,0,0,1,1.41,1.42,5.4,5.4,0,0,1,5.346,0h7.967a3.909,3.909,0,0,0-.07.738A4.029,4.029,0,0,0,17.27,4.759a4.142,4.142,0,0,0,.73-.07v7.972a5.405,5.405,0,0,1-1.409,3.927A5.4,5.4,0,0,1,12.662,18ZM7.222,7.079a.752.752,0,0,0-.1.006.741.741,0,0,0-.493.29L3.676,11.186a.728.728,0,0,0-.158.457.739.739,0,0,0,1.363.43l2.47-3.2,2.743,2.152a.747.747,0,0,0,.464.163.741.741,0,0,0,.592-.3l2.858-3.687V7.191a.75.75,0,0,0-.14-1.045.73.73,0,0,0-1.038.149L10.42,9.4,7.677,7.235A.742.742,0,0,0,7.222,7.079Z'\n        transform='translate(0 2)'\n        fill={color}\n      />\n      <circle\n        cx='2.5'\n        cy='2.5'\n        r='2.5'\n        transform='translate(15)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 1.5)'>\n      <path\n        d='M0,4.989,2.993,1.1,6.407,3.78,9.336,0'\n        transform='translate(5.245 8.293)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='1.922'\n        cy='1.922'\n        r='1.922'\n        transform='translate(16.073 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.146,0H4.879C1.867,0,0,2.133,0,5.144v8.082c0,3.011,1.831,5.135,4.879,5.135h8.6c3.011,0,4.879-2.124,4.879-5.135V6.188'\n        transform='translate(0.778 1.62)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10.305,20a.741.741,0,0,1-.743-.732.751.751,0,0,1,.743-.741h2.952c2.925,0,4.542-1.6,4.568-4.532V7.522a.729.729,0,1,1,1.459,0v6.473c0,3.7-2.316,6-6.027,6ZM0,13.995v-7.2C0,3.078,2.307.776,6.018.776h6.505a.743.743,0,0,1,.733.741.734.734,0,0,1-.742.733h-6.5c-2.925,0-4.542,1.614-4.542,4.541v7.2c0,2.928,1.617,4.532,4.542,4.532a.75.75,0,0,1,.743.741A.741.741,0,0,1,6.018,20C2.307,20,0,17.7,0,13.995Zm4.648-.608a.741.741,0,0,1-.132-1.032L7.406,8.6a.745.745,0,0,1,1.043-.132l2.713,2.126,2.387-3.043A.733.733,0,0,1,14.7,8.43l-2.828,3.642a.789.789,0,0,1-.5.282.742.742,0,0,1-.539-.158L8.122,10.071,5.683,13.236a.737.737,0,0,1-.592.3A.737.737,0,0,1,4.648,13.387ZM14.8,2.6a2.6,2.6,0,1,1,2.6,2.583A2.585,2.585,0,0,1,14.8,2.6Zm1.476,0A1.122,1.122,0,1,0,17.4,1.481,1.122,1.122,0,0,0,16.279,2.6Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 1.5)'>\n      <path\n        d='M0,4.989,2.993,1.1,6.407,3.78,9.336,0'\n        transform='translate(5.245 8.293)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <circle\n        cx='1.922'\n        cy='1.922'\n        r='1.922'\n        transform='translate(16.073 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.146,0H4.879C1.867,0,0,2.133,0,5.144v8.082c0,3.011,1.831,5.135,4.879,5.135h8.6c3.011,0,4.879-2.124,4.879-5.135V6.188'\n        transform='translate(0.778 1.62)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2.45 2.35)'>\n      <path\n        d='M0,4.989,2.993,1.1,6.407,3.78,9.336,0'\n        transform='translate(4.468 7.515)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.922,0A1.922,1.922,0,1,1,0,1.922,1.921,1.921,0,0,1,1.922,0Z'\n        transform='translate(15.296 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M18.306,6.216A20.809,20.809,0,0,1,18.5,9.25c0,6.938-2.312,9.25-9.25,9.25S0,16.188,0,9.25,2.313,0,9.25,0a20.931,20.931,0,0,1,2.983.187'\n        transform='translate(0 0.703)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nActivity.displayName = 'IconlyActivity'\nActivity.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Activity)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Calendar = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M5.152,20H5.141A5.152,5.152,0,0,1,1.4,18.619,5.139,5.139,0,0,1,.011,14.88L0,6.553a5.089,5.089,0,0,1,1.219-3.5A4.939,4.939,0,0,1,4.506,1.53V.78a.773.773,0,0,1,.22-.553.766.766,0,0,1,1.3.552v.7l5.865-.008V.77a.77.77,0,0,1,.218-.552.766.766,0,0,1,1.3.55v.75a4.966,4.966,0,0,1,3.321,1.487A4.993,4.993,0,0,1,17.989,6.49L18,14.916c0,3.125-1.961,5.07-5.128,5.074Zm7.891-5.808a.833.833,0,0,0-.809.851.83.83,0,1,0,.819-.851Zm-8.126,0h0a.851.851,0,0,0-.808.86.823.823,0,0,0,.811.8h.039a.809.809,0,0,0,.565-.265.821.821,0,0,0,.215-.6.813.813,0,0,0-.819-.8Zm4.068-.005h0a.855.855,0,0,0-.808.861.823.823,0,0,0,.814.8h.036a.823.823,0,0,0,.779-.861.813.813,0,0,0-.819-.8ZM4.912,10.594h0a.851.851,0,0,0-.808.86.821.821,0,0,0,.812.8h.039a.806.806,0,0,0,.563-.265.823.823,0,0,0,.214-.6.812.812,0,0,0-.818-.8Zm4.069-.035h0a.851.851,0,0,0-.809.86.823.823,0,0,0,.815.8h.036a.825.825,0,0,0,.778-.861.813.813,0,0,0-.818-.8Zm4.07.006h0a.826.826,0,0,0-.808.839v.012a.813.813,0,0,0,.821.8h.019a.825.825,0,0,0-.028-1.649ZM4.508,3.058c-1.985.2-2.991,1.375-2.988,3.493l0,.311,14.948-.02v-.35C16.428,4.379,15.4,3.22,13.414,3.047v.77a.764.764,0,0,1-1.3.547.773.773,0,0,1-.217-.545V3.01l-5.865.008,0,.808a.765.765,0,0,1-1.3.547.773.773,0,0,1-.217-.546v-.77Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M5.127,12.743A4.776,4.776,0,0,1,0,7.613V0H18V7.674c0,3.138-1.976,5.069-5.137,5.069Z'\n        transform='translate(0 7.257)'\n        fill={color}\n      />\n      <path\n        d='M0,5.767A15.855,15.855,0,0,1,.155,3.64,4.591,4.591,0,0,1,4.541,0h8.911a4.639,4.639,0,0,1,4.386,3.64,15.892,15.892,0,0,1,.154,2.127Z'\n        transform='translate(0.003 1.49)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.761,4.59a.747.747,0,0,0,.761-.77V.771A.748.748,0,0,0,.761,0,.748.748,0,0,0,0,.771V3.82a.747.747,0,0,0,.761.77'\n        transform='translate(4.544 0)'\n        fill={color}\n      />\n      <path\n        d='M.761,4.59a.753.753,0,0,0,.761-.77V.771A.754.754,0,0,0,.761,0,.748.748,0,0,0,0,.771V3.82a.747.747,0,0,0,.761.77'\n        transform='translate(11.934 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M0,.473H17.824'\n        transform='translate(0.093 6.931)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(12.984 10.837)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(8.546 10.837)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(4.099 10.837)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(12.984 14.723)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(8.546 14.723)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.459.473H.468'\n        transform='translate(4.099 14.723)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.463,0V3.291'\n        transform='translate(12.581 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.463,0V3.291'\n        transform='translate(4.502 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.238,0H4.771C1.834,0,0,1.636,0,4.643v9.05c0,3.054,1.834,4.728,4.771,4.728h8.458c2.946,0,4.771-1.645,4.771-4.652V4.643C18.009,1.636,16.184,0,13.238,0Z'\n        transform='translate(0 1.579)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M5.626,20C1.9,20,0,18.311,0,14.985V6.715A4.542,4.542,0,0,1,2.07,2.469.685.685,0,0,1,2.8,2.442a.713.713,0,0,1-.071,1.265A3.143,3.143,0,0,0,1.374,6.715V6.98H14.061a.7.7,0,0,1,0,1.4H1.374v6.608c0,2.538,1.235,3.591,4.252,3.609h6.748c2.974,0,4.243-1.079,4.243-3.618V6.706c0-2.211-.966-3.282-3.165-3.539v.672a.694.694,0,0,1-1.382-.053V.673a.7.7,0,0,1,.222-.49.677.677,0,0,1,.5-.183.712.712,0,0,1,.661.734V1.77C16.461,2.062,18,3.725,18,6.715v8.27C18,18.311,16.1,20,12.374,20Zm6.7-4.918a.877.877,0,0,1,.869-.885h-.009a.863.863,0,0,1,.621.256.894.894,0,0,1,.257.629.87.87,0,1,1-1.739,0Zm-4.174,0a.87.87,0,1,1,.869.885A.877.877,0,0,1,8.148,15.082Zm-4.165,0a.877.877,0,0,1,.869-.885H4.844a.861.861,0,0,1,.62.256.89.89,0,0,1,.257.629.87.87,0,1,1-1.739,0ZM12.322,11.5a.877.877,0,0,1,.869-.884h-.009a.859.859,0,0,1,.621.256.893.893,0,0,1,.257.628.87.87,0,1,1-1.739,0Zm-4.174,0a.87.87,0,1,1,.869.885A.877.877,0,0,1,8.148,11.5Zm-4.165,0a.877.877,0,0,1,.869-.884H4.844a.857.857,0,0,1,.62.256.889.889,0,0,1,.257.628.87.87,0,1,1-1.739,0Zm1.235-7a.694.694,0,0,1-.67-.708V.735a.694.694,0,0,1,1.382,0V1.7H9.861a.7.7,0,0,1,0,1.4H5.913v.7a.706.706,0,0,1-.2.5.683.683,0,0,1-.485.2Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M0,.473H17.824'\n        transform='translate(0.093 6.931)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M9.343,4.36h.009Zm-4.438,0h.01Zm-4.446,0H.468ZM9.343.473h.009Zm-4.438,0h.01ZM.459.473H.468Z'\n        transform='translate(4.099 10.837)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.463,0V3.291'\n        transform='translate(12.581 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.463,0V3.291'\n        transform='translate(4.502 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.238,0H4.771C1.834,0,0,1.636,0,4.643v9.05c0,3.054,1.834,4.728,4.771,4.728h8.458c2.946,0,4.771-1.645,4.771-4.652V4.643C18.009,1.636,16.184,0,13.238,0Z'\n        transform='translate(0 1.579)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.75 2.05)'>\n      <path\n        d='M0,9.274C0,2.318,2.319,0,9.274,0s9.275,2.318,9.275,9.274-2.319,9.274-9.275,9.274S0,16.23,0,9.274Z'\n        transform='translate(0 1.452)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.5H18.008'\n        transform='translate(0.275 6.774)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(13.183 10.711)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(8.784 10.711)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(4.376 10.711)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(13.183 14.563)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(8.784 14.563)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(4.376 14.563)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V3.262'\n        transform='translate(12.783 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V3.262'\n        transform='translate(4.775 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCalendar.displayName = 'IconlyCalendar'\nCalendar.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Calendar)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Message = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.939,18H5.06A5.061,5.061,0,0,1,0,12.95V5.05A5.061,5.061,0,0,1,5.06,0h9.879a5.091,5.091,0,0,1,3.58,1.481A5.012,5.012,0,0,1,20,5.05v7.9A5.061,5.061,0,0,1,14.939,18ZM4.034,5.246A.733.733,0,0,0,3.5,5.47a.764.764,0,0,0-.071,1l.131.13L8.11,10.15a3.129,3.129,0,0,0,1.95.68,3.18,3.18,0,0,0,1.958-.68L16.53,6.54l.08-.08a.774.774,0,0,0-.012-1,.831.831,0,0,0-.528-.26h-.042a.76.76,0,0,0-.519.2L11,9a1.565,1.565,0,0,1-1,.36A1.592,1.592,0,0,1,9,9L4.5,5.4A.778.778,0,0,0,4.034,5.246Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M20,7.143a5.047,5.047,0,0,1-5.03,5.06H5.05A5.047,5.047,0,0,1,0,7.163v-.01S.006,2.727.014.5A.5.5,0,0,1,.822.109C3.2,1.994,7.447,5.431,7.5,5.476a4.067,4.067,0,0,0,2.53.89,4.013,4.013,0,0,0,2.53-.9C12.613,5.43,16.767,2.1,19.179.18a.5.5,0,0,1,.811.39C20,2.779,20,7.143,20,7.143'\n        transform='translate(2 8.797)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M18.973,2.674A5.035,5.035,0,0,0,14.527,0H4.547A5.035,5.035,0,0,0,.1,2.674.864.864,0,0,0,.322,3.752L7.747,9.691a2.826,2.826,0,0,0,1.78.629h.02a2.826,2.826,0,0,0,1.78-.629l7.425-5.939a.864.864,0,0,0,.221-1.078'\n        transform='translate(2.503 3)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M11.314,0,7.048,3.434a2.223,2.223,0,0,1-2.746,0L0,0'\n        transform='translate(3.954 5.561)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.888,0h9.428A4.957,4.957,0,0,1,17.9,1.59a5.017,5.017,0,0,1,1.326,3.7v6.528a5.017,5.017,0,0,1-1.326,3.7,4.957,4.957,0,0,1-3.58,1.59H4.888C1.968,17.116,0,14.741,0,11.822V5.294C0,2.375,1.968,0,4.888,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M5.8,18A5.832,5.832,0,0,1,0,12.155V5.845A5.824,5.824,0,0,1,5.8,0h8.4A5.842,5.842,0,0,1,20,5.845V7.307a.71.71,0,0,1-.707.713L19.283,8a.705.705,0,0,1-.5-.209.716.716,0,0,1-.207-.5V5.845A4.439,4.439,0,0,0,14.2,1.435H5.8A4.44,4.44,0,0,0,1.424,5.845v6.309A4.44,4.44,0,0,0,5.8,16.565h8.4a4.439,4.439,0,0,0,4.378-4.411.716.716,0,0,1,1.424,0A5.842,5.842,0,0,1,14.2,18ZM8.05,9.98,3.928,6.656a.725.725,0,0,1-.106-1.007.7.7,0,0,1,.991-.107L8.969,8.858a1.425,1.425,0,0,0,1.769,0l4.113-3.316h.009a.711.711,0,1,1,.885,1.114L11.632,9.98a2.84,2.84,0,0,1-3.582,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M11.314,0,7.048,3.434a2.223,2.223,0,0,1-2.746,0L0,0'\n        transform='translate(3.954 5.561)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M4.888,0h9.428A4.957,4.957,0,0,1,17.9,1.59a5.017,5.017,0,0,1,1.326,3.7v6.528a5.017,5.017,0,0,1-1.326,3.7,4.957,4.957,0,0,1-3.58,1.59H4.888C1.968,17.116,0,14.741,0,11.822V5.294C0,2.375,1.968,0,4.888,0Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.452 2.852)'>\n      <path\n        d='M11.151,0S7.941,3.853,5.593,3.853,0,0,0,0'\n        transform='translate(3.942 6.167)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.117C0,2.279,2.381,0,9.524,0s9.524,2.279,9.524,9.117-2.381,9.117-9.524,9.117S0,15.954,0,9.117Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nMessage.displayName = 'IconlyMessage'\nMessage.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Message)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Video = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 4.5)'>\n      <path\n        d='M4.113,15A3.91,3.91,0,0,1,0,10.939V4.061A3.91,3.91,0,0,1,4.113,0H9.905a3.91,3.91,0,0,1,4.113,4.061v6.879A3.91,3.91,0,0,1,9.905,15Zm13.844-2.38-1.48-.747a1.624,1.624,0,0,1-.888-1.457V4.583a1.618,1.618,0,0,1,.888-1.455l1.481-.749a1.384,1.384,0,0,1,1.373.064A1.432,1.432,0,0,1,20,3.662v7.676a1.43,1.43,0,0,1-.669,1.219,1.4,1.4,0,0,1-.743.216A1.384,1.384,0,0,1,17.957,12.621Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 5)'>\n      <path\n        d='M3.743.216A1.383,1.383,0,0,0,2.37.152L.888.9A1.618,1.618,0,0,0,0,2.356V8.19A1.622,1.622,0,0,0,.888,9.647l1.481.747A1.372,1.372,0,0,0,3,10.547a1.4,1.4,0,0,0,.743-.216,1.429,1.429,0,0,0,.669-1.218V1.435A1.432,1.432,0,0,0,3.743.216'\n        transform='translate(15.588 2.226)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M9.905,15H4.113A3.91,3.91,0,0,1,0,10.939V4.061A3.91,3.91,0,0,1,4.113,0H9.905a3.91,3.91,0,0,1,4.113,4.061v6.878A3.91,3.91,0,0,1,9.905,15'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(1.8 4.5)'>\n      <path\n        d='M13.266,10.37a3.272,3.272,0,0,1-3.53,3.4H3.519A3.265,3.265,0,0,1,0,10.37V3.41A3.275,3.275,0,0,1,3.53,0H9.736a3.28,3.28,0,0,1,3.53,3.41Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.582,4.1.228a1,1,0,0,1,1.637.777V7.877A1,1,0,0,1,4.1,8.654L0,5.3'\n        transform='translate(14.016 3.194)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 4.5)'>\n      <path\n        d='M19.02,2.569a1.686,1.686,0,0,0-1.813.223l-1.575,1.3a.741.741,0,0,0-.1,1.037.73.73,0,0,0,1.03.1l1.575-1.3a.234.234,0,0,1,.259-.031.241.241,0,0,1,.142.226v6.749a.241.241,0,0,1-.142.226.234.234,0,0,1-.26-.031L14.406,7.995V4.087A3.953,3.953,0,0,0,10.23,0H4.176A3.953,3.953,0,0,0,0,4.087v6.836A3.944,3.944,0,0,0,4.166,15a.737.737,0,0,0,0-1.473,2.462,2.462,0,0,1-2.7-2.6V4.087A2.471,2.471,0,0,1,4.176,1.473H10.23a2.471,2.471,0,0,1,2.712,2.614v6.836a2.467,2.467,0,0,1-2.712,2.6H8.543a.737.737,0,0,0,0,1.473H10.23a3.949,3.949,0,0,0,4.176-4.076V9.9l2.8,2.309a1.684,1.684,0,0,0,1.076.391A1.721,1.721,0,0,0,20,10.875V4.125a1.709,1.709,0,0,0-.98-1.557'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(1.8 4.5)'>\n      <path\n        d='M0,3.582,4.1.228a1,1,0,0,1,1.637.777V7.877A1,1,0,0,1,4.1,8.654L0,5.3'\n        transform='translate(14.016 3.194)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M13.266,10.37a3.272,3.272,0,0,1-3.53,3.4H3.519A3.265,3.265,0,0,1,0,10.37V3.41A3.275,3.275,0,0,1,3.53,0H9.736a3.28,3.28,0,0,1,3.53,3.41Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.514 5.114)'>\n      <path\n        d='M0,2.466C1.838,1.009,4.3-.4,4.771.1c.771.829.7,8.714,0,9.467-.429.467-2.914-.943-4.771-2.39'\n        transform='translate(13.637 2.092)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,6.923C0,1.73,1.725,0,6.9,0s6.9,1.73,6.9,6.923-1.725,6.923-6.9,6.923S0,12.114,0,6.923Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVideo.displayName = 'IconlyVideo'\nVideo.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Video)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Plus = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.67,20H5.33a5.349,5.349,0,0,1-3.944-1.394A5.356,5.356,0,0,1,0,14.67V5.33A5.358,5.358,0,0,1,1.386,1.386,5.358,5.358,0,0,1,5.33,0h9.33a5.372,5.372,0,0,1,3.945,1.386A5.345,5.345,0,0,1,20,5.33v9.34C20,18.057,18.057,20,14.67,20ZM6.33,9.16a.819.819,0,0,0-.83.83.839.839,0,0,0,.83.84H9.16V13.66a.83.83,0,1,0,1.66,0V10.83h2.84a.835.835,0,0,0,0-1.669H10.82V6.34a.83.83,0,1,0-1.66,0V9.16Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.667,0H5.333C1.929,0,0,1.929,0,5.333v9.333C0,18.062,1.92,20,5.333,20h9.333C18.071,20,20,18.062,20,14.667V5.333C20,1.929,18.071,0,14.667,0Z'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7.32,4.708H4.75V7.257a.75.75,0,0,1-1.5,0V4.708H.68a.75.75,0,0,1,0-1.494H3.242V.674a.758.758,0,0,1,1.507,0V3.214H7.32a.75.75,0,0,1,0,1.494Z'\n        transform='translate(6 6)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.476,0V7.326'\n        transform='translate(9.524 6.327)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.333.476H0'\n        transform='translate(6.333 9.515)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.765.756V9.56a.764.764,0,0,1-.765-.765V6.253C18.47,3.2,16.8,1.53,13.756,1.53h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,1,1,1.53,0C20,17.608,17.608,20,13.756,20Zm3.765-5.857a.774.774,0,0,1-.739-.792v-.967a.765.765,0,1,1,1.53.053V13.4a.764.764,0,0,1-.764.739Zm3.4-3.588H6.658a.817.817,0,0,1-.792-.774.756.756,0,0,1,.757-.765H9.261v-2.4a.783.783,0,0,1,.774-.765.758.758,0,0,1,.225.034.766.766,0,0,1,.567.74V9.015h2.6a.772.772,0,0,1,.792.774.766.766,0,0,1-.748.765Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.476,0V7.326'\n        transform='translate(9.524 6.327)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M7.333.476H0'\n        transform='translate(6.333 9.515)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.3 2.3)'>\n      <path\n        d='M.526,0V7.148'\n        transform='translate(9.211 6.163)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.156.526H0'\n        transform='translate(6.159 9.211)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.737C0,2.435,2.435,0,9.737,0s9.737,2.435,9.737,9.737-2.435,9.737-9.737,9.737S0,17.039,0,9.737Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPlus.displayName = 'IconlyPlus'\nPlus.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Plus)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Chart = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.669,20H5.33a5.352,5.352,0,0,1-3.94-1.39A5.353,5.353,0,0,1,0,14.67V5.33a5.353,5.353,0,0,1,1.389-3.94A5.353,5.353,0,0,1,5.33,0h9.339a5.345,5.345,0,0,1,3.937,1.389A5.38,5.38,0,0,1,20,5.33v9.34a5.352,5.352,0,0,1-1.39,3.94A5.354,5.354,0,0,1,14.669,20Zm-.02-9.087a.865.865,0,0,0-.449.128.807.807,0,0,0-.38.789v3.28a.826.826,0,0,0,.83.75.843.843,0,0,0,.83-.75V11.83a.839.839,0,0,0-.391-.789A.823.823,0,0,0,14.649,10.913ZM10.051,4a.823.823,0,0,0-.44.128.847.847,0,0,0-.392.79V15.11a.843.843,0,0,0,.831.75.827.827,0,0,0,.83-.75V4.92a.816.816,0,0,0-.379-.79A.872.872,0,0,0,10.051,4ZM5.39,7.282a.822.822,0,0,0-.44.128.843.843,0,0,0-.39.79v6.91a.834.834,0,0,0,1.659,0V8.2a.845.845,0,0,0-.389-.79A.825.825,0,0,0,5.39,7.282Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.676,0H5.333C1.929,0,0,1.929,0,5.333v9.333C0,18.071,1.929,20,5.333,20h9.342C18.08,20,20,18.071,20,14.667V5.333C20,1.929,18.08,0,14.676,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.827,0A.833.833,0,0,0,0,.836V7.707a.831.831,0,0,0,1.662,0V.836A.835.835,0,0,0,.827,0'\n        transform='translate(4.542 7.369)'\n        fill={color}\n      />\n      <path\n        d='M.827,0A.833.833,0,0,0,0,.836V10.987a.831.831,0,0,0,1.662,0V.836A.835.835,0,0,0,.827,0'\n        transform='translate(9.209 4.089)'\n        fill={color}\n      />\n      <path\n        d='M.836,0A.835.835,0,0,0,0,.836V4.08a.831.831,0,0,0,1.662,0V.836A.833.833,0,0,0,.836,0'\n        transform='translate(13.804 10.996)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.476,0V6.86'\n        transform='translate(4.895 8.202)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.476,0V10.143'\n        transform='translate(9.562 4.919)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.476,0V3.235'\n        transform='translate(14.152 11.827)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.493C17.59,0,20,2.392,20,6.253V8.575a.764.764,0,0,1-.765.765h-.009a.756.756,0,0,1-.756-.774V6.253c0-3.043-1.68-4.723-4.723-4.723H6.253C3.2,1.53,1.53,3.21,1.53,6.253v7.5c0,3.043,1.68,4.714,4.723,4.714h7.493c3.052,0,4.723-1.68,4.723-4.714a.765.765,0,1,1,1.53,0C20,17.608,17.608,20,13.756,20ZM5.7,15.479a.765.765,0,0,1-.738-.791v-6.4a.757.757,0,0,1,.791-.731.766.766,0,0,1,.739.792V14.74a.765.765,0,0,1-.765.739ZM9.27,14.7V5.321a.765.765,0,1,1,1.53,0V14.7a.765.765,0,1,1-1.53,0Zm4.239-.009V11.7a.765.765,0,0,1,1.531,0v2.991a.765.765,0,0,1-1.531,0ZM9.27,5.277v.044Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.476,0V6.86'\n        transform='translate(4.895 8.202)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.476,0V10.143'\n        transform='translate(9.562 4.919)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.476,0V3.235'\n        transform='translate(14.152 11.827)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.3 2.3)'>\n      <path\n        d='M.526,0V6.694'\n        transform='translate(4.657 7.961)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.526,0V9.9'\n        transform='translate(9.211 4.757)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.526,0V3.157'\n        transform='translate(13.689 11.498)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.737C0,2.435,2.435,0,9.737,0s9.737,2.435,9.737,9.737-2.435,9.737-9.737,9.737S0,17.039,0,9.737Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChart.displayName = 'IconlyChart'\nChart.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Chart)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Game = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10.01,20c-1.6,0-2.909-.012-4.122-.039A5.643,5.643,0,0,1,0,14.181V9.875A5.648,5.648,0,0,1,5.9,4.094C7.1,4.076,8.47,4.056,9.833,4.056V3.892a1.217,1.217,0,0,0-1.227-1.2H7.635A1.991,1.991,0,0,1,5.623.723.739.739,0,0,1,6.359,0,.73.73,0,0,1,7.1.723a.531.531,0,0,0,.539.52h.972a2.7,2.7,0,0,1,2.7,2.64v.183c.6,0,1.213.008,1.8.016l1,.012A5.644,5.644,0,0,1,20,9.875v4.307a5.643,5.643,0,0,1-5.888,5.78C12.9,19.987,11.6,20,10.01,20Zm-4.7-8.7a.739.739,0,0,0-.736.723.73.73,0,0,0,.736.723h1.04v1.021a.73.73,0,0,0,.736.722.738.738,0,0,0,.735-.722V12.746h1.03a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.723H7.821V10.289a.736.736,0,0,0-1.472,0V11.3ZM14.7,12.986a.73.73,0,0,0-.736.723.722.722,0,0,0,.736.723h.1a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.723ZM13.023,9.672a.73.73,0,0,0-.736.723.722.722,0,0,0,.736.723h.1a.723.723,0,1,0,0-1.445Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.682,3.882v.183c-.491-.01-.981-.01-1.472-.01V3.892a1.222,1.222,0,0,0-1.227-1.2H2.012A1.994,1.994,0,0,1,0,.723.735.735,0,0,1,.736,0a.728.728,0,0,1,.736.723.532.532,0,0,0,.54.52h.972a2.7,2.7,0,0,1,2.7,2.64'\n        transform='translate(5.623 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M10.01,15.944c-1.54,0-2.888-.013-4.122-.039A5.644,5.644,0,0,1,0,10.125V5.819A5.648,5.648,0,0,1,5.9.039C7.223.018,8.521,0,9.833,0c.482,0,.981,0,1.472.01.629,0,1.27.009,1.889.017l.918.012A5.643,5.643,0,0,1,20,5.819v4.306a5.644,5.644,0,0,1-5.888,5.781C12.878,15.932,11.536,15.944,10.01,15.944Zm-4.7-8.7a.739.739,0,0,0-.736.722.73.73,0,0,0,.736.723h1.04V9.711a.736.736,0,0,0,1.472,0V8.69h1.03a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.722H7.821V6.233a.736.736,0,0,0-1.472,0V7.245ZM14.7,8.931a.73.73,0,0,0-.736.723.721.721,0,0,0,.736.722h.1a.73.73,0,0,0,.736-.722.739.739,0,0,0-.736-.723ZM13.023,5.617a.73.73,0,0,0-.736.722.722.722,0,0,0,.736.723h.1a.73.73,0,0,0,.735-.723.738.738,0,0,0-.735-.722Z'\n        transform='translate(0 4.056)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.53,0V3.745'\n        transform='translate(6.318 10.314)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.821.519H0'\n        transform='translate(4.938 11.667)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.583.519H.476'\n        transform='translate(12.783 9.909)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.583.519H.476'\n        transform='translate(14.596 13.483)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H0A1.355,1.355,0,0,0,1.368,1.341H2.424A2.1,2.1,0,0,1,4.54,3.413v.675'\n        transform='translate(6.072 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M14.428,15.589q-4.508.076-8.856,0A5.34,5.34,0,0,1,0,10.138V5.488A5.34,5.34,0,0,1,5.573.037q4.374-.075,8.856,0A5.34,5.34,0,0,1,20,5.488v4.65A5.339,5.339,0,0,1,14.428,15.589Z'\n        transform='translate(0 4.373)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.871,19.962A5.646,5.646,0,0,1,.005,14.55C0,14.426,0,14.3,0,14.18V9.87A5.668,5.668,0,0,1,5.541,4.1c.122,0,.246,0,.371.005H9.871v-.23A1.255,1.255,0,0,0,8.617,2.643h-1a2.058,2.058,0,0,1-1.383-.562A1.948,1.948,0,0,1,5.649.7.7.7,0,0,1,6.34,0h.008a.7.7,0,0,1,.7.691.552.552,0,0,0,.169.4.558.558,0,0,0,.391.161H8.621a2.656,2.656,0,0,1,2.646,2.616V4.8a.7.7,0,0,1-.7.7H5.882c-.122,0-.216-.006-.308,0A4.273,4.273,0,0,0,1.4,9.854v4.34c0,.109,0,.2,0,.3a4.262,4.262,0,0,0,4.452,4.077c2.718.046,5.481.046,8.256,0,.134,0,.228.006.321,0A4.268,4.268,0,0,0,18.6,14.209V9.87c0-.111,0-.2,0-.3A4.265,4.265,0,0,0,14.128,5.5.7.7,0,0,1,14.11,4.1,5.744,5.744,0,0,1,20,9.516c.005.124.006.248,0,.372v4.306a5.661,5.661,0,0,1-5.537,5.771c-.122,0-.247,0-.372,0-1.378.025-2.763.036-4.142.036S7.212,19.986,5.871,19.962Zm1.205-5.474a.759.759,0,0,1-.753-.756v-1H5.314a.763.763,0,0,1-.728-.35.752.752,0,0,1,0-.8.763.763,0,0,1,.728-.35H6.323v-.994a.762.762,0,0,1,1.524,0v.994H8.855a.763.763,0,0,1,.728.35.752.752,0,0,1,0,.8.763.763,0,0,1-.728.35H7.846v1a.769.769,0,0,1-.762.756Zm7.1-.247a.744.744,0,0,1,0-1.055.766.766,0,0,1,.823-.167.964.964,0,0,1,.248.167.744.744,0,0,1-.005,1.055.758.758,0,0,1-1.062,0Zm-1.7-3.341a.725.725,0,0,1,0-1.064.68.68,0,0,1,.239-.167.745.745,0,0,1,.567,0,.9.9,0,0,1,.257.167.764.764,0,0,1,.168.818.61.61,0,0,1-.168.246.772.772,0,0,1-1.062,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.53,0V3.745'\n        transform='translate(6.318 10.314)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.821.519H0'\n        transform='translate(4.938 11.667)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.583.519H.476'\n        transform='translate(12.783 9.909)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.583.519H.476'\n        transform='translate(14.596 13.483)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H0A1.355,1.355,0,0,0,1.368,1.341H2.424A2.1,2.1,0,0,1,4.54,3.413v.675'\n        transform='translate(6.072 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M14.428,15.589q-4.508.076-8.856,0A5.34,5.34,0,0,1,0,10.138V5.488A5.34,5.34,0,0,1,5.573.037q4.374-.075,8.856,0A5.34,5.34,0,0,1,20,5.488v4.65A5.339,5.339,0,0,1,14.428,15.589Z'\n        transform='translate(0 4.373)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 1.977)'>\n      <path\n        d='M.477,0V3.575'\n        transform='translate(6.777 10.085)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.648.477H0'\n        transform='translate(5.432 11.395)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.528.477h-.1'\n        transform='translate(12.949 9.716)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.528.477h-.1'\n        transform='translate(14.68 13.128)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0H0A1.293,1.293,0,0,0,1.306,1.28H2.314a2.005,2.005,0,0,1,2.02,1.978V4.265'\n        transform='translate(6.514 0.239)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M19.1,7.414C19.1,1.854,16.709,0,9.549,0S0,1.854,0,7.414s2.387,7.414,9.549,7.414S19.1,12.975,19.1,7.414Z'\n        transform='translate(0.716 4.504)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nGame.displayName = 'IconlyGame'\nGame.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Game)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Bag = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M13.159,20H4.868c-1.88,0-3.175-.438-3.958-1.338C.091,17.72-.172,16.3.105,14.314L.883,8.12A4.081,4.081,0,0,1,2.076,5.708,2.736,2.736,0,0,1,3.932,5H4.01a.679.679,0,0,1,0-.226,5,5,0,0,1,9.991,0h-.026A.517.517,0,0,1,13.93,5h.157a2.668,2.668,0,0,1,1.827.731,4.388,4.388,0,0,1,1.23,2.389l.769,6.195a5.133,5.133,0,0,1-.906,4.23A4.914,4.914,0,0,1,13.159,20ZM11.885,8.33a.91.91,0,1,0,.884.909A.9.9,0,0,0,11.885,8.33ZM6.1,8.33a.91.91,0,1,0,.884.909A.9.9,0,0,0,6.1,8.33ZM8.966,1.3A3.482,3.482,0,0,0,5.482,4.774a.633.633,0,0,1,0,.226h7.011a.653.653,0,0,1-.043-.226A3.482,3.482,0,0,0,8.966,1.3Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M13.159,15H4.868c-1.88,0-3.175-.438-3.958-1.339C.091,12.72-.172,11.3.105,9.315L.883,3.12A4.083,4.083,0,0,1,2.076.707,2.736,2.736,0,0,1,3.932,0H14.087a2.667,2.667,0,0,1,1.827.731,4.391,4.391,0,0,1,1.23,2.389l.769,6.195a5.132,5.132,0,0,1-.906,4.23A4.914,4.914,0,0,1,13.159,15ZM11.885,3.329a.91.91,0,1,0,.884.91A.9.9,0,0,0,11.885,3.329Zm-5.789,0a.91.91,0,1,0,.884.91A.9.9,0,0,0,6.1,3.329Z'\n        transform='translate(0 5)'\n        fill={color}\n      />\n      <path\n        d='M9.974,4.774A.5.5,0,0,1,9.93,5H8.493a.649.649,0,0,1-.044-.226,3.484,3.484,0,0,0-6.968,0,.649.649,0,0,1,0,.226H.01a.649.649,0,0,1,0-.226,5,5,0,0,1,9.99,0Z'\n        transform='translate(4)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2.5 1.5)'>\n      <path\n        d='M13.213,14.682H4.865C1.8,14.682-.554,13.574.114,9.117L.892,3.076C1.3.851,2.723,0,3.968,0H14.146c1.263,0,2.6.915,3.076,3.076L18,9.117C18.567,13.071,16.279,14.682,13.213,14.682Z'\n        transform='translate(0.801 5.318)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M8.659,4.32A4.32,4.32,0,0,0,4.339,0h0A4.32,4.32,0,0,0,0,4.32H0'\n        transform='translate(5.492 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.481.458H.435'\n        transform='translate(12.316 9.144)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.481.458H.435'\n        transform='translate(6.485 9.144)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M1.2,18.287A4.93,4.93,0,0,1,.183,13.739a.768.768,0,1,1,1.52.22,4.064,4.064,0,0,0,.659,3.323,4.2,4.2,0,0,0,3.172,1.142h8.012c1.59,0,2.688-.334,3.259-1.028a4.4,4.4,0,0,0,.572-3.437l-.747-5.81c-.264-1.407-1.081-2.286-2.187-2.286h-9.8c-1.054,0-1.871.879-2.2,2.347L2.23,9.5A.773.773,0,0,1,.71,9.238L.93,7.919c.58-2.681,2.293-3.56,3.707-3.56h8.24a3.438,3.438,0,0,0-1.089-2.021A3.372,3.372,0,0,0,7.026,2.6v.088A.774.774,0,0,1,5.893,1.634a4.919,4.919,0,0,1,8.548,2.724c1.475,0,3.224.879,3.707,3.516l.755,5.872a5.789,5.789,0,0,1-.967,4.659c-.878,1.046-2.318,1.556-4.392,1.556h-8A4.924,4.924,0,0,1,1.2,18.287Zm10.813-8.258a.881.881,0,0,1-.387-.483.735.735,0,0,1-.061-.334.58.58,0,0,1,0-.176V8.869l.087-.149a.388.388,0,0,1,.106-.132l.131-.114a.686.686,0,0,1,.158-.079.6.6,0,0,1,.167-.052.761.761,0,0,1,.343,0,1.12,1.12,0,0,1,.325.131,1.259,1.259,0,0,1,.238.247.346.346,0,0,1,.078.149.522.522,0,0,1,.053.167.58.58,0,0,1,0,.176.738.738,0,0,1-.07.334.7.7,0,0,1-.211.29.882.882,0,0,1-.616.264A1.063,1.063,0,0,1,12.008,10.029ZM6.166,9.835a.871.871,0,0,1-.194-.29.883.883,0,0,1-.062-.334.58.58,0,0,1,0-.176.522.522,0,0,1,.053-.167.5.5,0,0,1,.079-.149.4.4,0,0,1,.105-.132.593.593,0,0,1,.131-.105A.5.5,0,0,1,6.429,8.4.543.543,0,0,1,6.6,8.349a.761.761,0,0,1,.343,0,.545.545,0,0,1,.167.053.5.5,0,0,1,.149.079A.592.592,0,0,1,7.4,8.6a.4.4,0,0,1,.105.131.865.865,0,0,1,.088.15l.052.166a.953.953,0,0,1,0,.176.857.857,0,0,1-1.475.616Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 1.5)'>\n      <path\n        d='M13.213,14.682H4.865C1.8,14.682-.554,13.574.114,9.117L.892,3.076C1.3.851,2.723,0,3.968,0H14.146c1.263,0,2.6.915,3.076,3.076L18,9.117C18.567,13.071,16.279,14.682,13.213,14.682Z'\n        transform='translate(0.801 5.318)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M8.659,4.32A4.32,4.32,0,0,0,4.339,0h0A4.32,4.32,0,0,0,0,4.32H0'\n        transform='translate(5.492 0.778)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.481.458H.435'\n        transform='translate(12.316 9.144)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.481.458H.435'\n        transform='translate(6.485 9.144)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.95 2.55)'>\n      <path\n        d='M8.659,4.32A4.33,4.33,0,0,0,0,4.3V4.32'\n        transform='translate(4.755 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.523.5H.477'\n        transform='translate(11.5 8.324)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.523.5H.477'\n        transform='translate(5.669 8.324)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M9.084,14.934c-6.508,0-7.257-2.05-8.718-7.467C-1.1,2.033,1.841,0,9.084,0S19.268,2.033,17.8,7.467C16.341,12.884,15.592,14.934,9.084,14.934Z'\n        transform='translate(0 4.006)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nBag.displayName = 'IconlyBag'\nBag.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Bag)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Bag2 = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M14.123,20H4.877A4.945,4.945,0,0,1,0,15V9.48A4.95,4.95,0,0,1,4.877,4.47h.2A4.577,4.577,0,0,1,6.388,1.31,4.44,4.44,0,0,1,9.509,0a4.324,4.324,0,0,1,3.1,1.309A4.56,4.56,0,0,1,13.918,4.47h.2A4.95,4.95,0,0,1,19,9.48V15A4.945,4.945,0,0,1,14.123,20ZM13.207,5.66a.742.742,0,0,0-.732.75V7.57a.732.732,0,1,0,1.463,0V6.41A.742.742,0,0,0,13.207,5.66Zm-7.5,0a.751.751,0,0,0-.732.75V7.57a.732.732,0,1,0,1.463,0V6.41A.742.742,0,0,0,5.706,5.66Zm3.8-4.16a2.979,2.979,0,0,0-2.1.879A3.092,3.092,0,0,0,6.545,4.47h5.91A3,3,0,0,0,9.509,1.5Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M14.12,15H4.88A4.863,4.863,0,0,1,0,10.165V4.835A4.863,4.863,0,0,1,4.88,0H14.12A4.863,4.863,0,0,1,19,4.835v5.329A4.863,4.863,0,0,1,14.12,15'\n        transform='translate(0 5)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.255,8a.734.734,0,0,1-.745-.722V4.357a2.961,2.961,0,0,0-3-2.912,3.131,3.131,0,0,0-2.13.843A2.847,2.847,0,0,0,1.49,4.343V7.278A.734.734,0,0,1,.745,8,.734.734,0,0,1,0,7.278V4.357A4.27,4.27,0,0,1,1.33,1.263,4.641,4.641,0,0,1,4.512,0,4.43,4.43,0,0,1,9,4.357V7.278A.734.734,0,0,1,8.255,8'\n        transform='translate(5)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 2.5)'>\n      <path\n        d='M7.562,6.805V3.773A3.781,3.781,0,0,0,0,3.756V6.805'\n        transform='translate(5.211 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.742,14.026H4.258A4.256,4.256,0,0,1,0,9.771V4.255A4.256,4.256,0,0,1,4.258,0h9.484A4.256,4.256,0,0,1,18,4.255V9.771A4.256,4.256,0,0,1,13.742,14.026Z'\n        transform='translate(0 4.474)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M14.12,4.474h-.207A4.467,4.467,0,0,0,9.512,0,4.35,4.35,0,0,0,6.387,1.311a4.558,4.558,0,0,0-1.3,3.163H4.88A4.949,4.949,0,0,0,0,9.479v5.516A4.949,4.949,0,0,0,4.88,20a.75.75,0,0,0,0-1.5,3.466,3.466,0,0,1-3.417-3.505V9.479A3.466,3.466,0,0,1,4.88,5.974h.2V7.555a.732.732,0,1,0,1.463,0V4.509a3.043,3.043,0,0,1,.872-2.134A3.127,3.127,0,0,1,9.509,1.5a2.985,2.985,0,0,1,2.942,2.974h-3.2a.75.75,0,0,0,0,1.5h3.2V7.555a.732.732,0,1,0,1.463,0V5.974h.2a3.466,3.466,0,0,1,3.417,3.505v5.516A3.466,3.466,0,0,1,14.12,18.5H8.863a.75.75,0,0,0,0,1.5H14.12A4.949,4.949,0,0,0,19,14.995V9.479a4.949,4.949,0,0,0-4.88-5.005'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 2.5)'>\n      <path\n        d='M7.562,6.805V3.773A3.781,3.781,0,0,0,0,3.756V6.805'\n        transform='translate(5.211 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M13.742,14.026H4.258A4.256,4.256,0,0,1,0,9.771V4.255A4.256,4.256,0,0,1,4.258,0h9.484A4.256,4.256,0,0,1,18,4.255V9.771A4.256,4.256,0,0,1,13.742,14.026Z'\n        transform='translate(0 4.474)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.95 2.65)'>\n      <path\n        d='M7.562,6.822V3.79A3.781,3.781,0,1,0,0,3.773V6.822'\n        transform='translate(5.238 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,7.059C0,1.765,2.255,0,9.019,0s9.019,1.765,9.019,7.059-2.255,7.058-9.019,7.058S0,12.352,0,7.059Z'\n        transform='translate(0 4.499)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nBag2.displayName = 'IconlyBag2'\nBag2.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Bag2)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst TicketStar = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M15.858,18H4.143A4.128,4.128,0,0,1,0,13.9V11.219a.747.747,0,0,1,.75-.743A1.484,1.484,0,0,0,2.24,9,1.411,1.411,0,0,0,.75,7.612.748.748,0,0,1,0,6.869L0,4.1A4.128,4.128,0,0,1,4.144,0H15.856A4.129,4.129,0,0,1,20,4.1V6.782a.745.745,0,0,1-.75.743,1.475,1.475,0,1,0,0,2.95.747.747,0,0,1,.75.743V13.9A4.128,4.128,0,0,1,15.858,18ZM10,11.27h0l1.455.757a.751.751,0,0,0,.349.088.741.741,0,0,0,.726-.859l-.279-1.608L13.431,8.51a.72.72,0,0,0,.187-.753.729.729,0,0,0-.6-.5l-1.629-.236-.729-1.463a.743.743,0,0,0-1.327,0L8.608,7.025,6.982,7.26a.736.736,0,0,0-.6.5.723.723,0,0,0,.187.753L7.748,9.648,7.47,11.256a.727.727,0,0,0,.3.718.741.741,0,0,0,.777.055L10,11.27Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M19.25,10.476a1.476,1.476,0,1,1,0-2.952.754.754,0,0,0,.53-.217A.741.741,0,0,0,20,6.781V4.1A4.129,4.129,0,0,0,15.856,0H4.144A4.129,4.129,0,0,0,0,4.1V6.868a.741.741,0,0,0,.22.526.754.754,0,0,0,.53.217A1.41,1.41,0,0,1,2.239,9,1.484,1.484,0,0,1,.75,10.476.747.747,0,0,0,0,11.22v2.675A4.129,4.129,0,0,0,4.143,18H15.857A4.129,4.129,0,0,0,20,13.895V11.22a.747.747,0,0,0-.75-.743'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7.086,3.388,5.907,4.536l.279,1.623a.741.741,0,0,1-1.076.779L3.655,6.173,2.2,6.939a.739.739,0,0,1-1.072-.78L1.4,4.536.224,3.388A.739.739,0,0,1,.637,2.126l1.626-.237L2.992.412A.738.738,0,0,1,3.655,0h0a.736.736,0,0,1,.662.413l.729,1.476,1.629.238a.739.739,0,0,1,.409,1.261'\n        transform='translate(6.344 5.201)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M15.107,16.667A3.392,3.392,0,0,0,18.5,13.274v-2.7a2.239,2.239,0,1,1,0-4.478l0-2.7A3.392,3.392,0,0,0,15.106,0H3.394A3.393,3.393,0,0,0,0,3.393v2.79A2.163,2.163,0,0,1,2.239,8.335,2.236,2.236,0,0,1,0,10.574v2.7a3.392,3.392,0,0,0,3.392,3.393Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.205,5.179l1.74.915a.223.223,0,0,0,.323-.234L4.935,3.921,6.344,2.55a.222.222,0,0,0-.123-.379L4.275,1.888,3.4.124a.222.222,0,0,0-.4,0L2.135,1.888.19,2.171a.222.222,0,0,0-.123.379L1.475,3.921,1.142,5.86a.223.223,0,0,0,.323.234l1.74-.915Z'\n        transform='translate(6.794 5.676)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M10.4,18a.743.743,0,1,1,0-1.486h5.463A2.634,2.634,0,0,0,18.5,13.9V11.868a2.956,2.956,0,0,1,0-5.735l0-2.029a2.634,2.634,0,0,0-2.642-2.619H4.144A2.634,2.634,0,0,0,1.5,4.1V6.213A2.863,2.863,0,0,1,3.739,9,2.969,2.969,0,0,1,1.5,11.868V13.9a2.634,2.634,0,0,0,2.642,2.619h1.79a.743.743,0,1,1,0,1.486H4.143A4.128,4.128,0,0,1,0,13.9V11.219a.747.747,0,0,1,.75-.743A1.484,1.484,0,0,0,2.239,9,1.409,1.409,0,0,0,.75,7.612a.749.749,0,0,1-.53-.219A.741.741,0,0,1,0,6.869L0,4.1A4.128,4.128,0,0,1,4.144,0H15.856A4.129,4.129,0,0,1,20,4.1V6.782a.744.744,0,0,1-.22.526.752.752,0,0,1-.53.218,1.475,1.475,0,1,0,0,2.95.747.747,0,0,1,.75.743V13.9A4.128,4.128,0,0,1,15.858,18ZM7.571,12.808a1.007,1.007,0,0,1-.385-.977l.276-1.653L6.294,9.005a1.013,1.013,0,0,1-.246-1.023A.97.97,0,0,1,6.832,7.3l1.612-.242.723-1.506a.958.958,0,0,1,1.738,0L11.691,7.1a.775.775,0,0,1-.312,1.031.716.716,0,0,1-.563.053.743.743,0,0,1-.436-.373l-.331-.649L9.6,8.1a.74.74,0,0,1-.558.418l-.968.145.7.706a.775.775,0,0,1,.213.675l-.166.994.868-.469a.719.719,0,0,1,.689,0l.868.469-.165-.994a.777.777,0,0,1,.212-.676l1.446-1.452a.689.689,0,0,1,.524-.216.727.727,0,0,1,.525.23.776.776,0,0,1-.014,1.078l-1.167,1.173.276,1.653a1,1,0,0,1-.386.977.945.945,0,0,1-1.022.075L10.034,12.1l-1.443.779A.928.928,0,0,1,8.14,13,.946.946,0,0,1,7.571,12.808Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M15.107,16.667A3.392,3.392,0,0,0,18.5,13.274v-2.7a2.239,2.239,0,1,1,0-4.478l0-2.7A3.392,3.392,0,0,0,15.106,0H3.394A3.393,3.393,0,0,0,0,3.393v2.79A2.163,2.163,0,0,1,2.239,8.335,2.236,2.236,0,0,1,0,10.574v2.7a3.392,3.392,0,0,0,3.392,3.393Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.205,5.179l1.74.915a.223.223,0,0,0,.323-.234L4.935,3.921,6.344,2.55a.222.222,0,0,0-.123-.379L4.275,1.888,3.4.124a.222.222,0,0,0-.4,0L2.135,1.888.19,2.171a.222.222,0,0,0-.123.379L1.475,3.921,1.142,5.86a.223.223,0,0,0,.323.234l1.74-.915Z'\n        transform='translate(6.794 5.676)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.65 3.411)'>\n      <path\n        d='M18.79,10.583c-2.661,0-2.661-4.114,0-4.114C18.79,1.7,18.79,0,9.4,0S0,1.7,0,6.469c2.661,0,2.661,4.114,0,4.114,0,4.768,0,6.47,9.4,6.47S18.79,15.351,18.79,10.583Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.018,0C2.335,0,2.27,1.089,1.864,1.475S.194,1.42.018,2.1s.962.916,1.1,1.5S.567,5.016,1.16,5.427s1.233-.518,1.858-.518,1.264.927,1.858.518-.1-1.235.039-1.822,1.278-.819,1.1-1.5S4.579,1.86,4.172,1.475,3.7,0,3.018,0Z'\n        transform='translate(6.377 5.76)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTicketStar.displayName = 'IconlyTicketStar'\nTicketStar.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(TicketStar)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst MoreCircle = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,0,1,2.926,2.93,10,10,0,1,1,10,20ZM14.48,8.8A1.2,1.2,0,1,0,15.67,10,1.2,1.2,0,0,0,14.48,8.8ZM10,8.8A1.2,1.2,0,1,0,11.19,10,1.2,1.2,0,0,0,10,8.8Zm-4.48,0A1.2,1.2,0,1,0,6.71,10,1.2,1.2,0,0,0,5.52,8.8Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.959,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,8.959,1.2Zm-4.479,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.479,1.2ZM0,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,0,1.2Z'\n        transform='translate(6.323 10.804)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.25,0A9.25,9.25,0,1,1,0,9.25,9.251,9.251,0,0,1,9.25,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(4.323 8.802)'\n        fill={color}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(8.802 8.802)'\n        fill={color}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(13.281 8.802)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.073,16.1a.727.727,0,1,1,1.152-.888A8.547,8.547,0,1,0,1.454,10a8.636,8.636,0,0,0,.1,1.3.727.727,0,0,1-1.437.22A10,10,0,1,1,2.073,16.1ZM13.28,10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,13.28,10ZM8.8,10A1.2,1.2,0,1,1,10,11.2,1.2,1.2,0,0,1,8.8,10Zm-4.48,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.322,10Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.25,0A9.25,9.25,0,1,1,0,9.25,9.251,9.251,0,0,1,9.25,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(4.323 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(8.802 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(13.281 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(12.709 11.4)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.709 7.4)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(6.7 11.4)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nMoreCircle.displayName = 'IconlyMoreCircle'\nMoreCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(MoreCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst MoreSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.625,0,14.09V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.17C20,17.625,17.725,20,14.34,20Zm.14-11.2A1.2,1.2,0,1,0,15.67,10,1.2,1.2,0,0,0,14.48,8.8ZM10,8.8A1.2,1.2,0,1,0,11.2,10,1.2,1.2,0,0,0,10,8.8Zm-4.48,0A1.2,1.2,0,1,0,6.72,10,1.2,1.2,0,0,0,5.52,8.8Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.959,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,8.959,1.2Zm-4.479,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.479,1.2ZM0,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,0,1.2Z'\n        transform='translate(6.323 10.804)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(4.323 8.802)'\n        fill={color}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(8.802 8.802)'\n        fill={color}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(13.281 8.802)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm7.037-10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,13.281,10ZM8.8,10A1.2,1.2,0,1,1,10,11.2,1.2,1.2,0,0,1,8.8,10ZM4.323,10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.323,10Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(4.323 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(8.802 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2'\n        transform='translate(13.281 8.802)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(13.498 9.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.499 9.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(5.5 9.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nMoreSquare.displayName = 'IconlyMoreSquare'\nMoreSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(MoreSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Discount = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.001)'>\n      <path\n        d='M10.006,20a3.024,3.024,0,0,1-2.131-.868l-.73-.732a1.489,1.489,0,0,0-1.06-.438H5.054a3.015,3.015,0,0,1-3.011-3.011V13.917a1.538,1.538,0,0,0-.44-1.071l-.72-.71a3.021,3.021,0,0,1-.01-4.259l.73-.732a1.5,1.5,0,0,0,.44-1.07V5.055A3.013,3.013,0,0,1,5.054,2.047h1.03a1.511,1.511,0,0,0,1.06-.441l.72-.72A3.017,3.017,0,0,1,12.127.877l.731.729a1.49,1.49,0,0,0,1.06.441h1.03a3.013,3.013,0,0,1,3.011,3.009V6.087A1.485,1.485,0,0,0,18.4,7.145l.72.72a3.03,3.03,0,0,1,.02,4.251l-.02.02-.01.01-.71.71a1.488,1.488,0,0,0-.441,1.061v1.029a3.014,3.014,0,0,1-3.011,3.011h-1.03a1.489,1.489,0,0,0-1.06.438l-.721.72A2.986,2.986,0,0,1,10.006,20Zm2.571-8.3a.875.875,0,1,0,.87.87A.877.877,0,0,0,12.578,11.7Zm-.005-5.144a.866.866,0,0,0-.616.254l-5.142,5.14a.88.88,0,0,0,0,1.239.829.829,0,0,0,.61.26.837.837,0,0,0,.62-.26l5.143-5.139a.875.875,0,0,0-.616-1.495Zm-5.137,0a.875.875,0,1,0,.87.869A.876.876,0,0,0,7.435,6.556Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M10,20a3,3,0,0,1-2.124-.875l-.73-.73a1.5,1.5,0,0,0-1.064-.439H5.054a3.015,3.015,0,0,1-3.011-3.011V13.916a1.509,1.509,0,0,0-.44-1.065l-.718-.717A3.015,3.015,0,0,1,.874,7.877l.73-.731a1.5,1.5,0,0,0,.439-1.064V5.056A3.015,3.015,0,0,1,5.054,2.044H6.082A1.5,1.5,0,0,0,7.146,1.6L7.865.886A3.014,3.014,0,0,1,12.122.875l.73.73a1.5,1.5,0,0,0,1.063.439h1.028a3.015,3.015,0,0,1,3.011,3.012V6.083a1.509,1.509,0,0,0,.44,1.065l.718.718a3.009,3.009,0,0,1,.02,4.247c-.01.01-.019.021-.029.03l-.71.71a1.5,1.5,0,0,0-.439,1.064v1.027a3.015,3.015,0,0,1-3.011,3.011H13.915a1.5,1.5,0,0,0-1.064.44l-.719.718A3,3,0,0,1,10,20'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.4,6.638a.9.9,0,0,1-.189-.282.845.845,0,0,1-.061-.34.854.854,0,0,1,.061-.341A1.2,1.2,0,0,1,5.39,5.4a.885.885,0,0,1,.964-.194.786.786,0,0,1,.289.187.9.9,0,0,1,0,1.237.907.907,0,0,1-.619.257A.894.894,0,0,1,5.4,6.638Zm-5.138,0a.877.877,0,0,1,0-1.238L5.4.256A.875.875,0,0,1,6.638,1.494L1.5,6.634a.876.876,0,0,1-1.237,0ZM.26,1.5A.877.877,0,0,1,0,.876.914.914,0,0,1,.254.261a.794.794,0,0,1,.3-.194A.856.856,0,0,1,1.5.26a.917.917,0,0,1,.194.275.852.852,0,0,1-.2.962.854.854,0,0,1-.616.254A.9.9,0,0,1,.26,1.5Z'\n        transform='translate(8.552 8.554)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.044,4.305A2.262,2.262,0,0,1,4.305,2.043H5.334a2.262,2.262,0,0,0,1.593-.657l.719-.72a2.262,2.262,0,0,1,3.2-.008l.009.008.72.72a2.258,2.258,0,0,0,1.593.657h1.028a2.262,2.262,0,0,1,2.262,2.262V5.332a2.26,2.26,0,0,0,.657,1.594l.72.72a2.262,2.262,0,0,1,.009,3.2l-.009.009-.72.72a2.256,2.256,0,0,0-.657,1.592v1.029a2.261,2.261,0,0,1-2.262,2.261H13.166a2.259,2.259,0,0,0-1.593.658l-.72.719a2.261,2.261,0,0,1-3.2.009l-.009-.009-.719-.719a2.263,2.263,0,0,0-1.593-.658H4.305a2.261,2.261,0,0,1-2.261-2.261V13.165a2.257,2.257,0,0,0-.658-1.592l-.719-.72a2.261,2.261,0,0,1-.009-3.2l.009-.009.719-.72a2.261,2.261,0,0,0,.658-1.594V4.305'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.14,5.14,0'\n        transform='translate(7.43 7.43)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.75,1.49a.749.749,0,0,1-.53-.22.821.821,0,0,1-.16-.25A.668.668,0,0,1,0,.74.717.717,0,0,1,.06.45.776.776,0,0,1,.22.21a.774.774,0,0,1,1.06,0,.807.807,0,0,1,.17.24A.929.929,0,0,1,1.5.74a.863.863,0,0,1-.05.28.852.852,0,0,1-.17.25.749.749,0,0,1-.53.22'\n        transform='translate(11.817 11.832)'\n        fill={color}\n      />\n      <path\n        d='M.75,1.491A.672.672,0,0,1,.47,1.43a.818.818,0,0,1-.25-.159.963.963,0,0,1-.16-.25A.674.674,0,0,1,0,.741.714.714,0,0,1,.06.451.674.674,0,0,1,.22.211a.772.772,0,0,1,1.06,0,.748.748,0,0,1,.22.53.666.666,0,0,1-.05.28,1.006,1.006,0,0,1-.17.25.773.773,0,0,1-.24.159.718.718,0,0,1-.29.061'\n        transform='translate(6.677 6.692)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M7.876,19.126l-.73-.731a1.512,1.512,0,0,0-1.065-.439H5.055a3.015,3.015,0,0,1-3.011-3.01.75.75,0,1,1,1.5,0,1.511,1.511,0,0,0,1.511,1.51H6.083a3,3,0,0,1,2.122.877l.721.722A1.506,1.506,0,0,0,10,18.5a1.424,1.424,0,0,0,1.072-.445.751.751,0,1,1,1.064,1.059,3.018,3.018,0,0,1-4.259.011Zm6.318-1.92a.75.75,0,0,1,.75-.75,1.513,1.513,0,0,0,1.511-1.512V13.917a2.99,2.99,0,0,1,.878-2.123l.72-.721a1.512,1.512,0,0,0,0-2.146l-.721-.722a3,3,0,0,1-.878-2.123V5.053a1.511,1.511,0,0,0-1.511-1.511.751.751,0,0,1,0-1.5,3.015,3.015,0,0,1,3.011,3.012V6.081a1.505,1.505,0,0,0,.44,1.065l.717.718a3.013,3.013,0,0,1,.012,4.259l-.73.73a1.528,1.528,0,0,0-.439,1.065v1.027a3.016,3.016,0,0,1-3.011,3.012A.75.75,0,0,1,14.194,17.206ZM11.7,12.572a.868.868,0,1,1,.868.868A.868.868,0,0,1,11.7,12.572ZM6.9,13.1a.752.752,0,0,1,0-1.062L12.039,6.9A.75.75,0,1,1,13.1,7.959L7.961,13.1a.753.753,0,0,1-1.061,0ZM.887,12.136a3.018,3.018,0,0,1-.01-4.262l.73-.73a1.5,1.5,0,0,0,.44-1.06V5.053a3.014,3.014,0,0,1,3.01-3.011h1.03A1.49,1.49,0,0,0,7.146,1.6l.72-.719a3.009,3.009,0,0,1,4.14-.111,1.073,1.073,0,0,1,.121.1.763.763,0,0,1,.21.52.75.75,0,0,1-1.26.55l-.02-.019a1.531,1.531,0,0,0-2.13.019l-.72.721a2.974,2.974,0,0,1-2.12.88H5.056a1.516,1.516,0,0,0-1.51,1.51V6.083A2.97,2.97,0,0,1,2.667,8.2l-.72.722a1.525,1.525,0,0,0,0,2.149.756.756,0,0,1,0,1.061.77.77,0,0,1-.53.22A.743.743,0,0,1,.887,12.136ZM6.553,7.444a.868.868,0,1,1,.868.867A.868.868,0,0,1,6.553,7.444Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.044,4.305A2.262,2.262,0,0,1,4.305,2.043H5.334a2.262,2.262,0,0,0,1.593-.657l.719-.72a2.262,2.262,0,0,1,3.2-.008l.009.008.72.72a2.258,2.258,0,0,0,1.593.657h1.028a2.262,2.262,0,0,1,2.262,2.262V5.332a2.26,2.26,0,0,0,.657,1.594l.72.72a2.262,2.262,0,0,1,.009,3.2l-.009.009-.72.72a2.256,2.256,0,0,0-.657,1.592v1.029a2.261,2.261,0,0,1-2.262,2.261H13.166a2.259,2.259,0,0,0-1.593.658l-.72.719a2.261,2.261,0,0,1-3.2.009l-.009-.009-.719-.719a2.263,2.263,0,0,0-1.593-.658H4.305a2.261,2.261,0,0,1-2.261-2.261V13.165a2.257,2.257,0,0,0-.658-1.592l-.719-.72a2.261,2.261,0,0,1-.009-3.2l.009-.009.719-.72a2.261,2.261,0,0,0,.658-1.594V4.305'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.14,5.14,0'\n        transform='translate(7.43 7.43)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.75,1.49a.749.749,0,0,1-.53-.22.821.821,0,0,1-.16-.25A.668.668,0,0,1,0,.74.717.717,0,0,1,.06.45.776.776,0,0,1,.22.21a.774.774,0,0,1,1.06,0,.807.807,0,0,1,.17.24A.929.929,0,0,1,1.5.74a.863.863,0,0,1-.05.28.852.852,0,0,1-.17.25.749.749,0,0,1-.53.22'\n        transform='translate(11.817 11.832)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.75,1.491A.672.672,0,0,1,.47,1.43a.818.818,0,0,1-.25-.159.963.963,0,0,1-.16-.25A.674.674,0,0,1,0,.741.714.714,0,0,1,.06.451.674.674,0,0,1,.22.211a.772.772,0,0,1,1.06,0,.748.748,0,0,1,.22.53.666.666,0,0,1-.05.28,1.006,1.006,0,0,1-.17.25.773.773,0,0,1-.24.159.718.718,0,0,1-.29.061'\n        transform='translate(6.677 6.692)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,5.14,5.14,0'\n        transform='translate(7.43 7.43)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(12 12)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(7 7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDiscount.displayName = 'IconlyDiscount'\nDiscount.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Discount)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Buy = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M15.149,18.459A1.514,1.514,0,1,1,16.668,20,1.535,1.535,0,0,1,15.149,18.459Zm-11.241,0A1.514,1.514,0,1,1,5.426,20,1.534,1.534,0,0,1,3.908,18.459Zm1.679-3.164a2.509,2.509,0,0,1-1.726-.689,2.616,2.616,0,0,1-.812-1.7L2.129,1.784.62,1.518A.766.766,0,0,1,.765,0,.817.817,0,0,1,.88.009L3.263.375a.768.768,0,0,1,.619.694l.19,2.286a.617.617,0,0,0,.609.572H18.176a1.689,1.689,0,0,1,1.409.684,2.251,2.251,0,0,1,.38,1.754l-.95,6.694a2.582,2.582,0,0,1-2.528,2.235Zm5.785-6.826a.758.758,0,0,0,.75.765h2.767a.758.758,0,0,0,.75-.765.75.75,0,0,0-.75-.766H12.121A.75.75,0,0,0,11.372,8.468Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M11.25,1.52a1.515,1.515,0,1,1,1.52,1.51A1.52,1.52,0,0,1,11.25,1.52ZM0,1.52A1.515,1.515,0,1,1,1.52,3.03,1.52,1.52,0,0,1,0,1.52Z'\n        transform='translate(3.911 16.569)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M16.5,14.989H5.591a2.549,2.549,0,0,1-2.54-2.339L2.13,1.749.621,1.489A.747.747,0,0,1,.14,1.181.732.732,0,0,1,.011.628.761.761,0,0,1,.768,0,.793.793,0,0,1,.881.008l2.385.36a.759.759,0,0,1,.619.68l.191,2.24a.612.612,0,0,0,.609.561H18.191a1.706,1.706,0,0,1,1.41.67,2.169,2.169,0,0,1,.38,1.719l-.95,6.56A2.566,2.566,0,0,1,16.5,14.989Zm-4.37-7.44a.742.742,0,0,0-.751.75.751.751,0,0,0,.751.751H14.9a.751.751,0,0,0,.751-.751.742.742,0,0,0-.751-.75Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M.764,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.764,0Z'\n        transform='translate(4.658 17.32)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.765,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.765,0Z'\n        transform='translate(15.91 17.32)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.08.36l.963,11.473a1.8,1.8,0,0,0,1.8,1.653H15.752a1.8,1.8,0,0,0,1.785-1.546l.949-6.558a1.341,1.341,0,0,0-1.327-1.533H2.414'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.5H2.773'\n        transform='translate(12.125 7.795)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M15.161,18.455A1.515,1.515,0,1,1,16.674,20,1.532,1.532,0,0,1,15.161,18.455Zm-11.253,0A1.515,1.515,0,1,1,5.423,20,1.533,1.533,0,0,1,3.908,18.455Zm1.683-3.163A2.56,2.56,0,0,1,3.046,12.9L2.132,1.786.622,1.519A.765.765,0,0,1,.011.635.752.752,0,0,1,.877.01L2.959.379a.758.758,0,0,1,.618.69l.963,11.707a1.056,1.056,0,0,0,1.05.985H16.5a1.067,1.067,0,0,0,1.043-.921l.949-6.693a.606.606,0,0,0-.138-.482.582.582,0,0,0-.447-.208H7.164a.766.766,0,0,1,0-1.531H17.908a2.071,2.071,0,0,1,1.581.738,2.161,2.161,0,0,1,.489,1.7l-.95,6.693A2.583,2.583,0,0,1,16.5,15.292Zm6.535-6.062a.766.766,0,0,1,0-1.531H14.9a.766.766,0,0,1,0,1.531Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M.764,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.764,0Z'\n        transform='translate(4.658 17.32)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.765,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.765,0Z'\n        transform='translate(15.91 17.32)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,2.08.36l.963,11.473a1.8,1.8,0,0,0,1.8,1.653H15.752a1.8,1.8,0,0,0,1.785-1.546l.949-6.558a1.341,1.341,0,0,0-1.327-1.533H2.414'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.5H2.773'\n        transform='translate(12.125 7.795)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.65 2.85)'>\n      <path\n        d='M2.044,3.58c9.848-1.337,12.187-.6,13.717,1.14s1.261,6.917-.528,8.516-9.553,1.751-12.013,0C.621,11.386,2.129,5.692,2.044,2.243,2.1.313,0,0,0,0'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.5H2.773'\n        transform='translate(10.506 7.37)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.545,0A.545.545,0,1,1,0,.544.545.545,0,0,1,.545,0Z'\n        transform='translate(3.069 17.277)'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.544,0A.545.545,0,1,1,0,.544.545.545,0,0,1,.544,0Z'\n        transform='translate(13.401 17.277)'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nBuy.displayName = 'IconlyBuy'\nBuy.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Buy)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst InfoCircle = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 1.999)'>\n      <path\n        d='M10,20a10,10,0,1,1,7.074-2.929A10.011,10.011,0,0,1,10,20Zm0-7.069a.871.871,0,0,0-.87.869.875.875,0,1,0,.87-.869Zm0-7.6a.892.892,0,0,0-.88.88v4.42a.875.875,0,0,0,1.751,0V6.21A.876.876,0,0,0,10,5.33Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.005,8.468a.878.878,0,1,1,.879.875A.874.874,0,0,1,.005,8.468ZM0,5.295V.875a.875.875,0,0,1,1.75,0v4.42a.875.875,0,1,1-1.75,0Z'\n        transform='translate(11.12 7.336)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.25,0A9.25,9.25,0,1,1,0,9.25,9.25,9.25,0,0,1,9.25,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V4.419'\n        transform='translate(9.495 6.204)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.5 13.296)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.073,16.1a.727.727,0,0,1,1.152-.888A8.547,8.547,0,1,0,1.454,10a8.636,8.636,0,0,0,.1,1.3.727.727,0,0,1-.608.828.719.719,0,0,1-.828-.608A10,10,0,1,1,2.073,16.1Zm7.183-2.3A.746.746,0,0,1,10,13.046h.01a.75.75,0,1,1-.754.751ZM9.25,10.625V6.2a.75.75,0,1,1,1.5,0v4.421a.75.75,0,0,1-1.5,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.25,0A9.25,9.25,0,1,1,0,9.25,9.25,9.25,0,0,1,9.25,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V4.419'\n        transform='translate(9.495 6.204)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.5 13.296)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V3.895'\n        transform='translate(9.5 6.105)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.5 13)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nInfoCircle.displayName = 'IconlyInfoCircle'\nInfoCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(InfoCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst InfoSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 1.999)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM9.99,8.481a.876.876,0,0,0-.87.88v4.42a.875.875,0,0,0,1.751,0V9.361A.881.881,0,0,0,9.99,8.481Zm.02-3.17a.875.875,0,1,0,.87.88A.871.871,0,0,0,10.01,5.311Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M0,8.468V4.048a.875.875,0,1,1,1.75,0v4.42a.875.875,0,0,1-1.75,0ZM.005.875a.878.878,0,1,1,.869.875A.878.878,0,0,1,.005.875Z'\n        transform='translate(11.12 7.314)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.5,4.419V0'\n        transform='translate(9.49 9.377)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.495 5.704)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm3-6.2V9.376a.75.75,0,1,1,1.5,0V13.8a.75.75,0,0,1-1.5,0Zm.75-6.842A.746.746,0,0,1,9.25,6.2.752.752,0,1,1,10,6.954Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.5,4.419V0'\n        transform='translate(9.49 9.377)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.495 5.704)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2.75 2.75)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(18.5 18.5) rotate(180)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V3.895'\n        transform='translate(9.75 13.145) rotate(180)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.75 6.25) rotate(180)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nInfoSquare.displayName = 'IconlyInfoSquare'\nInfoSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(InfoSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Danger = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M17.316,18H2.679a3.129,3.129,0,0,1-.91-.2A2.809,2.809,0,0,1,.218,16.275,2.747,2.747,0,0,1,.21,14.146L7.529,1.433a2.746,2.746,0,0,1,1.1-1.08A2.819,2.819,0,0,1,9.993,0a2.853,2.853,0,0,1,2.484,1.442l7.268,12.615a2.936,2.936,0,0,1,.25,1,2.753,2.753,0,0,1-.73,2.021A2.841,2.841,0,0,1,17.316,18ZM10,12.272a.873.873,0,1,0,0,1.745.877.877,0,0,0,.869-.883A.867.867,0,0,0,10,12.272ZM10,6.09a.872.872,0,0,0-.88.862v2.8a.888.888,0,0,0,.88.873.872.872,0,0,0,.869-.873v-2.8A.867.867,0,0,0,10,6.09Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M2.723,18.167H2.684a2.828,2.828,0,0,1-2.476-3.89L7.529,1.45a2.83,2.83,0,0,1,4.946.009l7.273,12.728A2.872,2.872,0,0,1,20,15.194a2.829,2.829,0,0,1-2.681,2.972H2.723Z'\n        transform='translate(2 3.001)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M0,7.124A.875.875,0,1,1,.875,8,.879.879,0,0,1,0,7.124ZM0,3.7V.875a.875.875,0,0,1,1.75,0V3.7A.875.875,0,1,1,0,3.7Z'\n        transform='translate(11.125 9.146)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M0,.756A.755.755,0,0,1,.75,0,.746.746,0,0,1,1.5.745V.756a.75.75,0,1,1-1.5,0Z'\n        transform='translate(9.25 12.514)'\n        fill={color}\n      />\n      <path\n        d='M2.045,16.668H16.527a2.077,2.077,0,0,0,1.819-2.859L11.069,1.073a2.08,2.08,0,0,0-3.639,0L.153,13.809A2.08,2.08,0,0,0,1.3,16.518a2.125,2.125,0,0,0,.676.15'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,3.1V0'\n        transform='translate(9.49 7.296)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M5.81,17.418a.75.75,0,0,1,.75-.75H17.278a1.334,1.334,0,0,0,1.221-1.4,1.332,1.332,0,0,0-.081-.392L11.169,2.2a1.333,1.333,0,0,0-1.812-.528,1.316,1.316,0,0,0-.519.519l-7.255,12.7a1.332,1.332,0,0,0,1.179,1.787.75.75,0,0,1-.038,1.5H2.687A2.83,2.83,0,0,1,.21,14.276a.637.637,0,0,1,.043-.09L7.53,1.451a2.829,2.829,0,0,1,4.946.009l7.272,12.726a.7.7,0,0,1,.044.091,2.83,2.83,0,0,1-2.477,3.89H6.559A.75.75,0,0,1,5.81,17.418Zm3.442-4.149a.754.754,0,0,1,.75-.755.747.747,0,0,1,.751.745v.01a.75.75,0,1,1-1.5,0Zm0-3.421V7.021a.75.75,0,0,1,1.5,0V9.848a.75.75,0,1,1-1.5,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M0,7a.755.755,0,0,1,.75-.756.746.746,0,0,1,.75.745V7A.75.75,0,0,1,0,7Z'\n        transform='translate(9.25 6.272)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M2.045,16.668H16.527a2.077,2.077,0,0,0,1.819-2.859L11.069,1.073a2.08,2.08,0,0,0-3.639,0L.153,13.809A2.08,2.08,0,0,0,1.3,16.518a2.125,2.125,0,0,0,.676.15'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,3.1V0'\n        transform='translate(9.49 7.296)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V3.895'\n        transform='translate(9.5 6.105)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(9.5 13)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDanger.displayName = 'IconlyDanger'\nDanger.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Danger)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CloseSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 1.999)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM10,11.231h0L11.78,13a.815.815,0,0,0,.61.261A.873.873,0,0,0,13.01,13a.869.869,0,0,0,0-1.228l-1.78-1.78L13.01,8.21a.875.875,0,0,0-.616-1.494.89.89,0,0,0-.624.256L10,8.75,8.22,6.971A.89.89,0,0,0,7.6,6.716.876.876,0,0,0,6.98,8.21L8.76,9.991,6.98,11.761a.88.88,0,0,0,.619,1.5A.873.873,0,0,0,8.22,13L10,11.232Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g>\n      <path\n        d='M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0'\n        transform='translate(2 2)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M6.29,5.052,4.511,3.274,6.289,1.5A.875.875,0,0,0,5.052.258L3.273,2.036,1.494.256A.875.875,0,1,0,.256,1.494l1.78,1.78L.26,5.049A.875.875,0,0,0,1.5,6.287L3.273,4.511,5.053,6.29A.875.875,0,0,0,6.29,5.052'\n        transform='translate(8.726 8.719)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.792,0,0,4.792'\n        transform='translate(7.603 7.595)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.8,4.8,0,0'\n        transform='translate(7.601 7.593)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.756.756h-.009V9.56A.765.765,0,0,1,18.47,8.8V6.253c0-3.053-1.67-4.723-4.714-4.723h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,0,1,1.53,0C20,17.608,17.608,20,13.756,20Zm.861-7.072-.022-.016a.773.773,0,0,1,.038-1.082l.684-.684a.765.765,0,1,1,1.044,1.119l-.681.681a.764.764,0,0,1-1.063-.018Zm4.958-.112-.038-.037L7.255,8a.817.817,0,0,1-.013-1.108.755.755,0,0,1,1.069-.013l.008.006,1.865,1.867,1.7-1.7a.783.783,0,0,1,1.088.007.745.745,0,0,1,.135.183.768.768,0,0,1-.122.925l-1.69,1.689L13.129,11.7a.77.77,0,0,1,.029,1.091c0,.006-.011.01-.015.016a.767.767,0,0,1-1.07.012Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.4,2.4,0,4.794,2.4,2.4,0,0,2.4,2.4,4.794,0,2.4,2.4,4.8,4.8Z'\n        transform='translate(7.601 7.593)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.792,0,0,4.792'\n        transform='translate(7.602 7.595)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.8,4.8,0,0'\n        transform='translate(7.6 7.593)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCloseSquare.displayName = 'IconlyCloseSquare'\nCloseSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CloseSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst TickSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM6.44,9.125a.875.875,0,0,0-.62,1.5L8.2,12.99a.881.881,0,0,0,1.23,0L14.18,8.24A.877.877,0,0,0,12.94,7L8.81,11.13,7.06,9.38A.868.868,0,0,0,6.44,9.125Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M3.249,6.5a.872.872,0,0,1-.619-.256L.257,3.868A.875.875,0,0,1,1.493,2.629L3.249,4.385,7.377.257A.875.875,0,0,1,8.613,1.495L3.868,6.24a.872.872,0,0,1-.619.256'\n        transform='translate(5.565 6.752)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.373,2.374,4.746,7.12,0'\n        transform='translate(6.44 7.627)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.756.756h-.009V9.56A.765.765,0,0,1,18.47,8.8V6.253c0-3.053-1.67-4.723-4.714-4.723h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,0,1,1.53,0C20,17.608,17.608,20,13.756,20Zm2.03-7.1L5.909,10.531A.75.75,0,1,1,6.97,9.47l1.843,1.844L13.029,7.1A.75.75,0,0,1,14.09,8.158L9.344,12.9a.751.751,0,0,1-1.061,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.373,2.374,4.746,7.12,0'\n        transform='translate(6.44 7.627)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,2.373,2.374,4.746,7.12,0'\n        transform='translate(6.44 7.627)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTickSquare.displayName = 'IconlyTickSquare'\nTickSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(TickSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Discovery = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,0,1,2.926,2.93,10,10,0,1,1,17.07,17.074,9.936,9.936,0,0,1,10,20ZM13.428,6.118a.459.459,0,0,0-.137.021L8.17,7.74a.669.669,0,0,0-.44.44l-1.6,5.13a.435.435,0,0,0,.064.393.45.45,0,0,0,.361.188.437.437,0,0,0,.135-.022l5.1-1.6a.644.644,0,0,0,.44-.44L13.85,6.71a.454.454,0,0,0-.066-.409A.445.445,0,0,0,13.428,6.118Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7.742.592l-1.62,5.12a.651.651,0,0,1-.44.441l-5.1,1.6a.448.448,0,0,1-.56-.56l1.6-5.13a.668.668,0,0,1,.44-.44l5.12-1.6a.449.449,0,0,1,.56.57'\n        transform='translate(6.118 6.113)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,6.682,1.593,1.593,6.682,0,5.089,5.089Z'\n        transform='translate(6.27 6.27)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='9.611'\n        cy='9.611'\n        r='9.611'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.741,19.05A10,10,0,0,1,10,0a9.659,9.659,0,0,1,2.174.246,9.982,9.982,0,0,1,7.576,11.984.781.781,0,1,1-1.508-.386,8.4,8.4,0,1,0-1.561,3.319.781.781,0,0,1,1.211.957A9.978,9.978,0,0,1,5.741,19.05Zm.826-5.108a.775.775,0,0,1-.509-.975L7.584,8.086a.781.781,0,0,1,.509-.5l4.876-1.527a.671.671,0,0,1,.455,0,.763.763,0,0,1,.509.966l-1.561,4.89a.773.773,0,0,1-.394.465l-.877.439a.781.781,0,0,1-.666-1.4l.588-.29L12,7.98l-3.069.966-1.4,4.486a.772.772,0,0,1-.965.509Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,6.682,1.593,1.593,6.682,0,5.089,5.089Z'\n        transform='translate(6.27 6.27)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <circle\n        cx='9.611'\n        cy='9.611'\n        r='9.611'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,6.6l1.574-5.03L6.6,0,5.03,5.029Z'\n        transform='translate(6.698 6.698)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDiscovery.displayName = 'IconlyDiscovery'\nDiscovery.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Discovery)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Location = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.5,20a1.358,1.358,0,0,1-.734-.247,21.513,21.513,0,0,1-5.54-5.141A10.384,10.384,0,0,1,0,8.318,8.168,8.168,0,0,1,2.5,2.434,8.53,8.53,0,0,1,8.493,0,8.423,8.423,0,0,1,17,8.318a10.39,10.39,0,0,1-2.23,6.294,21.92,21.92,0,0,1-5.541,5.141A1.319,1.319,0,0,1,8.5,20ZM8.493,5.777a2.8,2.8,0,0,0-2.8,2.8,2.712,2.712,0,0,0,.821,1.954,2.823,2.823,0,0,0,4.79-1.954,2.824,2.824,0,0,0-2.813-2.8Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(5 2)'>\n      <path\n        d='M7.042,17h0a.823.823,0,0,1-.39-.119,18.454,18.454,0,0,1-4.838-4.548A9.227,9.227,0,0,1,0,7.134,7.166,7.166,0,0,1,3.532.937a6.889,6.889,0,0,1,7.034.058,7.254,7.254,0,0,1,2.525,2.674A7.419,7.419,0,0,1,14,7.261a10.515,10.515,0,0,1-3.192,6.775,18.751,18.751,0,0,1-3.359,2.82A1.173,1.173,0,0,1,7.042,17ZM6.993,4.848a2.342,2.342,0,0,0-1.679.706,2.445,2.445,0,0,0-.519,2.641,2.369,2.369,0,0,0,2.2,1.5h.017a2.327,2.327,0,0,0,1.667-.7,2.455,2.455,0,0,0-.768-3.956A2.328,2.328,0,0,0,6.993,4.848Z'\n        transform='translate(0)'\n        fill={color}\n      />\n      <ellipse\n        cx='5'\n        cy='1'\n        rx='5'\n        ry='1'\n        transform='translate(2 18)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M0,7.652A7.678,7.678,0,1,1,15.357,7.7v.087a11.338,11.338,0,0,1-3.478,7.3,20.183,20.183,0,0,1-3.591,2.957.93.93,0,0,1-1.217,0,19.817,19.817,0,0,1-5.052-4.73A9.826,9.826,0,0,1,0,7.678Z'\n        transform='translate(0.739 0.739)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='2.461'\n        cy='2.461'\n        r='2.461'\n        transform='translate(5.957 6.078)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.856,19.879a23.973,23.973,0,0,1-5.7-5.3A10.6,10.6,0,0,1,0,8.513,8.516,8.516,0,0,1,8.5,0h.033A8.5,8.5,0,0,1,17,8.522v.094c-.064,3.344-2.075,6.12-3.749,7.859a20.427,20.427,0,0,1-1.508,1.42.746.746,0,0,1-.968-1.134,19.168,19.168,0,0,0,1.4-1.319c1.49-1.547,3.279-3.992,3.333-6.854a7.027,7.027,0,0,0-6.979-7.1H8.5A7.01,7.01,0,0,0,1.493,8.461a9.119,9.119,0,0,0,1.859,5.225A22.377,22.377,0,0,0,8.672,18.63a.746.746,0,0,1-.815,1.249ZM5.262,8.614a.747.747,0,0,1,1.493,0A1.742,1.742,0,1,0,8.5,6.873a.745.745,0,1,1,0-1.49,3.23,3.23,0,1,1-3.235,3.23Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M0,7.652A7.678,7.678,0,1,1,15.357,7.7v.087a11.338,11.338,0,0,1-3.478,7.3,20.183,20.183,0,0,1-3.591,2.957.93.93,0,0,1-1.217,0,19.817,19.817,0,0,1-5.052-4.73A9.826,9.826,0,0,1,0,7.678Z'\n        transform='translate(0.739 0.739)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='2.461'\n        cy='2.461'\n        r='2.461'\n        transform='translate(5.957 6.078)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(4.5 3)'>\n      <path\n        d='M5,2.5A2.5,2.5,0,1,0,2.5,5,2.5,2.5,0,0,0,5,2.5Z'\n        transform='translate(5.01 5.21)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,18C4.6,18,0,12.959,0,7.6A7.549,7.549,0,0,1,7.5,0,7.55,7.55,0,0,1,15,7.6C15,12.959,10.4,18,7.5,18Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nLocation.displayName = 'IconlyLocation'\nLocation.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Location)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Document = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M13.191,20H4.81C1.753,20,0,18.236,0,15.16V4.83A4.91,4.91,0,0,1,1.265,1.271,4.863,4.863,0,0,1,4.81,0h8.382C16.247,0,18,1.761,18,4.83V15.16a4.891,4.891,0,0,1-1.246,3.583A4.819,4.819,0,0,1,13.191,20ZM5,13.736a.78.78,0,0,0-.668.374.786.786,0,0,0,.653,1.206.7.7,0,0,0,.1-.006H12.92a.79.79,0,0,0,0-1.57H5.08A.8.8,0,0,0,5,13.736ZM5.08,9.179a.78.78,0,0,0,0,1.561H12.92a.78.78,0,0,0,0-1.561Zm0-4.529v.01h0a.779.779,0,0,0,0,1.559h2.99a.785.785,0,0,0,0-1.57Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M13.191,0H4.81C1.77,0,0,1.78,0,4.83V15.16C0,18.26,1.77,20,4.81,20h8.381C16.28,20,18,18.26,18,15.16V4.83C18,1.78,16.28,0,13.191,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.12,10.3a.8.8,0,0,1,0-.84A.785.785,0,0,1,.87,9.09H8.71a.79.79,0,0,1,0,1.57H.87a.732.732,0,0,1-.1.007A.783.783,0,0,1,.12,10.3ZM.87,6.09a.781.781,0,0,1,0-1.562H8.71a.781.781,0,0,1,0,1.562Zm0-4.521A.78.78,0,1,1,.87.01V0H3.859a.785.785,0,0,1,0,1.57Z'\n        transform='translate(4.21 4.65)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M7.22.5H0'\n        transform='translate(5.496 13.723)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.22.5H0'\n        transform='translate(5.496 9.537)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.755.5H0'\n        transform='translate(5.496 5.36)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.158,0,4.469,0A4.251,4.251,0,0,0,0,4.607v9.2A4.254,4.254,0,0,0,4.506,18.41l7.689,0a4.252,4.252,0,0,0,4.47-4.6v-9.2A4.255,4.255,0,0,0,12.158,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M10.006,20a.734.734,0,0,1,0-1.457h2.848c2.455,0,3.692-1.263,3.692-3.752V5.21c0-2.49-1.237-3.753-3.692-3.753H5.138c-2.456,0-3.7,1.263-3.7,3.753v9.581c0,2.489,1.245,3.752,3.7,3.752a.734.734,0,0,1,0,1.457C1.924,20,0,18.049,0,14.791V5.21C0,1.942,1.924,0,5.138,0h7.716C16.067,0,17.991,1.951,18,5.21v9.581C18,18.049,16.084,20,12.862,20ZM5.39,14.958H5.382a.724.724,0,0,1,0-1.448h7.21a.724.724,0,0,1,0,1.448Zm7.2-4.229H5.382a.734.734,0,0,1,0-1.457h7.21a.72.72,0,0,1,.692.338.745.745,0,0,1,0,.779.724.724,0,0,1-.613.344A.712.712,0,0,1,12.592,10.729ZM5.39,6.5a.734.734,0,0,1,0-1.457H8.133a.734.734,0,0,1,0,1.457Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M7.22.5H0'\n        transform='translate(5.496 13.723)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M7.22.5H0'\n        transform='translate(5.496 9.537)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M2.755.5H0'\n        transform='translate(5.496 5.36)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.158,0,4.469,0A4.251,4.251,0,0,0,0,4.607v9.2A4.254,4.254,0,0,0,4.506,18.41l7.689,0a4.252,4.252,0,0,0,4.47-4.6v-9.2A4.255,4.255,0,0,0,12.158,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.61 2.75)'>\n      <path\n        d='M7.22.5H0'\n        transform='translate(4.766 12.446)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.22.5H0'\n        transform='translate(4.766 8.686)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.755.5H0'\n        transform='translate(4.766 4.927)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.1,9.25,8.391,9.25s8.391-2.313,8.391-9.25S14.685,0,8.391,0,0,2.313,0,9.25Z'\n        transform='translate(0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDocument.displayName = 'IconlyDocument'\nDocument.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Document)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Setting = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M10.2,20H8.807a2.066,2.066,0,0,1-2.125-2.05A1.9,1.9,0,0,0,4.8,16.13a1.58,1.58,0,0,0-.9.23,2.163,2.163,0,0,1-1.084.3A2.122,2.122,0,0,1,1,15.62l-.7-1.2a2,2,0,0,1-.021-2.05,2.108,2.108,0,0,1,.817-.789,1.653,1.653,0,0,0,.644-.64,1.782,1.782,0,0,0,.19-1.365A1.837,1.837,0,0,0,1.071,8.44,2.045,2.045,0,0,1,.314,5.61L1,4.43a2.123,2.123,0,0,1,2.882-.76,1.894,1.894,0,0,0,.9.224A1.959,1.959,0,0,0,6.446,2.98a1.538,1.538,0,0,0,.236-.88A1.788,1.788,0,0,1,6.968,1.04,2.2,2.2,0,0,1,8.776,0h1.441a2.154,2.154,0,0,1,1.82,1.04A1.781,1.781,0,0,1,12.312,2.1a1.545,1.545,0,0,0,.235.88,1.964,1.964,0,0,0,1.672.914,1.926,1.926,0,0,0,.9-.224,2.111,2.111,0,0,1,2.872.76l.684,1.18a2.027,2.027,0,0,1-.756,2.831,1.829,1.829,0,0,0-.853,1.138,1.771,1.771,0,0,0,.2,1.362,1.571,1.571,0,0,0,.634.64,2.307,2.307,0,0,1,.828.789,2.031,2.031,0,0,1-.02,2.05l-.715,1.2a2.1,2.1,0,0,1-2.893.74,1.621,1.621,0,0,0-.9-.23,1.9,1.9,0,0,0-1.891,1.82A2.061,2.061,0,0,1,10.2,20ZM9.512,7.18a2.87,2.87,0,0,0-2.9,2.83,2.763,2.763,0,0,0,.849,2,2.93,2.93,0,0,0,2.053.821A2.822,2.822,0,0,0,11.55,8.006,2.877,2.877,0,0,0,9.512,7.18Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M2.9,5.65A2.853,2.853,0,0,1,0,2.83,2.861,2.861,0,0,1,2.9,0a2.825,2.825,0,1,1,0,5.65'\n        transform='translate(6.61 7.18)'\n        fill={color}\n      />\n      <path\n        d='M18.73,12.37a2.3,2.3,0,0,0-.828-.79,1.547,1.547,0,0,1-.634-.64,1.822,1.822,0,0,1,.654-2.5,2.027,2.027,0,0,0,.756-2.83l-.685-1.18a2.112,2.112,0,0,0-2.872-.76,1.973,1.973,0,0,1-2.575-.69,1.546,1.546,0,0,1-.235-.88,1.778,1.778,0,0,0-.276-1.06A2.152,2.152,0,0,0,10.217,0H8.776A2.195,2.195,0,0,0,6.967,1.04,1.785,1.785,0,0,0,6.681,2.1a1.546,1.546,0,0,1-.235.88,1.963,1.963,0,0,1-2.565.69A2.124,2.124,0,0,0,1,4.43L.314,5.61a2.044,2.044,0,0,0,.756,2.83,1.834,1.834,0,0,1,.664,2.5,1.634,1.634,0,0,1-.644.64,2.118,2.118,0,0,0-.818.79,2,2,0,0,0,.02,2.05L1,15.62a2.134,2.134,0,0,0,1.819,1.04,2.161,2.161,0,0,0,1.083-.3,1.586,1.586,0,0,1,.9-.23,1.892,1.892,0,0,1,1.88,1.82A2.07,2.07,0,0,0,8.807,20H10.2a2.068,2.068,0,0,0,2.115-2.05A1.908,1.908,0,0,1,14.2,16.13a1.63,1.63,0,0,1,.9.23,2.1,2.1,0,0,0,2.892-.74l.715-1.2a2.018,2.018,0,0,0,.02-2.05'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2.5 1.5)'>\n      <path\n        d='M17.528,5.346l-.622-1.08a1.913,1.913,0,0,0-2.609-.7h0a1.9,1.9,0,0,1-2.609-.677,1.831,1.831,0,0,1-.256-.915h0A1.913,1.913,0,0,0,9.519,0H8.265a1.9,1.9,0,0,0-1.9,1.913h0A1.913,1.913,0,0,1,4.448,3.8a1.831,1.831,0,0,1-.915-.256h0a1.913,1.913,0,0,0-2.609.7l-.668,1.1a1.913,1.913,0,0,0,.7,2.609h0a1.913,1.913,0,0,1,.957,1.657,1.913,1.913,0,0,1-.957,1.657h0a1.9,1.9,0,0,0-.7,2.6h0l.632,1.089A1.913,1.913,0,0,0,3.5,15.7h0a1.895,1.895,0,0,1,2.6.7,1.831,1.831,0,0,1,.256.915h0a1.913,1.913,0,0,0,1.913,1.913H9.519a1.913,1.913,0,0,0,1.913-1.9h0a1.9,1.9,0,0,1,1.913-1.913,1.95,1.95,0,0,1,.915.256h0a1.913,1.913,0,0,0,2.609-.7h0l.659-1.1a1.9,1.9,0,0,0-.7-2.609h0a1.9,1.9,0,0,1-.7-2.609,1.876,1.876,0,0,1,.7-.7h0a1.913,1.913,0,0,0,.7-2.6h0Z'\n        transform='translate(0.779 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='2.636'\n        cy='2.636'\n        r='2.636'\n        transform='translate(7.039 7.753)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M6.175,17.365a.991.991,0,0,0-.143-.527,1.112,1.112,0,0,0-1.493-.4,2.736,2.736,0,0,1-3.6-.949L.329,14.449A2.6,2.6,0,0,1,1.3,10.935a1.1,1.1,0,0,0,.4-.386,1.043,1.043,0,0,0,.179-.85A1.07,1.07,0,0,0,1.345,9,2.6,2.6,0,0,1,.374,5.49a.785.785,0,0,1,.5-.327.8.8,0,0,1,.589.115A.745.745,0,0,1,1.687,6.3a1.05,1.05,0,0,0,.4,1.449,2.586,2.586,0,0,1-.036,4.47,1.051,1.051,0,0,0-.405,1.45l.621,1.045a1.067,1.067,0,0,0,.662.5,1.091,1.091,0,0,0,.831-.118,2.648,2.648,0,0,1,1.322-.342,2.667,2.667,0,0,1,2.7,2.635,1.086,1.086,0,0,0,1.1,1.063l-.009.017a.787.787,0,0,1,.678.383.75.75,0,0,1,0,.764A.789.789,0,0,1,8.874,20,2.668,2.668,0,0,1,6.175,17.365Zm5.028.079a2.628,2.628,0,0,1,1.346-2.227,2.758,2.758,0,0,1,2.648-.031,1.093,1.093,0,0,0,.827.114,1.124,1.124,0,0,0,.666-.5l.611-1.046a1.033,1.033,0,0,0,.113-.806,1.059,1.059,0,0,0-.509-.644,2.571,2.571,0,0,1-.98-1.045A2.6,2.6,0,0,1,16.9,7.747a.811.811,0,0,1,1.062.29.754.754,0,0,1-.27,1.045,1.1,1.1,0,0,0-.4.387,1.038,1.038,0,0,0-.113.809,1.066,1.066,0,0,0,.509.649,2.6,2.6,0,0,1,.935,3.6l-.611,1.045a2.735,2.735,0,0,1-3.6.949,1.1,1.1,0,0,0-1.1-.01,1.05,1.05,0,0,0-.54.932.794.794,0,0,1-1.574,0Zm-4.1-5.1a3.237,3.237,0,0,1-.737-3.6A3.375,3.375,0,0,1,9.494,6.7H9.5a3.392,3.392,0,0,1,2.38.961A3.235,3.235,0,0,1,12.876,10a3.291,3.291,0,0,1-2.082,3.057,3.442,3.442,0,0,1-3.689-.71ZM7.7,10a1.8,1.8,0,1,0,1.8-1.757A1.78,1.78,0,0,0,7.7,10Zm9-4.726A1.112,1.112,0,0,0,15.2,4.892a2.754,2.754,0,0,1-2.644-.029A2.624,2.624,0,0,1,11.2,2.644a1.05,1.05,0,0,0-.306-.775,1.1,1.1,0,0,0-.782-.323H8.883a1.108,1.108,0,0,0-.786.323,1.056,1.056,0,0,0-.312.775,2.581,2.581,0,0,1-1.343,2.23,2.709,2.709,0,0,1-2.651-.017l-.036-.035A.755.755,0,0,1,3.5,3.768a.8.8,0,0,1,1.08-.246,1.151,1.151,0,0,0,.539.148,1.109,1.109,0,0,0,.789-.282,1.064,1.064,0,0,0,.353-.745A2.665,2.665,0,0,1,8.883,0h1.232a2.667,2.667,0,0,1,2.7,2.635.989.989,0,0,0,.144.526,1.084,1.084,0,0,0,.662.5,1.114,1.114,0,0,0,.831-.106,2.735,2.735,0,0,1,3.6.949.772.772,0,0,1-.288,1.045.8.8,0,0,1-.392.1A.794.794,0,0,1,16.691,5.279Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 1.5)'>\n      <path\n        d='M17.528,5.346l-.622-1.08a1.913,1.913,0,0,0-2.609-.7h0a1.9,1.9,0,0,1-2.609-.677,1.831,1.831,0,0,1-.256-.915h0A1.913,1.913,0,0,0,9.519,0H8.265a1.9,1.9,0,0,0-1.9,1.913h0A1.913,1.913,0,0,1,4.448,3.8a1.831,1.831,0,0,1-.915-.256h0a1.913,1.913,0,0,0-2.609.7l-.668,1.1a1.913,1.913,0,0,0,.7,2.609h0a1.913,1.913,0,0,1,.957,1.657,1.913,1.913,0,0,1-.957,1.657h0a1.9,1.9,0,0,0-.7,2.6h0l.632,1.089A1.913,1.913,0,0,0,3.5,15.7h0a1.895,1.895,0,0,1,2.6.7,1.831,1.831,0,0,1,.256.915h0a1.913,1.913,0,0,0,1.913,1.913H9.519a1.913,1.913,0,0,0,1.913-1.9h0a1.9,1.9,0,0,1,1.913-1.913,1.95,1.95,0,0,1,.915.256h0a1.913,1.913,0,0,0,2.609-.7h0l.659-1.1a1.9,1.9,0,0,0-.7-2.609h0a1.9,1.9,0,0,1-.7-2.609,1.876,1.876,0,0,1,.7-.7h0a1.913,1.913,0,0,0,.7-2.6h0Z'\n        transform='translate(0.779 0.778)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx='2.636'\n        cy='2.636'\n        r='2.636'\n        transform='translate(7.039 7.753)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.5 2.5)'>\n      <path\n        d='M2.5,0A2.5,2.5,0,1,1,0,2.5,2.5,2.5,0,0,1,2.5,0Z'\n        transform='translate(6 7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M16.668,4.75h0a2.464,2.464,0,0,0-3.379-.912,1.543,1.543,0,0,1-2.314-1.346A2.484,2.484,0,0,0,8.5,0h0A2.484,2.484,0,0,0,6.025,2.492,1.543,1.543,0,0,1,3.712,3.839a2.465,2.465,0,0,0-3.38.912,2.5,2.5,0,0,0,.906,3.4,1.56,1.56,0,0,1,0,2.692,2.5,2.5,0,0,0-.906,3.4,2.465,2.465,0,0,0,3.379.913h0a1.542,1.542,0,0,1,2.313,1.345h0A2.484,2.484,0,0,0,8.5,19h0a2.484,2.484,0,0,0,2.474-2.492h0a1.543,1.543,0,0,1,2.314-1.345,2.465,2.465,0,0,0,3.379-.913,2.5,2.5,0,0,0-.905-3.4h0a1.56,1.56,0,0,1,0-2.692A2.5,2.5,0,0,0,16.668,4.75Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nSetting.displayName = 'IconlySetting'\nSetting.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Setting)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst TimeSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.624,0,14.089V5.919C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.919v8.169C20,17.624,17.725,20,14.34,20ZM9.65,4.919a.76.76,0,0,0-.75.75V10.72a.733.733,0,0,0,.37.64l3.92,2.34a.7.7,0,0,0,.39.11.745.745,0,0,0,.64-.37.72.72,0,0,0,.09-.552.762.762,0,0,0-.35-.477L10.4,10.29V5.669A.751.751,0,0,0,9.65,4.919Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.675,8.889a.756.756,0,0,1-.384-.1L.365,6.442A.754.754,0,0,1,0,5.8V.75a.75.75,0,0,1,1.5,0V5.371L5.06,7.494a.75.75,0,0,1-.385,1.395'\n        transform='translate(8.898 4.925)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.391,6.384,0,4.361V0'\n        transform='translate(10 5.634)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm6.763-7.338-3.39-2.023a.751.751,0,0,1-.366-.645V5.634a.75.75,0,1,1,1.5,0V9.569l3.026,1.8a.751.751,0,0,1-.769,1.29Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z'\n        transform='translate(0.751 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.391,6.384,0,4.361V0'\n        transform='translate(10 5.634)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.391,6.384,0,4.361V0'\n        transform='translate(9.999 5.634)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTimeSquare.displayName = 'IconlyTimeSquare'\nTimeSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(TimeSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst TimeCircle = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,1,1,10,0a10,10,0,0,1,7.074,17.074A9.936,9.936,0,0,1,10,20ZM9.65,4.93a.751.751,0,0,0-.75.75v5.05a.747.747,0,0,0,.37.64l3.92,2.34a.764.764,0,0,0,.39.111.746.746,0,0,0,.64-.371.756.756,0,0,0-.26-1.03L10.4,10.3V5.68A.751.751,0,0,0,9.65,4.93Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.675,8.889a.756.756,0,0,1-.384-.1L.365,6.442A.754.754,0,0,1,0,5.8V.75a.75.75,0,0,1,1.5,0V5.371L5.06,7.494a.75.75,0,0,1-.385,1.395'\n        transform='translate(8.899 4.925)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.77,7.1,0,4.847V0'\n        transform='translate(9.661 5.847)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M2.073,16.1a.727.727,0,0,1,1.152-.888A8.548,8.548,0,1,0,1.455,10a8.635,8.635,0,0,0,.1,1.3.727.727,0,0,1-.608.828.719.719,0,0,1-.828-.608A10,10,0,1,1,2.073,16.1Zm11-2.524L9.288,11.32a.73.73,0,0,1-.354-.625V5.837a.727.727,0,1,1,1.453,0v4.446l3.425,2.042a.727.727,0,0,1-.744,1.249Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.77,7.1,0,4.847V0'\n        transform='translate(9.661 5.847)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.53,4.921,0,4.847V0'\n        transform='translate(9.661 5.846)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTimeCircle.displayName = 'IconlyTimeCircle'\nTimeCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(TimeCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst VolumeUp = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M9.677,18a2.693,2.693,0,0,1-1.588-.676l-3.526-2.94H2.752A2.645,2.645,0,0,1,.145,11.8a27.953,27.953,0,0,1,0-5.677,2.7,2.7,0,0,1,2.607-2.51H4.563l3.46-2.9A3.014,3.014,0,0,1,9.758,0a2.548,2.548,0,0,1,2.368,1.956,10.232,10.232,0,0,1,.231,1.495l.048.442a96.7,96.7,0,0,1,0,10.216l-.048.458a9.034,9.034,0,0,1-.224,1.453A2.54,2.54,0,0,1,9.782,18Zm8.614-.22a.957.957,0,0,1-.23-1.308A13.405,13.405,0,0,0,20.165,9,13.4,13.4,0,0,0,18.06,1.529.958.958,0,0,1,18.29.221a.9.9,0,0,1,1.277.236A15.319,15.319,0,0,1,22,9a15.318,15.318,0,0,1-2.433,8.544.912.912,0,0,1-.753.4A.9.9,0,0,1,18.291,17.78Zm-3.162-3.038a.957.957,0,0,1-.23-1.308A7.957,7.957,0,0,0,16.143,9,7.955,7.955,0,0,0,14.9,4.566a.957.957,0,0,1,.229-1.308.907.907,0,0,1,1.279.237A9.878,9.878,0,0,1,17.978,9a9.878,9.878,0,0,1-1.571,5.505.9.9,0,0,1-1.278.237Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M12.357,3.451a10.165,10.165,0,0,0-.232-1.494A2.547,2.547,0,0,0,9.758,0,3.014,3.014,0,0,0,8.022.719l-3.459,2.9H2.752A2.7,2.7,0,0,0,.145,6.127a27.9,27.9,0,0,0,0,5.677,2.644,2.644,0,0,0,2.607,2.579H4.563l3.526,2.941A2.694,2.694,0,0,0,9.677,18h.1a2.539,2.539,0,0,0,2.351-1.981,9.044,9.044,0,0,0,.224-1.453l.047-.458a96.5,96.5,0,0,0,0-10.215Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M1.671.4A.907.907,0,0,0,.392.167.957.957,0,0,0,.164,1.475,7.956,7.956,0,0,1,1.407,5.909,7.959,7.959,0,0,1,.164,10.343a.956.956,0,0,0,.23,1.308.9.9,0,0,0,1.277-.236A9.876,9.876,0,0,0,3.242,5.909,9.876,9.876,0,0,0,1.671.4'\n        transform='translate(14.736 3.091)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.67.4A.905.905,0,0,0,.393.167a.958.958,0,0,0-.23,1.308,13.407,13.407,0,0,1,2.1,7.471,13.408,13.408,0,0,1-2.1,7.472.957.957,0,0,0,.231,1.308.9.9,0,0,0,.522.167.912.912,0,0,0,.754-.4A15.317,15.317,0,0,0,4.1,8.946,15.319,15.319,0,0,0,1.67.4'\n        transform='translate(17.898 0.054)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(1.6 4)'>\n      <path\n        d='M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.831,1.831,0,0,1,.141,10.644a25.553,25.553,0,0,1,0-5.35A1.882,1.882,0,0,1,1.972,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.1,93.1,0,0,1,10.871,12.892Z'\n        transform='translate(0 0.25)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A8.794,8.794,0,0,1,1.453,5.008,8.791,8.791,0,0,1,0,10.015'\n        transform='translate(14.843 3.06)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A14.165,14.165,0,0,1,2.341,8.068,14.169,14.169,0,0,1,0,16.137'\n        transform='translate(18.274 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(1 2.5)'>\n      <path\n        d='M18.376,18.855a.831.831,0,0,1-.193-1.124,13.664,13.664,0,0,0,1.923-4.763.782.782,0,0,1,.919-.618.807.807,0,0,1,.59.961,15.348,15.348,0,0,1-2.165,5.343.765.765,0,0,1-.635.346A.743.743,0,0,1,18.376,18.855Zm-8.869-.323a2.626,2.626,0,0,1-1.562-.677L4.269,14.72a.832.832,0,0,1-.112-1.136.749.749,0,0,1,1.086-.116l3.688,3.145a1.086,1.086,0,0,0,.615.3c.381.027.739-.314.881-.812a7.923,7.923,0,0,0,.17-1.178c.015-.166.032-.329.05-.495.161-1.338.161-8.522,0-9.859L10.6,4.1a9.245,9.245,0,0,0-.18-1.234c-.134-.47-.5-.825-.833-.783a1.542,1.542,0,0,0-.719.346l-3.622,3.1a.75.75,0,0,1-.49.184H2.7c-.648,0-.955.575-1.027,1.114a26.916,26.916,0,0,0,0,5.278.8.8,0,0,1-.657.912.786.786,0,0,1-.872-.689,28.568,28.568,0,0,1,0-5.712A2.677,2.677,0,0,1,2.7,4.1h1.78l3.4-2.909A3.024,3.024,0,0,1,9.58.468a2.531,2.531,0,0,1,2.327,1.963,10.383,10.383,0,0,1,.228,1.5l.046.442a98.418,98.418,0,0,1,0,10.255l-.046.456a9.177,9.177,0,0,1-.222,1.46,2.505,2.505,0,0,1-2.307,1.989C9.571,18.532,9.54,18.531,9.507,18.532Zm5.336-2.975a.832.832,0,0,1-.193-1.125A8.982,8.982,0,0,0,16.008,9.5a8.984,8.984,0,0,0-1.359-4.933.831.831,0,0,1,.193-1.124.752.752,0,0,1,1.075.2A10.67,10.67,0,0,1,17.553,9.5a10.666,10.666,0,0,1-1.635,5.855.761.761,0,0,1-.634.346A.749.749,0,0,1,14.843,15.557ZM20.455,9.5a15,15,0,0,0-2.272-8.231A.835.835,0,0,1,18.375.143a.755.755,0,0,1,1.076.2A16.673,16.673,0,0,1,22,9.5a.773.773,0,1,1-1.544,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(1.6 4)'>\n      <path\n        d='M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.831,1.831,0,0,1,.141,10.644a25.553,25.553,0,0,1,0-5.35A1.882,1.882,0,0,1,1.972,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.1,93.1,0,0,1,10.871,12.892Z'\n        transform='translate(0 0.25)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A8.794,8.794,0,0,1,1.453,5.008,8.791,8.791,0,0,1,0,10.015'\n        transform='translate(14.843 3.06)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0A14.165,14.165,0,0,1,2.341,8.068,14.169,14.169,0,0,1,0,16.137'\n        transform='translate(18.274 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 4.5)'>\n      <path\n        d='M0,0A11.128,11.128,0,0,1,0,12.357'\n        transform='translate(17.436 1.274)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A7.74,7.74,0,0,1,0,7.472'\n        transform='translate(14.989 3.717)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,6.771c0,1.246,0,2.708,1.029,3.582s1.846.514,3.178.952,3.2,3.146,5.261,1.924c1.115-.792,1.64-2.286,1.64-6.457s-.5-5.649-1.64-6.457C7.407-.908,5.54,1.8,4.208,2.238s-2.148.078-3.178.952S0,5.525,0,6.771Z'\n        transform='translate(0.682 0.682)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVolumeUp.displayName = 'IconlyVolumeUp'\nVolumeUp.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(VolumeUp)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst VolumeDown = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M9.689,18A2.694,2.694,0,0,1,8.1,17.323l-3.531-2.94H2.755A2.646,2.646,0,0,1,.145,11.8a27.888,27.888,0,0,1,0-5.677,2.7,2.7,0,0,1,2.61-2.51H4.568L8.032.719A3.022,3.022,0,0,1,9.769,0a2.548,2.548,0,0,1,2.37,1.956,10.116,10.116,0,0,1,.232,1.495l.048.442a96.7,96.7,0,0,1,0,10.216l-.048.458a9.034,9.034,0,0,1-.224,1.453A2.542,2.542,0,0,1,9.793,18Zm5.459-3.257a.955.955,0,0,1-.23-1.308A7.955,7.955,0,0,0,16.163,9a7.952,7.952,0,0,0-1.246-4.434.955.955,0,0,1,.23-1.308.91.91,0,0,1,1.278.237A9.869,9.869,0,0,1,18,9a9.869,9.869,0,0,1-1.574,5.505.914.914,0,0,1-.754.4A.9.9,0,0,1,15.148,14.742Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M12.372,3.451a10.154,10.154,0,0,0-.232-1.494A2.549,2.549,0,0,0,9.769,0,3.02,3.02,0,0,0,8.032.719l-3.463,2.9H2.755a2.7,2.7,0,0,0-2.61,2.51,27.871,27.871,0,0,0,0,5.677,2.646,2.646,0,0,0,2.61,2.579H4.568L8.1,17.324A2.7,2.7,0,0,0,9.688,18h.1a2.542,2.542,0,0,0,2.354-1.981,9.035,9.035,0,0,0,.225-1.453l.047-.458a96.385,96.385,0,0,0,0-10.215Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M1.672.4A.91.91,0,0,0,.394.166a.955.955,0,0,0-.23,1.308A7.954,7.954,0,0,1,1.409,5.908,7.957,7.957,0,0,1,.164,10.342a.955.955,0,0,0,.23,1.308.9.9,0,0,0,.524.167.915.915,0,0,0,.755-.4A9.872,9.872,0,0,0,3.246,5.908,9.872,9.872,0,0,0,1.672.4'\n        transform='translate(14.754 3.092)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(4 4)'>\n      <path\n        d='M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.832,1.832,0,0,1,.14,10.644a25.623,25.623,0,0,1,0-5.35A1.883,1.883,0,0,1,1.971,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.092,93.092,0,0,1,10.871,12.892Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A9.312,9.312,0,0,1,1.538,5.3,9.308,9.308,0,0,1,0,10.6'\n        transform='translate(14.717 2.574)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M9.75,18a2.736,2.736,0,0,1-1.6-.675L4.377,14.2a.813.813,0,0,1-.113-1.132.784.784,0,0,1,1.114-.116l3.781,3.135a1.114,1.114,0,0,0,.632.3.978.978,0,0,0,.9-.807,7.4,7.4,0,0,0,.175-1.174c.015-.165.031-.328.051-.494.164-1.334.164-8.491,0-9.823l-.05-.47a9.329,9.329,0,0,0-.183-1.229c-.139-.467-.511-.822-.855-.779a1.586,1.586,0,0,0-.738.345L5.379,5.045a.785.785,0,0,1-.5.183H2.77a1.128,1.128,0,0,0-1.054,1.11,25.983,25.983,0,0,0,0,5.259.8.8,0,0,1-.674.91.8.8,0,0,1-.894-.688,27.583,27.583,0,0,1,0-5.692A2.708,2.708,0,0,1,2.77,3.619H4.595L8.079.72A3.156,3.156,0,0,1,9.824,0a2.577,2.577,0,0,1,2.388,1.957,9.961,9.961,0,0,1,.233,1.5l.048.44a95.291,95.291,0,0,1,0,10.217l-.048.455a8.866,8.866,0,0,1-.228,1.454A2.55,2.55,0,0,1,9.851,18C9.816,18,9.784,18,9.75,18Zm5.472-2.965a.813.813,0,0,1-.2-1.12A8.773,8.773,0,0,0,16.417,9a8.764,8.764,0,0,0-1.392-4.914.816.816,0,0,1,.2-1.122.786.786,0,0,1,1.1.2A10.406,10.406,0,0,1,18,9a10.405,10.405,0,0,1-1.676,5.835.785.785,0,0,1-1.1.2Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(4 4)'>\n      <path\n        d='M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.832,1.832,0,0,1,.14,10.644a25.623,25.623,0,0,1,0-5.35A1.883,1.883,0,0,1,1.971,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.092,93.092,0,0,1,10.871,12.892Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A9.312,9.312,0,0,1,1.538,5.3,9.308,9.308,0,0,1,0,10.6'\n        transform='translate(14.717 2.574)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(4 5)'>\n      <path\n        d='M0,0A7.568,7.568,0,0,1,0,7.306'\n        transform='translate(14.656 3.635)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,6.621c0,1.219,0,2.648,1.006,3.5s1.805.5,3.108.931,3.128,3.076,5.144,1.881c1.09-.774,1.6-2.236,1.6-6.314S10.371,1.1,9.258.307C7.242-.888,5.417,1.76,4.114,2.188s-2.1.076-3.108.931S0,5.4,0,6.621Z'\n        transform='translate(0.667 0.666)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVolumeDown.displayName = 'IconlyVolumeDown'\nVolumeDown.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(VolumeDown)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst VolumeOff = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M.274,18.733a.929.929,0,0,1,0-1.314L3.1,14.593H3.068A2.637,2.637,0,0,1,.443,12.052a27.39,27.39,0,0,1,0-5.6A2.683,2.683,0,0,1,3.068,3.987H4.9L8.392,1.13A3.184,3.184,0,0,1,10.149.42a2.539,2.539,0,0,1,2.382,1.925,8.172,8.172,0,0,1,.234,1.472l.084.677c.014.1.026.2.037.309L17.42.271a.926.926,0,0,1,1.309,1.31L1.58,18.729A.947.947,0,0,1,.924,19,.964.964,0,0,1,.274,18.733Zm9.79-.572a2.746,2.746,0,0,1-1.6-.666l-1.3-1.006a.872.872,0,0,1-.071-1.294c.277-.338,4.648-4.322,4.792-4.463a.843.843,0,0,1,.607-.2c.389.1.464.656.458,1.094-.018,1.273-.06,2.157-.128,2.7l-.048.451a8.6,8.6,0,0,1-.228,1.432,2.546,2.546,0,0,1-2.372,1.952Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M9.765,17.743a2.756,2.756,0,0,1-1.6-.665l-1.3-1.007a.873.873,0,0,1-.071-1.294c.277-.339,4.648-4.321,4.792-4.463a.845.845,0,0,1,.607-.2c.389.1.464.658.459,1.1-.018,1.272-.061,2.156-.129,2.7l-.048.452a8.817,8.817,0,0,1-.227,1.432,2.547,2.547,0,0,1-2.372,1.952C9.836,17.744,9.8,17.744,9.765,17.743Zm-7-3.568a2.637,2.637,0,0,1-2.625-2.54,27.518,27.518,0,0,1,0-5.6A2.686,2.686,0,0,1,2.768,3.569H4.6L8.094.709A3.208,3.208,0,0,1,9.851,0a2.539,2.539,0,0,1,2.381,1.928,8.127,8.127,0,0,1,.233,1.47l.085.679c.022.158.042.3.053.487L2.991,14.174Z'\n        transform='translate(0.299 0.418)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M18.728.27a.926.926,0,0,0-1.307,0L.27,17.419a.929.929,0,0,0,0,1.314A.963.963,0,0,0,.925,19a.946.946,0,0,0,.655-.271L18.729,1.581a.927.927,0,0,0,0-1.311'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(3 2.5)'>\n      <path\n        d='M4.1,12.6H1.984A1.845,1.845,0,0,1,.141,10.753a25.917,25.917,0,0,1,0-5.406A1.9,1.9,0,0,1,1.984,3.568H4.1L7.809.53A2.278,2.278,0,0,1,9.039,0a1.742,1.742,0,0,1,1.651,1.363,14.268,14.268,0,0,1,.253,1.777A11.67,11.67,0,0,1,11.069,5.4'\n        transform='translate(0.795 1.286)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.574,0c-.019,1.336-.065,2.149-.123,2.618A12.555,12.555,0,0,1,4.2,4.394,1.741,1.741,0,0,1,2.548,5.757,1.968,1.968,0,0,1,1.4,5.281L0,4.142'\n        transform='translate(7.286 11.691)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M17.148,0,0,17.148'\n        transform='translate(0.848 0.794)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M.288,18.764a.809.809,0,0,1,0-1.139l10.9-10.934a11.738,11.738,0,0,0-.085-1.831L11.02,4.12a8.971,8.971,0,0,0-.184-1.231.985.985,0,0,0-.848-.779H9.967a1.654,1.654,0,0,0-.748.344L5.453,5.545a.8.8,0,0,1-.508.182H2.808A1.136,1.136,0,0,0,1.74,6.838a25.724,25.724,0,0,0,0,5.259.8.8,0,0,1-.683.909.683.683,0,0,1-.112.008A.8.8,0,0,1,.15,12.32a27.344,27.344,0,0,1,0-5.692,2.732,2.732,0,0,1,2.66-2.512h1.85l3.533-2.9A3.309,3.309,0,0,1,9.963.5,2.607,2.607,0,0,1,12.38,2.455a9.965,9.965,0,0,1,.237,1.495l.082.683c.023.162.041.3.056.491L17.629.235a.8.8,0,1,1,1.136,1.139L1.424,18.764a.8.8,0,0,1-1.136,0ZM9.881,18.5a2.794,2.794,0,0,1-1.621-.674l-1.4-1.147a.8.8,0,0,1,1.015-1.247l1.411,1.155a1.324,1.324,0,0,0,.635.3c.007,0,.015,0,.024,0a1,1,0,0,0,.9-.808,7.672,7.672,0,0,0,.176-1.175q.023-.246.052-.493c.06-.492.1-1.355.119-2.57A.79.79,0,0,1,12,11.051a.8.8,0,0,1,.791.817c-.018,1.292-.06,2.188-.129,2.741l-.049.457a8.787,8.787,0,0,1-.229,1.454,2.579,2.579,0,0,1-2.4,1.982Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M1.084,12.373a1.7,1.7,0,0,1-.631-.635,2.556,2.556,0,0,1-.311-.984,25.917,25.917,0,0,1,0-5.406A1.9,1.9,0,0,1,1.985,3.569H4.1L7.811.53A2.29,2.29,0,0,1,9.04,0a1.742,1.742,0,0,1,1.65,1.364,9.605,9.605,0,0,1,.256,1.481'\n        transform='translate(0 0.491)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.574,0c-.019,1.335-.065,2.148-.123,2.617A12.534,12.534,0,0,1,4.2,4.393,1.743,1.743,0,0,1,2.548,5.757,1.977,1.977,0,0,1,1.4,5.28L0,4.141'\n        transform='translate(6.492 10.898)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M17.148,0,0,17.148'\n        transform='translate(0.054 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(4 4)'>\n      <path\n        d='M3.732,11.008c-1.083-.251-1.816-.054-2.72-.814C0,9.335-.008,7.895,0,6.669-.008,5.443,0,4,1.012,3.144s1.816-.51,3.132-.939,3.141-3.1,5.172-1.9c.823.582,1.306,1.53,1.5,3.615'\n        transform='translate(0.671 1.545)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.509,0c-.116,3.006-.635,4.214-1.593,4.894A2.583,2.583,0,0,1,0,4.509'\n        transform='translate(7.07 9.672)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M15.345,0,0,15.345'\n        transform='translate(0.941 0.671)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVolumeOff.displayName = 'IconlyVolumeOff'\nVolumeOff.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(VolumeOff)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Star = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M15.919,11.82a1.1,1.1,0,0,0-.319.97l.889,4.92a1.08,1.08,0,0,1-.45,1.08,1.1,1.1,0,0,1-1.17.08L10.44,16.56a1.131,1.131,0,0,0-.5-.131H9.669a.812.812,0,0,0-.27.09L4.969,18.84a1.168,1.168,0,0,1-.71.11,1.112,1.112,0,0,1-.89-1.271l.89-4.92a1.119,1.119,0,0,0-.319-.979L.329,8.28A1.08,1.08,0,0,1,.06,7.15,1.123,1.123,0,0,1,.949,6.4l4.97-.721A1.112,1.112,0,0,0,6.8,5.07L8.989.58a1.041,1.041,0,0,1,.2-.27l.09-.07A.671.671,0,0,1,9.44.11L9.549.07,9.719,0h.421a1.119,1.119,0,0,1,.88.6l2.219,4.47a1.111,1.111,0,0,0,.83.609l4.97.721a1.134,1.134,0,0,1,.91.75,1.086,1.086,0,0,1-.29,1.13Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M10.976.614,13.2,5.088a1.112,1.112,0,0,0,.838.6l5,.728a1.121,1.121,0,0,1,.736.43,1.082,1.082,0,0,1,.21.815,1.112,1.112,0,0,1-.321.632l-3.624,3.513a1.056,1.056,0,0,0-.321.963l.892,4.939a1.115,1.115,0,0,1-.892,1.272,1.168,1.168,0,0,1-.714-.114l-4.461-2.324a1.169,1.169,0,0,0-1.053,0L5.033,18.866A1.143,1.143,0,0,1,3.5,18.419a1.131,1.131,0,0,1-.116-.7l.892-4.94a1.061,1.061,0,0,0-.321-.964L.332,8.3A1.084,1.084,0,0,1,.3,6.772l.029-.029a1.078,1.078,0,0,1,.642-.315l5-.729a1.114,1.114,0,0,0,.838-.6L8.96.614A1.107,1.107,0,0,1,9.977,0h.134a1.116,1.116,0,0,1,.865.613'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M9.992,16.417a1.226,1.226,0,0,0-.552.151L5,18.887a1.158,1.158,0,0,1-1.5-.461,1.106,1.106,0,0,1-.116-.694L4.274,12.8a1.1,1.1,0,0,0-.321-.975L.328,8.318A1.093,1.093,0,0,1,.311,6.774l.017-.016A1.134,1.134,0,0,1,.96,6.441L5.965,5.7A1.083,1.083,0,0,0,6.8,5.1L8.978.563A1.106,1.106,0,0,1,10,0c-.008.3-.008,16.213-.008,16.415'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M10.214.441,12.53,5.1a.8.8,0,0,0,.6.437l5.185.749a.8.8,0,0,1,.528.306.77.77,0,0,1-.085,1.032L15,11.258a.762.762,0,0,0-.226.7l.9,5.128a.787.787,0,0,1-.652.892.868.868,0,0,1-.516-.08L9.888,15.478a.776.776,0,0,0-.742,0L4.494,17.912a.812.812,0,0,1-1.077-.33.8.8,0,0,1-.081-.5l.9-5.128a.788.788,0,0,0-.226-.7L.232,7.621a.786.786,0,0,1,0-1.112l0,0a.909.909,0,0,1,.452-.222L5.87,5.534a.812.812,0,0,0,.6-.438L8.784.441a.787.787,0,0,1,.458-.4.8.8,0,0,1,.61.044A.82.82,0,0,1,10.214.441Z'\n        transform='translate(0 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M15.5,19.919a.67.67,0,0,1-.352-.09l-5.138-2.706L5.484,19.559a1.521,1.521,0,0,1-2.062-.613l-.015-.028a1.64,1.64,0,0,1-.158-1l.88-5.194L.451,9a1.6,1.6,0,0,1,0-2.227,1.494,1.494,0,0,1,.88-.451l5.043-.766L8.617.883a1.515,1.515,0,0,1,2.754,0l2.253,4.689,5.06.775a1.525,1.525,0,0,1,1.016.624,1.649,1.649,0,0,1-.162,2.081l-3.661,3.68.51,2.8a.782.782,0,0,1-.625.9.758.758,0,0,1-.88-.613l-.519-2.8a1.623,1.623,0,0,1,.44-1.408l3.67-3.706-5.06-.785a1.52,1.52,0,0,1-1.153-.9L10.008,1.551,7.728,6.294a1.518,1.518,0,0,1-1.153.9L1.532,7.96l3.643,3.7a1.591,1.591,0,0,1,.44,1.389l-.88,5.194,4.523-2.426a1.472,1.472,0,0,1,1.443,0l5.131,2.706a.788.788,0,0,1,.387.879.77.77,0,0,1-.739.6Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M9,0C6.964,0,6.771,3.547,5.559,4.8S.578,4.62.055,6.844s2.868,2.98,3.286,4.889-1.651,4.591.119,5.926S7.134,15.975,9,15.975s3.771,3.019,5.541,1.685-.3-4.017.119-5.926,3.808-2.664,3.286-4.889-4.292-.791-5.5-2.044S11.036,0,9,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nStar.displayName = 'IconlyStar'\nStar.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Star)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Ticket = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M16.219,16H13.066a.583.583,0,0,1-.59-.573V13.4a.708.708,0,0,0-.725-.7.716.716,0,0,0-.725.7v2.03a.582.582,0,0,1-.589.573H3.782A3.733,3.733,0,0,1,0,12.326V9.916a.693.693,0,0,1,.739-.661A1.283,1.283,0,0,0,2.021,8a1.212,1.212,0,0,0-1.3-1.174.734.734,0,0,1-.513-.207A.69.69,0,0,1,0,6.116V3.683A3.742,3.742,0,0,1,3.791,0h6.646a.582.582,0,0,1,.589.573v2.4a.725.725,0,0,0,.725.7.716.716,0,0,0,.725-.7V.573A.583.583,0,0,1,13.066,0h3.153A3.733,3.733,0,0,1,20,3.674V6.041a.694.694,0,0,1-.212.5.734.734,0,0,1-.513.206,1.255,1.255,0,1,0-.014,2.509A.693.693,0,0,1,20,9.916v2.41A3.733,3.733,0,0,1,16.219,16ZM11.75,5.7a.724.724,0,0,0-.725.7v3.758a.725.725,0,0,0,.725.7.716.716,0,0,0,.725-.7V6.407A.716.716,0,0,0,11.75,5.7Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M11.75,5.7V3.683a.72.72,0,0,1-.725-.7V.573A.577.577,0,0,0,10.435,0H3.791A3.744,3.744,0,0,0,0,3.683V6.115a.694.694,0,0,0,.213.5.739.739,0,0,0,.513.206,1.216,1.216,0,0,1,1.3,1.174A1.274,1.274,0,0,1,.735,9.253.692.692,0,0,0,0,9.92v2.406A3.734,3.734,0,0,0,3.781,16h6.654a.579.579,0,0,0,.59-.573V13.4a.715.715,0,0,1,.725-.7V10.87a.721.721,0,0,1-.725-.7V6.407a.72.72,0,0,1,.725-.7'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M6.228,7.995A1.282,1.282,0,0,0,7.515,9.254a.691.691,0,0,1,.735.658v2.414A3.728,3.728,0,0,1,4.468,16H1.315a.585.585,0,0,1-.59-.574V13.4a.708.708,0,0,0-.725-.7V10.871a.715.715,0,0,0,.725-.7V6.408A.714.714,0,0,0,0,5.7V3.683a.714.714,0,0,0,.725-.7V.574A.584.584,0,0,1,1.315,0H4.468A3.728,3.728,0,0,1,8.25,3.673V6.041a.692.692,0,0,1-.213.5.736.736,0,0,1-.513.207,1.277,1.277,0,0,0-1.3,1.249'\n        transform='translate(11.75)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 4)'>\n      <g transform='translate(11.35 0.25)'>\n        <path\n          d='M.5,0V2.42'\n          transform='translate(0 0)'\n          fill='none'\n          stroke={color}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n        />\n        <path\n          d='M.5,0V2.024'\n          transform='translate(0 13.51)'\n          fill='none'\n          stroke={color}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n        />\n        <path\n          d='M.5,4.821V0'\n          transform='translate(0 5.253)'\n          fill='none'\n          stroke={color}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n        />\n      </g>\n      <path\n        d='M16.7,16A3.277,3.277,0,0,0,20,12.743V10.151a2.15,2.15,0,1,1,0-4.3V3.257A3.277,3.277,0,0,0,16.7,0H3.3A3.277,3.277,0,0,0,0,3.257V5.935A2.09,2.09,0,0,1,2.177,8,2.159,2.159,0,0,1,0,10.151v2.593A3.277,3.277,0,0,0,3.3,16Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M3.786,16A3.734,3.734,0,0,1,0,12.326L0,9.884a.7.7,0,0,1,.212-.5.741.741,0,0,1,.513-.206A1.213,1.213,0,0,0,2.019,8,1.277,1.277,0,0,0,.725,6.743.716.716,0,0,1,0,6.038V3.675A3.735,3.735,0,0,1,3.785,0H5.009a.716.716,0,0,1,.725.7.715.715,0,0,1-.725.7H3.785A2.3,2.3,0,0,0,1.451,3.675V5.429A2.682,2.682,0,0,1,3.47,8a2.584,2.584,0,0,1-2.018,2.5v1.826a2.3,2.3,0,0,0,2.334,2.265h7.241v-1.2a.726.726,0,0,1,1.451,0v1.2h3.736a2.3,2.3,0,0,0,2.334-2.265V10.57a2.646,2.646,0,0,1,0-5.141V3.675a2.3,2.3,0,0,0-2.333-2.266H12.479v1.57a.726.726,0,0,1-1.451,0V1.409H9.064A.715.715,0,0,1,8.339.7.716.716,0,0,1,9.064,0h7.152A3.735,3.735,0,0,1,20,3.675V6.038a.716.716,0,0,1-.725.7,1.257,1.257,0,1,0,0,2.513.735.735,0,0,1,.513.206.7.7,0,0,1,.212.5v2.366A3.734,3.734,0,0,1,16.214,16Zm7.241-5.832V6.411a.726.726,0,0,1,1.451,0v3.758a.726.726,0,0,1-1.451,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 4)'>\n      <g transform='translate(11.35 0.25)'>\n        <path\n          d='M.5,0V2.42'\n          transform='translate(0 0)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n        <path\n          d='M.5,0V2.024'\n          transform='translate(0 13.51)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n        <path\n          d='M.5,4.821V0'\n          transform='translate(0 5.253)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n      </g>\n      <path\n        d='M16.7,16A3.277,3.277,0,0,0,20,12.743V10.151a2.15,2.15,0,1,1,0-4.3V3.257A3.277,3.277,0,0,0,16.7,0H3.3A3.277,3.277,0,0,0,0,3.257V5.935A2.09,2.09,0,0,1,2.177,8,2.159,2.159,0,0,1,0,10.151v2.593A3.277,3.277,0,0,0,3.3,16Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.5 3)'>\n      <path\n        d='M.475,0V2.655'\n        transform='translate(10.384 0.6)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.475,0V2.22'\n        transform='translate(10.384 14.544)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.475,5.289V0'\n        transform='translate(10.384 6.255)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M19,10.55a2.051,2.051,0,0,1,0-4.1C19,1.7,19,0,9.5,0S0,1.7,0,6.449a2.051,2.051,0,0,1,0,4.1C0,15.3,0,17,9.5,17S19,15.3,19,10.55Z'\n        transform='translate(0 0.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTicket.displayName = 'IconlyTicket'\nTicket.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Ticket)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Camera = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M15.64,18H4.36A4.362,4.362,0,0,1,0,13.645V7.711A4.362,4.362,0,0,1,4.36,3.356a.2.2,0,0,0,.191-.12l.059-.12.083-.175c.261-.55.557-1.173.737-1.533A2.433,2.433,0,0,1,7.64,0h4.71a2.44,2.44,0,0,1,2.22,1.408c.157.315.4.82.627,1.308l.142.3.1.22a.225.225,0,0,0,.2.12A4.362,4.362,0,0,1,20,7.711v5.934A4.362,4.362,0,0,1,15.64,18ZM10,6.4A3.922,3.922,0,0,0,7.21,7.562a3.867,3.867,0,0,0-1.14,2.767A3.924,3.924,0,0,0,10,14.254a3.9,3.9,0,0,0,2.77-1.148,3.915,3.915,0,0,0,.01-5.554A3.9,3.9,0,0,0,10,6.4Zm5.61-.239a.9.9,0,1,0,.911.909A.906.906,0,0,0,15.61,6.163ZM10,12.756a2.423,2.423,0,0,1-2.43-2.427v-.01a2.337,2.337,0,0,1,.7-1.7A2.43,2.43,0,1,1,10,12.756Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M1.15,6.942A3.931,3.931,0,0,1,0,4.165,3.871,3.871,0,0,1,1.14,1.4a3.926,3.926,0,1,1,.01,5.544ZM2.2,2.457a2.334,2.334,0,0,0-.7,1.7v.01A2.423,2.423,0,0,0,3.93,6.593,2.444,2.444,0,0,0,6.36,4.165,2.433,2.433,0,0,0,2.2,2.457ZM8.64.909a.9.9,0,1,1,.9.9A.9.9,0,0,1,8.64.909Z'\n        transform='translate(6.07 6.163)'\n        fill={color}\n      />\n      <path\n        d='M15.44,3.236l-.1-.22c-.27-.569-.58-1.229-.77-1.608A2.442,2.442,0,0,0,12.35,0H7.64A2.428,2.428,0,0,0,5.43,1.408c-.2.4-.54,1.119-.82,1.708l-.06.12a.2.2,0,0,1-.19.12A4.361,4.361,0,0,0,0,7.711v5.933A4.361,4.361,0,0,0,4.36,18H15.64A4.368,4.368,0,0,0,20,13.645V7.711a4.368,4.368,0,0,0-4.36-4.355A.227.227,0,0,1,15.44,3.236Z'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.888,3.36h0a.962.962,0,0,1-.87-.551C13.731,2.2,13.366,1.424,13.15,1A1.675,1.675,0,0,0,11.6,0c-.012,0-4.684,0-4.7,0A1.676,1.676,0,0,0,5.35,1c-.215.423-.58,1.2-.867,1.808a.963.963,0,0,1-.87.551h0A3.612,3.612,0,0,0,0,6.972v5.936A3.613,3.613,0,0,0,3.613,16.52H14.888A3.612,3.612,0,0,0,18.5,12.908V6.972A3.612,3.612,0,0,0,14.888,3.36Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.182A3.179,3.179,0,1,0,3.182,0,3.19,3.19,0,0,0,0,3.182Z'\n        transform='translate(6.821 7.152)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.9,2a1.085,1.085,0,0,1-.3-.078A1.008,1.008,0,0,1,.282,1.7,1.021,1.021,0,0,1,0,1,.971.971,0,0,1,.082.607,1.018,1.018,0,0,1,.318.265,1.144,1.144,0,0,1,.622.07,1.023,1.023,0,0,1,1.7.285a.962.962,0,0,1,.19.261L1.917.6A.974.974,0,0,1,2,1a1.016,1.016,0,0,1-.292.705A1,1,0,0,1,1.1,2L1,2Z'\n        transform='translate(14 6)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M8.58,18a.749.749,0,1,1,0-1.5h7.059A2.864,2.864,0,0,0,18.5,13.642V7.713a2.864,2.864,0,0,0-2.862-2.859,1.718,1.718,0,0,1-1.548-.979c-.314-.665-.655-1.385-.859-1.788a.93.93,0,0,0-.889-.588H7.653a.928.928,0,0,0-.884.589c-.2.391-.526,1.084-.8,1.663l-.059.124a1.719,1.719,0,0,1-1.548.979A2.864,2.864,0,0,0,1.5,7.713v5.929A2.864,2.864,0,0,0,4.363,16.5h.745a.749.749,0,1,1,0,1.5H4.363A4.365,4.365,0,0,1,0,13.642V7.713A4.365,4.365,0,0,1,4.363,3.355a.211.211,0,0,0,.192-.121l.059-.124c.279-.592.614-1.3.816-1.7A2.425,2.425,0,0,1,7.646,0h4.7a2.426,2.426,0,0,1,2.221,1.409c.209.411.557,1.147.841,1.751.071.148.146.2.229.2A4.365,4.365,0,0,1,20,7.713v5.929A4.365,4.365,0,0,1,15.638,18ZM10,14.254a3.928,3.928,0,0,1-3.74-5.121.75.75,0,0,1,1.43.454,2.383,2.383,0,0,0-.115.733A2.435,2.435,0,0,0,10,12.756h0a2.419,2.419,0,0,0,1.724-.723,2.376,2.376,0,0,0,.7-1.7A2.438,2.438,0,0,0,10,7.895h0a2.475,2.475,0,0,0-.529.057.748.748,0,1,1-.327-1.461A3.836,3.836,0,0,1,10,6.4h0a3.936,3.936,0,0,1,3.928,3.931,3.857,3.857,0,0,1-1.139,2.762A3.91,3.91,0,0,1,10,14.254Zm4.923-6.5a.745.745,0,0,1-.22-.528.7.7,0,0,1,.06-.279,1.081,1.081,0,0,1,.16-.25,1.055,1.055,0,0,1,.25-.161.807.807,0,0,1,.57,0,.832.832,0,0,1,.24.161.88.88,0,0,1,.17.25.7.7,0,0,1,.059.279.718.718,0,0,1-.229.528.8.8,0,0,1-.24.17.7.7,0,0,1-.29.051A.743.743,0,0,1,14.92,7.752Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M14.888,3.36h0a.962.962,0,0,1-.87-.551C13.731,2.2,13.366,1.424,13.15,1A1.675,1.675,0,0,0,11.6,0c-.012,0-4.684,0-4.7,0A1.676,1.676,0,0,0,5.35,1c-.215.423-.58,1.2-.867,1.808a.963.963,0,0,1-.87.551h0A3.612,3.612,0,0,0,0,6.972v5.936A3.613,3.613,0,0,0,3.613,16.52H14.888A3.612,3.612,0,0,0,18.5,12.908V6.972A3.612,3.612,0,0,0,14.888,3.36Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.182A3.179,3.179,0,1,0,3.182,0,3.19,3.19,0,0,0,0,3.182Z'\n        transform='translate(6.821 7.152)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.9,2a1.085,1.085,0,0,1-.3-.078A1.008,1.008,0,0,1,.282,1.7,1.021,1.021,0,0,1,0,1,.971.971,0,0,1,.082.607,1.018,1.018,0,0,1,.318.265,1.144,1.144,0,0,1,.622.07,1.023,1.023,0,0,1,1.7.285a.962.962,0,0,1,.19.261L1.917.6A.974.974,0,0,1,2,1a1.016,1.016,0,0,1-.292.705A1,1,0,0,1,1.1,2L1,2Z'\n        transform='translate(14 6)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.5 3.042)'>\n      <path\n        d='M6.291,3.145A3.145,3.145,0,1,0,3.145,6.291,3.146,3.146,0,0,0,6.291,3.145Z'\n        transform='translate(6.648 6.311)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M9,17.158c8.045,0,9-2.411,9-7.634,0-3.661-.484-5.62-3.534-6.462a1.927,1.927,0,0,1-.842-.534c-.406-.445-.7-1.813-1.684-2.226A14.475,14.475,0,0,0,6.06.3C5.1.7,4.782,2.083,4.376,2.529a1.921,1.921,0,0,1-.842.534C.484,3.9,0,5.863,0,9.525,0,14.748.958,17.158,9,17.158Z'\n        transform='translate(0.789 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5.5H.5'\n        transform='translate(14.209 5.458)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCamera.displayName = 'IconlyCamera'\nCamera.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Camera)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst User = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M0,16.575c0-2.722,3.686-3.4,8-3.4,4.339,0,8,.7,8,3.424S12.315,20,8,20C3.662,20,0,19.3,0,16.575ZM2.706,5.291A5.294,5.294,0,1,1,8,10.583,5.274,5.274,0,0,1,2.706,5.291Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M8,0C3.684,0,0,.68,0,3.4S3.661,6.825,8,6.825c4.313,0,8-.679,8-3.4S12.334,0,8,0'\n        transform='translate(0 13.175)'\n        fill={color}\n      />\n      <path\n        d='M5.292,10.584A5.292,5.292,0,1,0,0,5.292a5.273,5.273,0,0,0,5.292,5.292'\n        transform='translate(2.705 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(4 2.5)'>\n      <circle\n        cx='4.778'\n        cy='4.778'\n        r='4.778'\n        transform='translate(2.801 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.016a2.215,2.215,0,0,1,.22-.97A4.042,4.042,0,0,1,3.039.426,16.787,16.787,0,0,1,5.382.1,25.053,25.053,0,0,1,9.767.1a16.979,16.979,0,0,1,2.343.33c1.071.22,2.362.659,2.819,1.62a2.27,2.27,0,0,1,0,1.95c-.458.961-1.748,1.4-2.819,1.611a15.716,15.716,0,0,1-2.343.339A25.822,25.822,0,0,1,6.2,6a4.066,4.066,0,0,1-.815-.055,15.423,15.423,0,0,1-2.334-.339C1.968,5.4.687,4.957.22,4A2.279,2.279,0,0,1,0,3.016Z'\n        transform='translate(0 13.185)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M6.978,19.985a.717.717,0,0,1-.7-.738.737.737,0,0,1,.742-.7q.483.014.981.014c4.349,0,6.555-.751,6.555-2.233,0-1.5-2.206-2.255-6.555-2.255s-6.555.752-6.555,2.235c0,.485.173,1.188,1.675,1.694a.718.718,0,1,1-.464,1.359C.461,18.624,0,17.3,0,16.31c0-3.29,4.566-3.67,8-3.67,1.978,0,8,0,8,3.691C16,19.619,11.435,20,8,20Q7.48,20,6.978,19.985ZM2.613,5.354A5.387,5.387,0,1,1,8,10.706,5.377,5.377,0,0,1,2.613,5.354Zm1.446,0A3.942,3.942,0,1,0,8,1.437,3.933,3.933,0,0,0,4.059,5.354Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(4 2)'>\n      <circle\n        cx='4.778'\n        cy='4.778'\n        r='4.778'\n        transform='translate(2.801 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,3.016a2.215,2.215,0,0,1,.22-.97A4.042,4.042,0,0,1,3.039.426,16.787,16.787,0,0,1,5.382.1,25.053,25.053,0,0,1,9.767.1a16.979,16.979,0,0,1,2.343.33c1.071.22,2.362.659,2.819,1.62a2.27,2.27,0,0,1,0,1.95c-.458.961-1.748,1.4-2.819,1.611a15.716,15.716,0,0,1-2.343.339A25.822,25.822,0,0,1,6.2,6a4.066,4.066,0,0,1-.815-.055,15.423,15.423,0,0,1-2.334-.339C1.968,5.4.687,4.957.22,4A2.279,2.279,0,0,1,0,3.016Z'\n        transform='translate(0 13.185)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(5 2.4)'>\n      <path\n        d='M6.845,7.3C3.153,7.3,0,6.726,0,4.425S3.133,0,6.845,0c3.692,0,6.845,2.1,6.845,4.4S10.556,7.3,6.845,7.3Z'\n        transform='translate(0 11.962)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.387,8.774a4.372,4.372,0,1,0-.031,0Z'\n        transform='translate(2.45 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nUser.displayName = 'IconlyUser'\nUser.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(User)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst AddUser = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M0,15.746c0-2.585,3.454-3.231,7.5-3.231,4.067,0,7.5.669,7.5,3.253S11.545,19,7.5,19C3.434,19,0,18.329,0,15.746Zm16.1-5.658V8.911H14.9a.912.912,0,0,1,0-1.823h1.2V5.911a.9.9,0,1,1,1.8,0V7.088h1.2a.912.912,0,0,1,0,1.823H17.9v1.177a.9.9,0,1,1-1.8,0ZM2.537,5.027a4.963,4.963,0,1,1,9.925,0,4.963,4.963,0,1,1-9.925,0Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M5.1,2.088H3.9V.912a.9.9,0,1,0-1.8,0V2.088H.9a.912.912,0,0,0,0,1.823H2.1V5.088a.9.9,0,1,0,1.8,0V3.911H5.1a.912.912,0,0,0,0-1.823'\n        transform='translate(14 5)'\n        fill={color}\n      />\n      <path\n        d='M7.5,0C3.454,0,0,.647,0,3.231S3.433,6.484,7.5,6.484c4.045,0,7.5-.647,7.5-3.231S11.567,0,7.5,0'\n        transform='translate(0 12.516)'\n        fill={color}\n      />\n      <path\n        d='M4.963,10.054A4.977,4.977,0,0,0,9.925,5.028,4.963,4.963,0,1,0,0,5.028a4.977,4.977,0,0,0,4.963,5.027'\n        transform='translate(2.537 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M7.127,0C3.283,0,0,.581,0,2.909s3.262,2.93,7.127,2.93c3.844,0,7.127-.582,7.127-2.909S10.992,0,7.127,0Z'\n        transform='translate(0.75 13.206)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.568,9.136A4.568,4.568,0,1,0,0,4.568,4.552,4.552,0,0,0,4.568,9.136Z'\n        transform='translate(3.309 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V4.01'\n        transform='translate(16.704 6.669)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.09.5H0'\n        transform='translate(15.16 8.174)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.909,19.987a.718.718,0,0,1-.694-.74.734.734,0,0,1,.735-.7q.477.015.971.014c4.306,0,6.49-.751,6.49-2.235s-2.183-2.254-6.49-2.254-6.491.752-6.491,2.234c0,.485.171,1.188,1.659,1.694a.718.718,0,0,1-.459,1.361C.456,18.625,0,17.3,0,16.31c0-3.29,4.521-3.67,7.922-3.67,1.958,0,7.921,0,7.921,3.69,0,3.289-4.521,3.67-7.921,3.67C7.579,20,7.24,20,6.909,19.987Zm9.557-9.193V9.538H15.178a.75.75,0,0,1,0-1.5h1.289V6.784a.747.747,0,1,1,1.495,0V8.039h1.292a.75.75,0,0,1,0,1.5H17.961v1.255a.747.747,0,1,1-1.495,0ZM2.588,5.354a5.334,5.334,0,1,1,5.333,5.354A5.35,5.35,0,0,1,2.588,5.354Zm1.431,0a3.9,3.9,0,1,0,3.9-3.917A3.914,3.914,0,0,0,4.019,5.354Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M7.127,0C3.283,0,0,.581,0,2.909s3.262,2.93,7.127,2.93c3.844,0,7.127-.582,7.127-2.909S10.992,0,7.127,0Z'\n        transform='translate(0.75 13.206)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.568,9.136A4.568,4.568,0,1,0,0,4.568,4.552,4.552,0,0,0,4.568,9.136Z'\n        transform='translate(3.309 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5,0V4.01'\n        transform='translate(16.704 6.669)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.09.5H0'\n        transform='translate(15.16 8.174)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.85 2.15)'>\n      <path\n        d='M7.072,7.3C3.258,7.3,0,6.721,0,4.411S3.237,0,7.072,0c3.814,0,7.072,2.081,7.072,4.39S10.907,7.3,7.072,7.3Z'\n        transform='translate(0 12.36)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.533,9.066a4.517,4.517,0,1,0-.032,0Z'\n        transform='translate(2.539 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V4.01'\n        transform='translate(15.781 5.979)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.09.5H0'\n        transform='translate(14.237 7.484)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nAddUser.displayName = 'IconlyAddUser'\nAddUser.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(AddUser)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst TwoUsers = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M0,14.918c0-2.447,3.386-3.06,7.349-3.06,3.985,0,7.349.634,7.349,3.083S11.313,18,7.349,18C3.364,18,0,17.366,0,14.918Zm16.633.475c.341-3.112-2.366-4.588-3.067-4.927a.053.053,0,0,1-.033-.054.041.041,0,0,1,.037-.028,18.394,18.394,0,0,1,3.748.319,3.193,3.193,0,0,1,2.462,1.468,2.106,2.106,0,0,1,0,1.877c-.532,1.123-2.246,1.485-2.912,1.578l-.03,0A.208.208,0,0,1,16.633,15.393ZM2.487,4.763A4.8,4.8,0,0,1,7.349,0a4.8,4.8,0,0,1,4.863,4.763A4.8,4.8,0,0,1,7.349,9.525,4.8,4.8,0,0,1,2.487,4.763ZM13.719,8.822a4.069,4.069,0,0,1-.56-.052.177.177,0,0,1-.122-.274,6.432,6.432,0,0,0-.1-7.439.11.11,0,0,1-.018-.123.148.148,0,0,1,.095-.056A4.2,4.2,0,0,1,13.834.8a4.045,4.045,0,0,1,3.957,5.076A4.04,4.04,0,0,1,13.83,8.823Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M7.349,0C3.386,0,0,.612,0,3.06S3.364,6.142,7.349,6.142c3.964,0,7.349-.612,7.349-3.06S11.335,0,7.349,0'\n        transform='translate(0 11.858)'\n        fill={color}\n      />\n      <path\n        d='M4.863,9.525A4.8,4.8,0,0,0,9.726,4.762,4.8,4.8,0,0,0,4.863,0,4.8,4.8,0,0,0,0,4.762,4.8,4.8,0,0,0,4.863,9.525'\n        transform='translate(2.486 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M1.265,4.053A6.368,6.368,0,0,1,.128,7.7a.177.177,0,0,0,.122.275,3.968,3.968,0,0,0,.56.052,4.045,4.045,0,0,0,4.072-2.95A4.045,4.045,0,0,0,.925,0,4.159,4.159,0,0,0,.107.081.148.148,0,0,0,.012.137.111.111,0,0,0,.031.261,6.414,6.414,0,0,1,1.265,4.053'\n        transform='translate(12.909 0.795)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M6.247,1.789A3.19,3.19,0,0,0,3.785.322,18.354,18.354,0,0,0,.038,0,.043.043,0,0,0,0,.031.054.054,0,0,0,.034.085C.734.424,3.442,1.9,3.1,5.012a.207.207,0,0,0,.234.232C4,5.151,5.716,4.79,6.247,3.667a2.107,2.107,0,0,0,0-1.878'\n        transform='translate(13.532 10.38)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M0,6.594A3.3,3.3,0,0,0,3.3,3.3,3.3,3.3,0,0,0,0,0'\n        transform='translate(14.02 1.819)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A10.9,10.9,0,0,1,1.617.233,2.664,2.664,0,0,1,3.562,1.346a1.568,1.568,0,0,1,0,1.345A2.683,2.683,0,0,1,1.617,3.809'\n        transform='translate(15.536 11.996)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.841,0c3.69,0,6.842.559,6.842,2.792S10.551,5.6,6.841,5.6C3.151,5.6,0,5.046,0,2.812S3.131,0,6.841,0Z'\n        transform='translate(0.75 12.706)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.384,8.769A4.385,4.385,0,1,1,8.769,4.384,4.369,4.369,0,0,1,4.384,8.769Z'\n        transform='translate(3.207 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M6.842,18.252a.749.749,0,0,1,.75-.747c2.779,0,6.09-.356,6.09-2.056,0-1.351-2.048-2.037-6.09-2.037-2.779,0-6.091.356-6.091,2.056,0,.381.112.872.984,1.3a5.764,5.764,0,0,0,1.328.43A.747.747,0,1,1,3.5,18.66a7.279,7.279,0,0,1-1.676-.548A2.855,2.855,0,0,1,0,15.469c0-3.551,5.713-3.551,7.592-3.551,3.259,0,7.591.366,7.591,3.532C15.182,19,9.468,19,7.592,19A.748.748,0,0,1,6.842,18.252Zm9.576-2.346A.746.746,0,0,1,17,15.024c.762-.156,1.28-.412,1.418-.7a.812.812,0,0,0,0-.7c-.141-.293-.656-.547-1.414-.7a10.216,10.216,0,0,0-1.523-.22.746.746,0,0,1-.7-.8.758.758,0,0,1,.8-.7,11.913,11.913,0,0,1,1.728.249,3.19,3.19,0,0,1,2.46,1.517,2.288,2.288,0,0,1,0,1.984A3.236,3.236,0,0,1,17.3,16.488a.791.791,0,0,1-.152.014A.747.747,0,0,1,16.418,15.906ZM4.432,9.161a.749.749,0,1,1,.922-1.18,3.626,3.626,0,1,0-1.4-2.863.75.75,0,0,1-1.5,0A5.112,5.112,0,1,1,4.432,9.161Zm8.837-.774a.749.749,0,0,1,.75-.747,2.539,2.539,0,1,0,0-5.078.748.748,0,1,1,0-1.5,4.034,4.034,0,1,1,0,8.069A.749.749,0,0,1,13.27,8.387Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M0,6.594A3.3,3.3,0,0,0,3.3,3.3,3.3,3.3,0,0,0,0,0'\n        transform='translate(14.02 1.819)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0A10.9,10.9,0,0,1,1.617.233,2.664,2.664,0,0,1,3.562,1.346a1.568,1.568,0,0,1,0,1.345A2.683,2.683,0,0,1,1.617,3.809'\n        transform='translate(15.536 11.996)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.841,0c3.69,0,6.842.559,6.842,2.792S10.551,5.6,6.841,5.6C3.151,5.6,0,5.046,0,2.812S3.131,0,6.841,0Z'\n        transform='translate(0.75 12.706)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.384,8.769A4.385,4.385,0,1,1,8.769,4.384,4.369,4.369,0,0,1,4.384,8.769Z'\n        transform='translate(3.207 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.75 2.549)'>\n      <path\n        d='M6.809,7.007C3.137,7.007,0,6.452,0,4.228S3.117,0,6.809,0c3.672,0,6.808,1.985,6.808,4.208S10.5,7.007,6.809,7.007Z'\n        transform='translate(0 11.9)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.364,8.728a4.349,4.349,0,1,0-.031,0Z'\n        transform='translate(2.445 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.187,6.4A3.289,3.289,0,0,0,2.624,3.221,3.288,3.288,0,0,0,0,0'\n        transform='translate(13.865 1.132)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0C1.988,0,3.686,1.348,3.686,2.551A1.814,1.814,0,0,1,2.211,4.2'\n        transform='translate(14.711 11.104)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nTwoUsers.displayName = 'IconlyTwoUsers'\nTwoUsers.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(TwoUsers)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst People = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(1 4)'>\n      <path\n        d='M4.588,13.28c0-2.177,2.911-2.741,6.361-2.741,3.431,0,6.36.544,6.36,2.721S14.4,16,10.949,16C7.518,16,4.588,15.456,4.588,13.28Zm14.5.4A4.453,4.453,0,0,0,16.431,9.3a.045.045,0,0,1-.029-.047.038.038,0,0,1,.032-.026,15.49,15.49,0,0,1,3.244.284,2.76,2.76,0,0,1,2.131,1.3,1.927,1.927,0,0,1,0,1.67c-.461,1-1.944,1.319-2.521,1.4l-.027,0A.183.183,0,0,1,19.086,13.684Zm-16.375.205c-.576-.083-2.06-.4-2.52-1.4a1.913,1.913,0,0,1,0-1.669,2.756,2.756,0,0,1,2.13-1.305,15.644,15.644,0,0,1,3.244-.283.037.037,0,0,1,.032.025.046.046,0,0,1-.028.048,4.449,4.449,0,0,0-2.656,4.38.182.182,0,0,1-.176.208ZM6.74,4.233a4.209,4.209,0,1,1,8.419,0,4.209,4.209,0,1,1-8.419,0Zm9.823,3.609a3.4,3.4,0,0,1-.483-.047.159.159,0,0,1-.106-.245A5.841,5.841,0,0,0,15.889.939a.106.106,0,0,1-.016-.111.13.13,0,0,1,.083-.049,3.507,3.507,0,0,1,.708-.073A3.576,3.576,0,0,1,20.088,5.22a3.51,3.51,0,0,1-3.429,2.623ZM1.912,5.22A3.576,3.576,0,0,1,5.336.706a3.53,3.53,0,0,1,.709.073.135.135,0,0,1,.082.049.1.1,0,0,1-.016.11A5.84,5.84,0,0,0,6.027,7.55a.159.159,0,0,1-.107.245,3.281,3.281,0,0,1-.483.047h-.1A3.512,3.512,0,0,1,1.912,5.22Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(1 4)'>\n      <path\n        d='M6.361,0C2.911,0,0,.564,0,2.739S2.93,5.46,6.361,5.46c3.45,0,6.361-.564,6.361-2.739S9.792,0,6.361,0'\n        transform='translate(4.588 10.54)'\n        fill={color}\n      />\n      <path\n        d='M4.209,8.467A4.207,4.207,0,0,0,8.419,4.234,4.209,4.209,0,1,0,0,4.234,4.207,4.207,0,0,0,4.209,8.467'\n        transform='translate(6.74 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.225,4.513A3.574,3.574,0,0,0,.8,0,3.587,3.587,0,0,0,.092.073.136.136,0,0,0,.01.122a.1.1,0,0,0,.017.11A5.807,5.807,0,0,1,1.094,3.6,5.762,5.762,0,0,1,.11,6.844a.158.158,0,0,0,.107.244A3.282,3.282,0,0,0,.7,7.135,3.513,3.513,0,0,0,4.225,4.513'\n        transform='translate(15.863 0.707)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.407,1.59A2.755,2.755,0,0,0,3.276.286,15.555,15.555,0,0,0,.033,0,.037.037,0,0,0,0,.027.046.046,0,0,0,.029.075,4.451,4.451,0,0,1,2.684,4.456a.181.181,0,0,0,.2.205c.577-.083,2.06-.4,2.521-1.4a1.922,1.922,0,0,0,0-1.67'\n        transform='translate(16.402 9.227)'\n        fill={color}\n      />\n      <path\n        d='M4.252.073A3.514,3.514,0,0,0,3.543,0,3.573,3.573,0,0,0,.12,4.513,3.511,3.511,0,0,0,3.644,7.135a3.4,3.4,0,0,0,.484-.047.158.158,0,0,0,.107-.244A5.841,5.841,0,0,1,4.318.232a.1.1,0,0,0,.016-.11.129.129,0,0,0-.082-.05'\n        transform='translate(1.793 0.707)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M2.322.285a2.753,2.753,0,0,0-2.13,1.3,1.918,1.918,0,0,0,0,1.671c.46,1,1.944,1.319,2.521,1.4a.18.18,0,0,0,.2-.205A4.45,4.45,0,0,1,5.569.075.047.047,0,0,0,5.6.027.034.034,0,0,0,5.566,0,15.517,15.517,0,0,0,2.322.285'\n        transform='translate(0 9.228)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(1 3.5)'>\n      <path\n        d='M0,5.8A2.9,2.9,0,1,0,0,0'\n        transform='translate(16.595 1.629)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A9.435,9.435,0,0,1,1.423.206a2.337,2.337,0,0,1,1.712.978,1.381,1.381,0,0,1,0,1.184,2.361,2.361,0,0,1-1.712.984'\n        transform='translate(17.929 10.585)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.9,5.8A2.9,2.9,0,1,1,2.9,0'\n        transform='translate(2.388 1.629)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.268,0A9.435,9.435,0,0,0,1.845.206a2.334,2.334,0,0,0-1.711.978,1.375,1.375,0,0,0,0,1.184,2.358,2.358,0,0,0,1.711.984'\n        transform='translate(0.688 10.585)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.021,0c3.247,0,6.021.491,6.021,2.458S9.286,4.933,6.021,4.933C2.773,4.933,0,4.441,0,2.475S2.756,0,6.021,0Z'\n        transform='translate(4.917 11.21)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.858,7.717A3.859,3.859,0,1,1,7.716,3.858,3.845,3.845,0,0,1,3.858,7.717Z'\n        transform='translate(7.08 0.688)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(1 3.5)'>\n      <path\n        d='M10.308,16.3a.694.694,0,0,1,.692-.7c2.443,0,5.356-.313,5.356-1.8,0-1.186-1.8-1.786-5.356-1.786-2.443,0-5.355.312-5.355,1.8,0,.332.1.76.853,1.132a5.118,5.118,0,0,0,1.167.381A.7.7,0,0,1,7.377,16.7a6.575,6.575,0,0,1-1.489-.491,2.574,2.574,0,0,1-1.628-2.383c0-3.2,5.072-3.2,6.739-3.2,1.844,0,6.74,0,6.74,3.179C17.74,17,12.668,17,11,17A.7.7,0,0,1,10.308,16.3Zm8.467-2.085a.7.7,0,0,1,.539-.823c.944-.2,1.177-.492,1.233-.611a.693.693,0,0,0,0-.6c-.118-.25-.577-.476-1.229-.606a9.063,9.063,0,0,0-1.341-.2A.7.7,0,0,1,18.069,10a10.223,10.223,0,0,1,1.534.221A2.855,2.855,0,0,1,21.8,11.588a2.085,2.085,0,0,1,0,1.8,2.891,2.891,0,0,1-2.2,1.376.621.621,0,0,1-.14.015A.694.694,0,0,1,18.775,14.218Zm-16.362.535A2.892,2.892,0,0,1,.2,13.374a2.091,2.091,0,0,1,0-1.8A2.865,2.865,0,0,1,2.417,10.2a10.04,10.04,0,0,1,1.52-.219.7.7,0,0,1,.094,1.389,8.737,8.737,0,0,0-1.328.193c-.671.133-1.13.359-1.25.61a.707.707,0,0,0,0,.6c.058.12.29.418,1.238.614a.7.7,0,0,1-.139,1.377A.74.74,0,0,1,2.413,14.754ZM8.191,8.222a.7.7,0,0,1-.122-.977.688.688,0,0,1,.972-.122A3.156,3.156,0,0,0,11,7.793a3.2,3.2,0,1,0-3.184-3.2.692.692,0,1,1-1.384,0A4.568,4.568,0,1,1,11,9.185,4.517,4.517,0,0,1,8.191,8.222Zm7.8-.714a.694.694,0,0,1,.692-.7,2.234,2.234,0,0,0,0-4.468.7.7,0,0,1,0-1.392,3.627,3.627,0,0,1,0,7.253A.694.694,0,0,1,15.991,7.508ZM1.714,4.548A3.629,3.629,0,0,1,5.328.913a.7.7,0,0,1,0,1.392,2.242,2.242,0,0,0,0,4.484.7.7,0,0,1,0,1.392A3.628,3.628,0,0,1,1.714,4.548Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(1 3.5)'>\n      <path\n        d='M0,5.8A2.9,2.9,0,1,0,0,0'\n        transform='translate(16.595 1.629)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0A9.435,9.435,0,0,1,1.423.206a2.337,2.337,0,0,1,1.712.978,1.381,1.381,0,0,1,0,1.184,2.361,2.361,0,0,1-1.712.984'\n        transform='translate(17.929 10.585)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.9,5.8A2.9,2.9,0,1,1,2.9,0'\n        transform='translate(2.388 1.629)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.268,0A9.435,9.435,0,0,0,1.845.206a2.334,2.334,0,0,0-1.711.978,1.375,1.375,0,0,0,0,1.184,2.358,2.358,0,0,0,1.711.984'\n        transform='translate(0.688 10.585)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.021,0c3.247,0,6.021.491,6.021,2.458S9.286,4.933,6.021,4.933C2.773,4.933,0,4.441,0,2.475S2.756,0,6.021,0Z'\n        transform='translate(4.917 11.21)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.858,7.717A3.859,3.859,0,1,1,7.716,3.858,3.845,3.845,0,0,1,3.858,7.717Z'\n        transform='translate(7.08 0.688)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(1 3)'>\n      <path\n        d='M6.006,6.122C2.767,6.122,0,5.632,0,3.67S2.749,0,6.006,0c3.239,0,6.006,1.692,6.006,3.653S9.263,6.122,6.006,6.122Z'\n        transform='translate(4.966 11.246)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.85,7.7a3.837,3.837,0,1,0-.027,0Z'\n        transform='translate(7.122 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.166,5.643a2.9,2.9,0,0,0,2.149-2.8A2.9,2.9,0,0,0,0,0'\n        transform='translate(17.196 1.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0C1.754,0,3.252,1.189,3.252,2.251a1.64,1.64,0,0,1-1.3,1.49'\n        transform='translate(17.943 10.544)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.15,5.643A2.9,2.9,0,0,1,2.315,0'\n        transform='translate(2.434 1.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.252,0C1.5,0,0,1.189,0,2.251a1.64,1.64,0,0,0,1.3,1.49'\n        transform='translate(0.75 10.544)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPeople.displayName = 'IconlyPeople'\nPeople.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(People)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Login = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M9.376,20a4.522,4.522,0,0,1-4.586-4.43v-4.8H.781a.77.77,0,1,1,0-1.541H4.791V4.45A4.534,4.534,0,0,1,9.386,0h5.039A4.521,4.521,0,0,1,19,4.44V15.56A4.519,4.519,0,0,1,14.4,20Zm1.817-9.229-1.652,1.6a.757.757,0,0,0,0,1.091.831.831,0,0,0,1.126,0l3.015-2.911a.744.744,0,0,0,0-1.09L10.667,6.55a.816.816,0,0,0-1.126,0,.756.756,0,0,0,0,1.09l1.652,1.59h-6.4v1.54Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M0,4.446A4.526,4.526,0,0,1,4.591,0H9.624A4.515,4.515,0,0,1,14.2,4.436V15.552A4.526,4.526,0,0,1,9.613,20H4.581A4.517,4.517,0,0,1,0,15.562V4.446Z'\n        transform='translate(4.796)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M13.537,3.134,10.569.225a.79.79,0,0,0-1.106,0,.762.762,0,0,0,0,1.089l1.625,1.593H.782a.77.77,0,1,0,0,1.54H11.091L9.465,6.043a.762.762,0,0,0,0,1.089.79.79,0,0,0,1.106,0l2.968-2.909a.761.761,0,0,0,0-1.091'\n        transform='translate(0 6.32)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(0.771 9.522)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(9.885 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942'\n        transform='translate(5.504 0.772)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M9.31,20A4.532,4.532,0,0,1,4.7,15.563v-.941a.8.8,0,0,1,1.6,0v.941a2.96,2.96,0,0,0,3.01,2.9h5.067A2.969,2.969,0,0,0,17.4,15.553a.8.8,0,0,1,1.6,0A4.543,4.543,0,0,1,14.377,20Zm-.039-6.547a.774.774,0,0,1,0-1.089l1.592-1.593H.766a.77.77,0,0,1,0-1.541H12.722a.766.766,0,0,1,.708.477.774.774,0,0,1-.167.84l-2.908,2.908a.765.765,0,0,1-1.084,0Zm8.127-1.4V4.437a2.959,2.959,0,0,0-3.01-2.9H9.32A2.969,2.969,0,0,0,6.3,4.447v.931a.8.8,0,0,1-1.6,0V4.447A4.543,4.543,0,0,1,9.32,0h5.067A4.533,4.533,0,0,1,19,4.437v7.614a.8.8,0,0,1-1.6,0ZM10.007,8.366l-.732-.726A.773.773,0,0,1,9.269,6.55a.763.763,0,0,1,1.084-.006l.734.728a.771.771,0,0,1,0,1.088.753.753,0,0,1-.544.229A.763.763,0,0,1,10.007,8.366Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(0.771 9.522)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(9.885 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942'\n        transform='translate(5.504 0.772)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(0.75 9.621)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(9.864 7.205)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.88C.33,1.3,1.67,0,7,0c7.1,0,7.1,2.31,7.1,9.25s0,9.25-7.1,9.25c-5.33,0-6.67-1.3-7-4.88'\n        transform='translate(5.259 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nLogin.displayName = 'IconlyLogin'\nLogin.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Login)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Logout = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.517,20A4.482,4.482,0,0,1,0,15.56V4.45A4.493,4.493,0,0,1,4.528,0H9.492A4.48,4.48,0,0,1,14,4.44V9.23H7.9a.77.77,0,1,0,0,1.54H14v4.78A4.493,4.493,0,0,1,9.472,20ZM16.54,13.451a.773.773,0,0,1,0-1.09l1.6-1.59H14V9.23h4.14l-1.6-1.59a.773.773,0,0,1,0-1.09.764.764,0,0,1,1.09-.01l2.92,2.91a.766.766,0,0,1,.229.55.741.741,0,0,1-.229.54l-2.92,2.911a.762.762,0,0,1-1.09,0Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,4.447A4.492,4.492,0,0,1,4.525,0H9.486A4.481,4.481,0,0,1,14,4.437V15.553A4.492,4.492,0,0,1,9.474,20H4.515A4.481,4.481,0,0,1,0,15.563V4.447Z'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M12.98,3.134,10.135.225a.736.736,0,0,0-1.061,0,.785.785,0,0,0,0,1.089l1.559,1.593H.75a.77.77,0,0,0,0,1.54h9.885L9.076,6.042a.785.785,0,0,0,0,1.089.735.735,0,0,0,1.061,0L12.98,4.225a.784.784,0,0,0,0-1.091'\n        transform='translate(6.799 6.321)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943'\n        transform='translate(0.772 0.771)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.768 9.521)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.915,0,5.831'\n        transform='translate(16.881 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M4.33,19A4.284,4.284,0,0,1,0,14.775a.74.74,0,0,1,.75-.731.74.74,0,0,1,.75.731A2.8,2.8,0,0,0,4.33,17.537H9.077A2.79,2.79,0,0,0,11.9,14.785v-.894a.75.75,0,0,1,1.5,0v.894A4.273,4.273,0,0,1,9.077,19Zm11.543-6.219a.719.719,0,0,1,0-1.035l1.56-1.514H7.549a.732.732,0,1,1,0-1.464h11.7a.75.75,0,0,1,.693.453.721.721,0,0,1-.164.8l-2.846,2.764a.763.763,0,0,1-1.06,0ZM0,11.449V4.215A4.274,4.274,0,0,1,4.322,0H9.068A4.284,4.284,0,0,1,13.4,4.225v.885a.75.75,0,0,1-1.5,0V4.225A2.8,2.8,0,0,0,9.068,1.463H4.322A2.79,2.79,0,0,0,1.5,4.215v7.234a.742.742,0,0,1-.751.732A.741.741,0,0,1,0,11.449Zm16.594-3.5-.718-.692a.718.718,0,0,1,0-1.034.76.76,0,0,1,1.06-.005l.717.691a.719.719,0,0,1,.005,1.035.763.763,0,0,1-1.06.005Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943'\n        transform='translate(0.772 0.771)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.768 9.521)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.915,0,5.831'\n        transform='translate(16.881 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.75 9.621)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(16.864 7.205)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.88C-.33,1.3-1.67,0-7,0c-7.1,0-7.1,2.31-7.1,9.25s0,9.25,7.1,9.25c5.33,0,6.67-1.3,7-4.88'\n        transform='translate(14.36 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nLogout.displayName = 'IconlyLogout'\nLogout.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Logout)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Download = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M9.23,4.791V.782a.769.769,0,0,1,1.533-.1l.007.1V4.791h4.78A4.527,4.527,0,0,1,20,9.17l0,.216v5.039A4.53,4.53,0,0,1,15.768,19l-.208,0H4.44A4.511,4.511,0,0,1,0,14.621L0,14.4V9.376A4.532,4.532,0,0,1,4.222,4.8l.208-.005h4.8v6.4L7.63,9.541a.755.755,0,0,0-1.09,0,.835.835,0,0,0-.08,1.027l.08.1,2.91,3.015a.746.746,0,0,0,1.015.071l.075-.071,2.91-3.015a.816.816,0,0,0,0-1.126.755.755,0,0,0-1-.077l-.086.077-1.59,1.652v-6.4Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M0,4.446A4.526,4.526,0,0,1,4.591,0H9.624A4.515,4.515,0,0,1,14.2,4.436V15.552A4.526,4.526,0,0,1,9.613,20H4.581A4.517,4.517,0,0,1,0,15.562V4.446Z'\n        transform='translate(20 4.796) rotate(90)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M13.537,3.134,10.569.225a.79.79,0,0,0-1.106,0,.762.762,0,0,0,0,1.089l1.625,1.593H.782a.77.77,0,1,0,0,1.54H11.091L9.465,6.043a.762.762,0,0,0,0,1.089.79.79,0,0,0,1.106,0l2.968-2.909a.761.761,0,0,0,0-1.091'\n        transform='translate(13.68 0) rotate(90)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(10.622 0.395) rotate(90)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(13.038 9.508) rotate(90)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942'\n        transform='translate(19.372 5.128) rotate(90)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M7.949,19a.8.8,0,0,1,0-1.6h7.614a2.958,2.958,0,0,0,2.9-3.01V9.32A2.969,2.969,0,0,0,15.553,6.3h-.931a.8.8,0,0,1,0-1.6h.931A4.542,4.542,0,0,1,20,9.32v5.067A4.533,4.533,0,0,1,15.563,19ZM0,14.377V9.31A4.532,4.532,0,0,1,4.437,4.7h.94a.8.8,0,0,1,0,1.6h-.94a2.96,2.96,0,0,0-2.9,3.01v5.067A2.969,2.969,0,0,0,4.447,17.4a.8.8,0,0,1,0,1.6A4.543,4.543,0,0,1,0,14.377Zm9.454-1.114L6.546,10.354a.765.765,0,0,1,0-1.084.774.774,0,0,1,1.089,0l1.593,1.592V.766a.771.771,0,0,1,1.542,0V12.722a.77.77,0,0,1-.77.766A.778.778,0,0,1,9.454,13.262Zm2.187-2.172a.754.754,0,0,1-.229-.544.763.763,0,0,1,.223-.54l.727-.732a.773.773,0,0,1,1.089-.006.763.763,0,0,1,.005,1.084l-.728.734a.77.77,0,0,1-1.087,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(10.622 0.395) rotate(90)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(13.038 9.508) rotate(90)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942'\n        transform='translate(19.372 5.128) rotate(90)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.5,12.041V0'\n        transform='translate(9.379 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.832,0,2.916,2.928,0,0'\n        transform='translate(6.963 9.864)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M13.62,0C17.2.33,18.5,1.67,18.5,7c0,7.1-2.311,7.1-9.25,7.1S0,14.1,0,7C0,1.67,1.3.33,4.88,0'\n        transform='translate(0.75 5.259)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDownload.displayName = 'IconlyDownload'\nDownload.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Download)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Upload = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.45,20.78A4.489,4.489,0,0,1,0,16.465l0-.213V11.288a4.485,4.485,0,0,1,4.231-4.5l.209,0H9.23v6.1a.769.769,0,0,0,1.533.107l.007-.107v-6.1h4.78A4.489,4.489,0,0,1,20,11.094l0,.213v4.955a4.487,4.487,0,0,1-4.231,4.513l-.209,0Zm4.781-14V2.64L7.64,4.24a.773.773,0,0,1-1.09,0,.763.763,0,0,1-.085-1L6.54,3.15,9.45.23A.764.764,0,0,1,10,0a.754.754,0,0,1,.45.149l.09.082,2.911,2.92a.771.771,0,0,1-1,1.165l-.085-.075-1.59-1.6V6.78Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,4.447A4.492,4.492,0,0,1,4.525,0H9.486A4.481,4.481,0,0,1,14,4.437V15.553A4.492,4.492,0,0,1,9.474,20H4.515A4.481,4.481,0,0,1,0,15.563V4.447Z'\n        transform='translate(0 20) rotate(-90)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M12.98,3.134,10.135.225a.736.736,0,0,0-1.061,0,.785.785,0,0,0,0,1.089l1.559,1.593H.75a.77.77,0,0,0,0,1.54h9.885L9.076,6.042a.785.785,0,0,0,0,1.089.735.735,0,0,0,1.061,0L12.98,4.225a.784.784,0,0,0,0-1.091'\n        transform='translate(6.321 13.201) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943'\n        transform='translate(0.772 0.771)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.768 9.521)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.915,0,5.831'\n        transform='translate(16.881 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 2)'>\n      <path\n        d='M14.045,19.25a.74.74,0,0,1,.731-.75,2.8,2.8,0,0,0,2.761-2.831V10.923A2.789,2.789,0,0,0,14.785,8.1h-.894a.75.75,0,0,1,0-1.5h.894A4.274,4.274,0,0,1,19,10.923V15.67A4.284,4.284,0,0,1,14.775,20,.74.74,0,0,1,14.045,19.25ZM4.215,20A4.273,4.273,0,0,1,0,15.679V10.932A4.284,4.284,0,0,1,4.225,6.6h.885a.75.75,0,0,1,0,1.5H4.225a2.8,2.8,0,0,0-2.761,2.831v4.747A2.79,2.79,0,0,0,4.215,18.5h7.234a.75.75,0,0,1,0,1.5Zm4.553-7.549V.75A.75.75,0,0,1,9.22.057a.721.721,0,0,1,.8.164l2.764,2.846a.763.763,0,0,1,0,1.06.719.719,0,0,1-1.035,0L10.232,2.566v9.885a.732.732,0,1,1-1.464,0ZM6.223,4.128a.76.76,0,0,1-.005-1.06l.691-.716a.719.719,0,0,1,1.035-.006.763.763,0,0,1,.005,1.06l-.692.718a.718.718,0,0,1-1.034,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943'\n        transform='translate(0.772 0.771)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.768 9.521)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.915,0,5.831'\n        transform='translate(16.881 7.106)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M12.041.5H0'\n        transform='translate(7.75 9.621)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,2.928,2.916,0,5.832'\n        transform='translate(16.864 7.205)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.88C-.33,1.3-1.67,0-7,0c-7.1,0-7.1,2.31-7.1,9.25s0,9.25,7.1,9.25c5.33,0,6.67-1.3,7-4.88'\n        transform='translate(14.36 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nUpload.displayName = 'IconlyUpload'\nUpload.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Upload)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Voice = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.532,19.043V17.118A8.443,8.443,0,0,1,0,8.783a.962.962,0,0,1,.968-.957.963.963,0,0,1,.969.957,6.563,6.563,0,0,0,13.125,0,.969.969,0,0,1,1.938,0,8.443,8.443,0,0,1-7.531,8.335v1.925a.968.968,0,0,1-1.937,0Zm.793-5.826a4.326,4.326,0,0,1-4.351-4.3V4.3A4.324,4.324,0,0,1,8.325,0h.35a4.325,4.325,0,0,1,4.352,4.3V8.92a4.326,4.326,0,0,1-4.352,4.3Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M16.031,0a.962.962,0,0,0-.969.957,6.563,6.563,0,0,1-13.125,0A.962.962,0,0,0,.969,0,.962.962,0,0,0,0,.957,8.443,8.443,0,0,0,7.532,9.293v1.925a.969.969,0,0,0,1.937,0V9.293A8.443,8.443,0,0,0,17,.957.962.962,0,0,0,16.031,0'\n        transform='translate(0 7.826)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.351,13.217H4.7a4.325,4.325,0,0,0,4.351-4.3V4.3A4.324,4.324,0,0,0,4.7,0H4.351A4.324,4.324,0,0,0,0,4.3V8.921a4.325,4.325,0,0,0,4.351,4.3'\n        transform='translate(3.973 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M0,0A7.4,7.4,0,1,0,14.808,0'\n        transform='translate(0.714 8.932)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.476,2.81V0'\n        transform='translate(7.642 16.336)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.661,3.661,0,0,1,3.66,3.66V8.21A3.66,3.66,0,0,1,3.912,11.87Z'\n        transform='translate(4.332 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M7.3,19.28V16.45a.712.712,0,0,1,.7-.72,6.673,6.673,0,0,0,6.593-6.737.7.7,0,1,1,1.408,0,8.118,8.118,0,0,1-7.3,8.14V19.28a.7.7,0,1,1-1.408,0ZM4.455,16.324A8.15,8.15,0,0,1,0,8.994a.712.712,0,0,1,.7-.72.713.713,0,0,1,.7.72A6.72,6.72,0,0,0,5.08,15.036.726.726,0,0,1,5.4,16a.7.7,0,0,1-.631.4A.675.675,0,0,1,4.455,16.324Zm3.42-2.932a4.362,4.362,0,0,1-4.309-4.4V4.4A4.362,4.362,0,0,1,7.875,0h.248a4.363,4.363,0,0,1,4.311,4.4V8.987a4.363,4.363,0,0,1-4.311,4.4ZM4.973,4.4V8.987a2.938,2.938,0,0,0,2.9,2.965h.248a2.938,2.938,0,0,0,2.9-2.965V4.4a2.938,2.938,0,0,0-2.9-2.965H7.875A2.938,2.938,0,0,0,4.973,4.4Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M0,0A7.4,7.4,0,1,0,14.808,0'\n        transform='translate(0.714 8.932)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.476,2.81V0'\n        transform='translate(7.642 16.336)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.661,3.661,0,0,1,3.66,3.66V8.21A3.66,3.66,0,0,1,3.912,11.87Z'\n        transform='translate(4.332 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(4.9 2.5)'>\n      <path\n        d='M0,0A5.669,5.669,0,0,0,5.669,5.669,5.669,5.669,0,0,0,11.339,0'\n        transform='translate(1.465 11.178)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M11.339,7.923V5.669A5.669,5.669,0,0,0,0,5.669V7.923'\n        transform='translate(1.465 0)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,2.152V0'\n        transform='translate(6.634 16.848)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.5H14.268'\n        transform='translate(0 10.678)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVoice.displayName = 'IconlyVoice'\nVoice.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Voice)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Voice2 = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.532,19.043V17.118A8.443,8.443,0,0,1,0,8.783a.962.962,0,0,1,.968-.957.963.963,0,0,1,.969.957,6.563,6.563,0,0,0,13.125,0,.969.969,0,0,1,1.938,0,8.443,8.443,0,0,1-7.531,8.335v1.925a.968.968,0,0,1-1.937,0Zm.793-5.827a4.324,4.324,0,0,1-4.351-4.3V4.3A4.324,4.324,0,0,1,8.325,0h.35a4.345,4.345,0,0,1,4.189,3.131.388.388,0,0,1-.376.493H11.356a.616.616,0,0,0-.62.612h0a.616.616,0,0,0,.62.612H12.4a.618.618,0,1,1,0,1.236H11.356a.613.613,0,1,0,0,1.226H12.4a.618.618,0,1,1,0,1.236H11.356a.612.612,0,1,0,0,1.224h1.077a.387.387,0,0,1,.372.506,4.347,4.347,0,0,1-4.13,2.94Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M4.351,13.217H4.7a4.348,4.348,0,0,0,4.131-2.941.387.387,0,0,0-.372-.505H7.383a.612.612,0,1,1,0-1.225H8.427a.618.618,0,1,0,0-1.236H7.383a.613.613,0,1,1,0-1.225H8.427a.618.618,0,1,0,0-1.236H7.383a.613.613,0,1,1,0-1.225H8.515a.388.388,0,0,0,.376-.493A4.345,4.345,0,0,0,4.7,0h-.35A4.324,4.324,0,0,0,0,4.3V8.92a4.324,4.324,0,0,0,4.351,4.3'\n        transform='translate(3.974 0)'\n        fill={color}\n      />\n      <path\n        d='M16.031,0a.962.962,0,0,0-.969.957,6.563,6.563,0,0,1-13.125,0A.962.962,0,0,0,.969,0,.962.962,0,0,0,0,.957,8.443,8.443,0,0,0,7.532,9.293v1.925a.969.969,0,0,0,1.937,0V9.293A8.443,8.443,0,0,0,17,.957.962.962,0,0,0,16.031,0'\n        transform='translate(0 7.826)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M0,0A7.4,7.4,0,0,0,7.4,7.4a7.4,7.4,0,0,0,7.4-7.4'\n        transform='translate(0.714 8.932)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.476,2.81V0'\n        transform='translate(7.642 16.336)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.66,3.66,0,0,1,3.66,3.66V8.21A3.659,3.659,0,0,1,3.912,11.87Z'\n        transform='translate(4.332 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.476H1.9'\n        transform='translate(10.002 4.401)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.476H2.855'\n        transform='translate(9.049 7.572)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 2)'>\n      <path\n        d='M7.3,19.28V16.45a.711.711,0,0,1,.7-.72,6.674,6.674,0,0,0,6.593-6.736.7.7,0,1,1,1.408,0,8.116,8.116,0,0,1-7.3,8.138V19.28a.7.7,0,1,1-1.408,0ZM4.455,16.324A8.15,8.15,0,0,1,0,8.994a.712.712,0,0,1,.7-.719.713.713,0,0,1,.7.719A6.718,6.718,0,0,0,5.08,15.036.728.728,0,0,1,5.4,16a.7.7,0,0,1-.633.4A.68.68,0,0,1,4.455,16.324Zm3.42-2.933a4.362,4.362,0,0,1-4.31-4.4V4.4A4.362,4.362,0,0,1,7.875,0h.249a4.362,4.362,0,0,1,4.31,4.4v.509a.711.711,0,0,1-.7.718H9.855a.719.719,0,0,1,0-1.437H11.02a2.933,2.933,0,0,0-2.9-2.754H7.875A2.937,2.937,0,0,0,4.973,4.4V8.987a2.937,2.937,0,0,0,2.9,2.965h.249a2.938,2.938,0,0,0,2.9-2.965V8.824H8.916a.72.72,0,0,1,0-1.439h2.814a.712.712,0,0,1,.7.72v.883a4.362,4.362,0,0,1-4.31,4.4Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(0.75 0.75)'>\n      <g transform='translate(-0.714 -0.714)'>\n        <path\n          d='M0,0A7.4,7.4,0,0,0,7.4,7.4a7.4,7.4,0,0,0,7.4-7.4'\n          transform='translate(0.714 8.932)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n        <path\n          d='M.476,2.81V0'\n          transform='translate(7.642 16.336)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n        <path\n          d='M3.66,11.87A3.66,3.66,0,0,1,0,8.211V3.66A3.66,3.66,0,0,1,3.66,0h.252a3.66,3.66,0,0,1,3.66,3.66v4.55a3.659,3.659,0,0,1-3.66,3.659Z'\n          transform='translate(4.332 0.714)'\n          fill='none'\n          stroke={color}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n        />\n        <path\n          d='M0,.476H1.9'\n          transform='translate(10.001 4.401)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n        <path\n          d='M0,.476H2.855'\n          transform='translate(9.049 7.572)'\n          fill='none'\n          stroke={secondaryColor}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n        />\n      </g>\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(4.5 2.5)'>\n      <path\n        d='M0,0A5.386,5.386,0,0,0,5.386,5.386,5.385,5.385,0,0,0,10.772,0'\n        transform='translate(2.104 11.332)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M10.772,7.527V5.386A5.386,5.386,0,0,0,0,5.386V7.527'\n        transform='translate(2.104 0.713)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.475,2.044V0'\n        transform='translate(7.015 16.718)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.475H13.556'\n        transform='translate(0.712 10.857)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.475H2.985'\n        transform='translate(5.997 7.477)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1,.475H0'\n        transform='translate(6.988 4.707)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nVoice2.displayName = 'IconlyVoice2'\nVoice2.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Voice2)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Delete = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M5.132,19.961A2.916,2.916,0,0,1,2.2,17.134c-.313-2.847-.836-9.577-.846-9.645a.791.791,0,0,1,.191-.558A.708.708,0,0,1,2.068,6.7H15.939a.724.724,0,0,1,.523.234.745.745,0,0,1,.181.558c0,.068-.533,6.809-.837,9.645a2.918,2.918,0,0,1-3,2.827C11.515,19.99,10.249,20,9,20,7.681,20,6.387,19.99,5.132,19.961ZM.714,5.091A.73.73,0,0,1,0,4.357v-.38a.724.724,0,0,1,.714-.734H3.63A1.282,1.282,0,0,0,4.871,2.228l.152-.682A1.989,1.989,0,0,1,6.935,0h4.129a1.987,1.987,0,0,1,1.9,1.5l.163.73a1.28,1.28,0,0,0,1.241,1.016h2.916A.723.723,0,0,1,18,3.977v.38a.73.73,0,0,1-.713.734Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M15.289.792c0,.068-.533,6.809-.837,9.646a2.918,2.918,0,0,1-3,2.827c-1.293.029-2.56.039-3.806.039-1.323,0-2.616-.01-3.872-.039A2.917,2.917,0,0,1,.847,10.438C.534,7.591.011.86,0,.792A.794.794,0,0,1,.192.234.71.71,0,0,1,.715,0H14.585a.73.73,0,0,1,.523.234.748.748,0,0,1,.181.558'\n        transform='translate(1.354 6.696)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M18,3.977a.722.722,0,0,0-.713-.733H14.371A1.281,1.281,0,0,1,13.13,2.227L12.967,1.5a1.985,1.985,0,0,0-1.9-1.5H6.936A1.988,1.988,0,0,0,5.023,1.546l-.153.682A1.283,1.283,0,0,1,3.63,3.244H.714A.722.722,0,0,0,0,3.977v.38a.729.729,0,0,0,.714.733H17.287A.729.729,0,0,0,18,4.357Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M14.191,0s-.543,6.735-.858,9.572a2.238,2.238,0,0,1-2.358,2.174c-2.609.047-5.221.05-7.829-.005A2.214,2.214,0,0,1,.857,9.579C.54,6.717,0,0,0,0'\n        transform='translate(2.134 7.468)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M16.958.5H0'\n        transform='translate(0.75 3.74)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M10.423,3.489A1.648,1.648,0,0,1,8.808,2.165L8.565.949A1.28,1.28,0,0,0,7.328,0H3.1A1.28,1.28,0,0,0,1.858.949L1.615,2.165A1.648,1.648,0,0,1,0,3.489'\n        transform='translate(4.018 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M9.191,20a.732.732,0,0,1,0-1.463h0c1.518,0,2.064-.008,3.583-.035a1.494,1.494,0,0,0,1.608-1.526c.3-2.8.832-9.5.836-9.571a.714.714,0,1,1,1.422.118c0,.067-.534,6.792-.84,9.613a2.917,2.917,0,0,1-3,2.828c-1.286.024-1.6.037-2.884.037Zm-4.065-.04a2.915,2.915,0,0,1-2.932-2.817C1.886,14.3,1.36,7.589,1.355,7.521a.727.727,0,0,1,.653-.788.73.73,0,0,1,.769.672c.005.067.53,6.752.836,9.574A1.475,1.475,0,0,0,5.154,18.5a.732.732,0,0,1-.014,1.462ZM.713,4.96a.732.732,0,0,1,0-1.463H3.907a.9.9,0,0,0,.878-.736l.238-1.22A1.99,1.99,0,0,1,6.932,0h4.136a1.977,1.977,0,0,1,1.9,1.494.735.735,0,0,1-.5.9.712.712,0,0,1-.874-.518.542.542,0,0,0-.52-.409H6.932a.542.542,0,0,0-.52.409L6.185,3.046a2.5,2.5,0,0,1-.139.451h11.24a.732.732,0,0,1,0,1.463Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 2)'>\n      <path\n        d='M14.191,0s-.543,6.735-.858,9.572a2.238,2.238,0,0,1-2.358,2.174c-2.609.047-5.221.05-7.829-.005A2.214,2.214,0,0,1,.857,9.579C.54,6.717,0,0,0,0'\n        transform='translate(2.134 7.468)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M16.958.5H0'\n        transform='translate(0.75 3.74)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M10.423,3.489A1.648,1.648,0,0,1,8.808,2.165L8.565.949A1.28,1.28,0,0,0,7.328,0H3.1A1.28,1.28,0,0,0,1.858.949L1.615,2.165A1.648,1.648,0,0,1,0,3.489'\n        transform='translate(4.018 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M13.26,0c0,8.019,1.154,11.644-6.61,11.644S.064,8.019.064,0'\n        transform='translate(2.129 7.554)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M16.15.476H0'\n        transform='translate(0.715 4.004)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6.874,3.766A3.207,3.207,0,0,0,3.448,0,3.207,3.207,0,0,0,.024,3.766'\n        transform='translate(5.341 0.714)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nDelete.displayName = 'IconlyVoice'\nDelete.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Delete)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Edit = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M11.28,18a1.023,1.023,0,0,1,0-2.047h5.71a1.023,1.023,0,0,1,0,2.047ZM.848,17.576l-.8-3.451a2.132,2.132,0,0,1,.4-1.8L6.684,4.268a.313.313,0,0,1,.424-.054L9.73,6.3a.846.846,0,0,0,.647.183.945.945,0,0,0,.817-1.043,1.053,1.053,0,0,0-.329-.635L8.319,2.763a.378.378,0,0,1-.064-.526L9.241.957A2.584,2.584,0,0,1,13.03.7l1.475,1.172a3.062,3.062,0,0,1,1.146,1.752,2.4,2.4,0,0,1-.488,2.042L6.377,17.028a2.105,2.105,0,0,1-1.634.817l-3.5.042A.4.4,0,0,1,.848,17.576Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M6.7,0H1.007A1.017,1.017,0,0,0,0,1.023,1.016,1.016,0,0,0,1.007,2.047H6.7A1.016,1.016,0,0,0,7.709,1.023,1.017,1.017,0,0,0,6.7,0'\n        transform='translate(10.291 15.953)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7.309.067l5.4,4.36a.31.31,0,0,1,.051.429l-6.4,8.335a2.1,2.1,0,0,1-1.63.817l-3.492.043a.4.4,0,0,1-.392-.312L.052,10.289a2.137,2.137,0,0,1,.4-1.8L6.883.118A.3.3,0,0,1,7.309.067'\n        transform='translate(0 3.837)'\n        fill={color}\n      />\n      <path\n        d='M6.977,5.665l-1.04,1.3a.3.3,0,0,1-.423.048c-1.265-1.023-4.5-3.65-5.4-4.377A.308.308,0,0,1,.069,2.2l1-1.246A2.572,2.572,0,0,1,4.85.7L6.321,1.871A3.066,3.066,0,0,1,7.464,3.623a2.406,2.406,0,0,1-.487,2.042'\n        transform='translate(8.144 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 3.5)'>\n      <path\n        d='M0,.5H6.377'\n        transform='translate(10.2 15.898)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M8.6.706A1.947,1.947,0,0,1,11.473.553l1.39,1.09A1.946,1.946,0,0,1,13.4,4.464L5.11,15.039a1.481,1.481,0,0,1-1.15.568l-3.2.041L.039,12.533a1.486,1.486,0,0,1,.277-1.252Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,4.794,3.758'\n        transform='translate(7.803 3.436)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M10.6,18a.788.788,0,0,1,0-1.575h6.624a.788.788,0,0,1,0,1.575ZM1.572,18a.782.782,0,0,1-.76-.609l-.752-3.27A2.355,2.355,0,0,1,.5,12.142l1.13-1.458a.772.772,0,0,1,1.094-.133.792.792,0,0,1,.131,1.105l-1.13,1.458a.773.773,0,0,0-.142.651l.61,2.652,2.7-.034a.755.755,0,0,0,.59-.3l8.61-11.1a1.063,1.063,0,0,0,.228-.907,1.732,1.732,0,0,0-.652-.949L12.218,1.983a1.256,1.256,0,0,0-1.886.028L9.194,3.477,11,4.94a.792.792,0,0,1,.121,1.106.771.771,0,0,1-1.1.122L8.233,4.717l-2.946,3.8a.773.773,0,0,1-1.1.133.8.8,0,0,1-.131-1.106L9.105,1.039a2.779,2.779,0,0,1,4.073-.3l1.444,1.145A3.3,3.3,0,0,1,15.835,3.74a2.65,2.65,0,0,1-.523,2.214L6.7,17.059a2.3,2.3,0,0,1-1.8.9L1.582,18Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 3.5)'>\n      <path\n        d='M0,.5H6.377'\n        transform='translate(10.2 15.898)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M8.6.706A1.947,1.947,0,0,1,11.473.553l1.39,1.09A1.946,1.946,0,0,1,13.4,4.464L5.11,15.039a1.481,1.481,0,0,1-1.15.568l-3.2.041L.039,12.533a1.486,1.486,0,0,1,.277-1.252Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,4.794,3.758'\n        transform='translate(7.803 3.436)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.5 3.5)'>\n      <path\n        d='M0,.5H6.377'\n        transform='translate(9.835 15.508)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M11.808.609h0a3.042,3.042,0,0,0-4.258.607l-6.752,9C-.941,12.529.7,15.4.7,15.4s3.244.746,4.958-1.539l6.752-8.995A3.042,3.042,0,0,0,11.808.609Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,4.864,3.651'\n        transform='translate(7.004 3.711)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nEdit.displayName = 'IconlyEdit'\nEdit.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Edit)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst EditSquare = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M15,20c-.11,0-.222,0-.332-.01H5.335C5.225,20,5.112,20,5,20a5.321,5.321,0,0,1-3.6-1.4A5.371,5.371,0,0,1,.01,14.665V5.335A5.372,5.372,0,0,1,1.4,1.4,5.328,5.328,0,0,1,5,0c.11,0,.221,0,.331.01h9.33c.109-.007.219-.01.328-.01a5.317,5.317,0,0,1,3.6,1.4,5.416,5.416,0,0,1,1.4,3.937v9.33A5.4,5.4,0,0,1,18.6,18.6,5.323,5.323,0,0,1,15,20ZM10.38,6.464a.214.214,0,0,0-.15.059L5.465,11.289a1.8,1.8,0,0,0-.529,1.238L4.875,14.9a.467.467,0,0,0,.13.339.478.478,0,0,0,.34.14H7.692a1.84,1.84,0,0,0,1.289-.53L15.7,8.1a1.586,1.586,0,0,0,0-2.227l-1.3-1.3a1.58,1.58,0,0,0-2.237,0l-.67.68a.265.265,0,0,0,0,.369c.016.016,1.589,1.579,1.618,1.619a.678.678,0,0,1,.18.459.66.66,0,0,1-.659.66.626.626,0,0,1-.44-.18L10.529,6.523A.212.212,0,0,0,10.38,6.464Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.664,19.99H5.335A5.343,5.343,0,0,1,1.4,18.6,5.346,5.346,0,0,1,.01,14.665V5.335A5.345,5.345,0,0,1,1.4,1.4,5.347,5.347,0,0,1,5.335.01h9.329A5.338,5.338,0,0,1,18.6,1.4,5.372,5.372,0,0,1,19.99,5.335v9.33A5.35,5.35,0,0,1,18.6,18.6a5.347,5.347,0,0,1-3.937,1.389'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M10.555,3.9,4,10.483A1.8,1.8,0,0,1,2.746,11H.458a.463.463,0,0,1-.331-.137A.457.457,0,0,1,0,10.532L.058,8.22A1.759,1.759,0,0,1,.574,7.01L5.219,2.356a.211.211,0,0,1,.292,0L7.14,3.979a.615.615,0,0,0,.428.176.643.643,0,0,0,.643-.644.661.661,0,0,0-.175-.449c-.029-.039-1.58-1.583-1.58-1.583a.26.26,0,0,1,0-.361L7.108.454a1.538,1.538,0,0,1,2.181,0l1.266,1.268a1.551,1.551,0,0,1,0,2.176'\n        transform='translate(4.5 4.5)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.742,0H5C1.928,0,0,2.177,0,5.259v8.314c0,3.082,1.919,5.259,5,5.259h8.824c3.085,0,5-2.177,5-5.259V9.545'\n        transform='translate(0.75 0.789)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.729,8.17,8.2.7a2.385,2.385,0,0,1,3.371,0L12.79,1.914a2.383,2.383,0,0,1,0,3.371L5.281,12.795a2.171,2.171,0,0,1-1.535.636H0l.094-3.78A2.17,2.17,0,0,1,.729,8.17Z'\n        transform='translate(6.099 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,4.566,4.566'\n        transform='translate(13.165 2.602)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.658,20C2.273,20,0,17.629,0,14.1a.738.738,0,0,1,1.476,0c0,2.69,1.641,4.427,4.182,4.427h8.678c2.543,0,4.185-1.737,4.185-4.427V10.146a.737.737,0,0,1,1.474,0V14.1c0,3.529-2.273,5.9-5.659,5.9ZM6,14.658A.739.739,0,0,1,5.26,13.9l.094-3.71a2.859,2.859,0,0,1,.84-1.957L13.543.9A3.086,3.086,0,0,1,17.9.9l1.2,1.2a3.072,3.072,0,0,1,0,4.351l-7.384,7.373a2.853,2.853,0,0,1-2.03.84Zm1.24-5.379a1.389,1.389,0,0,0-.41.952l-.073,2.954H9.683a1.39,1.39,0,0,0,.987-.408l7.385-7.372a1.606,1.606,0,0,0,0-2.268l-1.2-1.2a1.61,1.61,0,0,0-2.272,0l-.606.6,1.875,1.871a.738.738,0,0,1-1.044,1.042L12.938,3.587ZM0,9.707V5.938C0,2.409,2.274.038,5.658.038H9.336a.736.736,0,1,1,0,1.472H5.658c-2.541,0-4.182,1.738-4.182,4.428V9.707A.738.738,0,0,1,0,9.707Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M8.742,0H5C1.928,0,0,2.177,0,5.259v8.314c0,3.082,1.919,5.259,5,5.259h8.824c3.085,0,5-2.177,5-5.259V9.545'\n        transform='translate(0.75 0.789)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.729,8.17,8.2.7a2.385,2.385,0,0,1,3.371,0L12.79,1.914a2.383,2.383,0,0,1,0,3.371L5.281,12.795a2.171,2.171,0,0,1-1.535.636H0l.094-3.78A2.17,2.17,0,0,1,.729,8.17Z'\n        transform='translate(6.099 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,4.566,4.566'\n        transform='translate(13.165 2.602)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M9.25,0C2.313,0,0,2.313,0,9.25S2.313,18.5,9.25,18.5s9.25-2.313,9.25-9.25'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M10.071.6h0A2.4,2.4,0,0,0,6.682.809S2.313,5.744.8,7.457s-.4,4.077-.4,4.077,2.5.793,4-.9l5.886-6.647A2.4,2.4,0,0,0,10.071.6Z'\n        transform='translate(7.457 1.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.6,3.183'\n        transform='translate(13.009 3.801)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nEditSquare.displayName = 'IconlyEditSquare'\nEditSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(EditSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Play = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20a10,10,0,1,1,10-9.994A10.008,10.008,0,0,1,10,20ZM8.861,6.03a1.338,1.338,0,0,0-.608.145,1.252,1.252,0,0,0-.541.6,6.314,6.314,0,0,0-.174.7A15.391,15.391,0,0,0,7.375,10a17.717,17.717,0,0,0,.145,2.441,1.1,1.1,0,0,1,.024.11,3.911,3.911,0,0,0,.207.768,1.21,1.21,0,0,0,1.072.656h.039a3.188,3.188,0,0,0,.9-.27,14.727,14.727,0,0,0,3.851-2.624l.058-.058a3.94,3.94,0,0,0,.27-.309,1.161,1.161,0,0,0,.231-.7,1.217,1.217,0,0,0-.251-.754l-.063-.068c-.064-.07-.162-.176-.254-.269A14.777,14.777,0,0,0,9.662,6.251,3.356,3.356,0,0,0,8.861,6.03Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10.012,10.012,0,0,1,20,10'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M7,4a1.153,1.153,0,0,1-.239.71,3.861,3.861,0,0,1-.278.311l-.06.058A15.152,15.152,0,0,1,2.456,7.728,3.475,3.475,0,0,1,1.531,8h-.04a1.254,1.254,0,0,1-1.1-.66,5.462,5.462,0,0,1-.239-.885A17.629,17.629,0,0,1,0,4,15.213,15.213,0,0,1,.169,1.458,6.381,6.381,0,0,1,.348.748,1.275,1.275,0,0,1,.9.146,1.422,1.422,0,0,1,1.531,0a3.443,3.443,0,0,1,.825.224A15.224,15.224,0,0,1,6.413,2.906c.139.136.288.3.328.34A1.21,1.21,0,0,1,7,4'\n        transform='translate(7 6)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,0A10,10,0,1,1,0,10,10,10,0,0,1,10,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.16,3.969A14.915,14.915,0,0,1,1.432,6.512a3.983,3.983,0,0,1-.664.214.5.5,0,0,1-.459-.27,5.24,5.24,0,0,1-.166-.689A16.6,16.6,0,0,1,0,3.364,15.624,15.624,0,0,1,.158.879C.186.723.268.364.292.306A.5.5,0,0,1,.518.06.494.494,0,0,1,.768,0a3.49,3.49,0,0,1,.575.178A14.782,14.782,0,0,1,5.15,2.746c.068.073.255.269.286.309a.5.5,0,0,1,.011.6C5.414,3.7,5.223,3.9,5.16,3.969Z'\n        transform='translate(7.89 6.498)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.987,19.162a.724.724,0,1,1,.582-1.325,8.558,8.558,0,1,0-3.447-2.753.724.724,0,0,1-1.164.861,9.982,9.982,0,1,1,4.028,3.217ZM8.82,13.969a1.213,1.213,0,0,1-1.067-.651,4.442,4.442,0,0,1-.229-.868l0-.014A16.433,16.433,0,0,1,7.375,10a15.607,15.607,0,0,1,.163-2.526,5.615,5.615,0,0,1,.176-.707,1.2,1.2,0,0,1,.536-.591,1.273,1.273,0,0,1,.6-.145h.018a3.176,3.176,0,0,1,.8.223A14.714,14.714,0,0,1,13.6,8.909l.079.085c.09.095.21.224.238.259a1.218,1.218,0,0,1,.257.747,1.2,1.2,0,0,1-.23.708c-.036.049-.191.219-.284.318l-.049.052A15.033,15.033,0,0,1,9.76,13.707a3.712,3.712,0,0,1-.9.262Zm.141-6.236A14.873,14.873,0,0,0,8.822,10a15.235,15.235,0,0,0,.129,2.2c.011.066.03.161.05.248l.117-.045.006,0,.076-.03a13.772,13.772,0,0,0,3.347-2.281.449.449,0,0,0,.058-.059l.005-.005A.226.226,0,0,1,12.635,10l-.007-.007-.007-.007L12.537,9.9A13.736,13.736,0,0,0,9.131,7.6L9,7.55C8.98,7.636,8.969,7.694,8.961,7.733Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,0A10,10,0,1,1,0,10,10,10,0,0,1,10,0Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.16,3.969A14.915,14.915,0,0,1,1.432,6.512a3.983,3.983,0,0,1-.664.214.5.5,0,0,1-.459-.27,5.24,5.24,0,0,1-.166-.689A16.6,16.6,0,0,1,0,3.364,15.624,15.624,0,0,1,.158.879C.186.723.268.364.292.306A.5.5,0,0,1,.518.06.494.494,0,0,1,.768,0a3.49,3.49,0,0,1,.575.178A14.782,14.782,0,0,1,5.15,2.746c.068.073.255.269.286.309a.5.5,0,0,1,.011.6C5.414,3.7,5.223,3.9,5.16,3.969Z'\n        transform='translate(7.89 6.498)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.513,3.338c0-.9-4.584-3.8-5.1-3.276s-.57,5.983,0,6.552S5.513,4.242,5.513,3.338Z'\n        transform='translate(7.903 6.517)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nPlay.displayName = 'IconlyPlay'\nPlay.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Play)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ShieldDone = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.581,20a.759.759,0,0,1-.353-.086l-3.6-1.863a8.458,8.458,0,0,1-2.446-1.817A8.25,8.25,0,0,1,.042,10.759L0,4.124A1.813,1.813,0,0,1,1.229,2.413L7.841.106A1.889,1.889,0,0,1,9.071.1l6.637,2.227a1.81,1.81,0,0,1,1.249,1.7L17,10.662a8.241,8.241,0,0,1-2.065,5.5A8.448,8.448,0,0,1,12.513,18L8.945,19.91a.787.787,0,0,1-.358.09ZM5.9,9.007a.764.764,0,0,0-.539.219.722.722,0,0,0,.007,1.039l1.916,1.843a.758.758,0,0,0,.528.212h.007a.761.761,0,0,0,.533-.219l3.9-3.844a.722.722,0,0,0-.006-1.039.769.769,0,0,0-1.067.005L7.808,10.545,6.429,9.219A.76.76,0,0,0,5.9,9.007Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.586,20a.782.782,0,0,1-.359-.086l-3.6-1.864a8.453,8.453,0,0,1-2.445-1.816A8.243,8.243,0,0,1,.042,10.76L0,4.124A1.813,1.813,0,0,1,1.228,2.412L7.841.107A1.882,1.882,0,0,1,9.071.1l6.637,2.227a1.809,1.809,0,0,1,1.249,1.7L17,10.663a8.243,8.243,0,0,1-2.066,5.5A8.423,8.423,0,0,1,12.513,18L8.944,19.909A.764.764,0,0,1,8.586,20'\n        transform='translate(0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M2.676,5.315A.764.764,0,0,1,2.141,5.1L.224,3.26A.722.722,0,0,1,.218,2.22a.77.77,0,0,1,1.068-.007L2.665,3.539,6.033.219A.77.77,0,0,1,7.1.212a.721.721,0,0,1,.007,1.039L3.209,5.1a.76.76,0,0,1-.533.219'\n        transform='translate(5.143 7.006)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.781,7.781,0,0,1-1.9,5.1,7.771,7.771,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.767,7.767,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z'\n        transform='translate(0.75 0.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.005,1.892,3.9,5.79,0'\n        transform='translate(5.823 7.913)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.147,19.912l-3.6-1.885A8.523,8.523,0,0,1,2.11,16.2,8.247,8.247,0,0,1,0,10.708a.748.748,0,0,1,.758-.736.747.747,0,0,1,.757.736,6.8,6.8,0,0,0,1.738,4.524,7.024,7.024,0,0,0,2.016,1.5l3.237,1.7,3.23-1.7a7,7,0,0,0,2.015-1.5,6.792,6.792,0,0,0,1.735-4.521V4.072a.335.335,0,0,0-.229-.315L8.614,1.49a.352.352,0,0,0-.228,0L1.744,3.757a.335.335,0,0,0-.229.315v1.9a.748.748,0,0,1-.757.737A.748.748,0,0,1,0,5.971v-1.9a1.815,1.815,0,0,1,1.243-1.7L7.885.1a1.932,1.932,0,0,1,1.23,0l6.643,2.266A1.814,1.814,0,0,1,17,4.072v6.64A8.238,8.238,0,0,1,14.9,16.2a8.486,8.486,0,0,1-2.438,1.831L8.866,19.912a.777.777,0,0,1-.719,0Zm-.9-7.81-1.91-1.856a.722.722,0,0,1,0-1.04.771.771,0,0,1,1.07,0l1.374,1.336,3.4-3.3a.772.772,0,0,1,1.07,0,.722.722,0,0,1,0,1.04L8.321,12.1a.771.771,0,0,1-1.07,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.781,7.781,0,0,1-1.9,5.1,7.771,7.771,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.767,7.767,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z'\n        transform='translate(0.75 0.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.005,1.892,3.9,5.79,0'\n        transform='translate(5.823 7.913)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.735,18.855a8.4,8.4,0,0,0,7.672-8.727c0-6.4.278-6.905-.337-7.521A12.6,12.6,0,0,0,7.735,0,12.589,12.589,0,0,0,.4,2.607c-.616.616-.338,1.117-.338,7.521A8.4,8.4,0,0,0,7.735,18.855Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.005,1.892,3.9,5.79,0'\n        transform='translate(5.886 7.87)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nShieldDone.displayName = 'IconlyShieldDone'\nShieldDone.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ShieldDone)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ShieldFail = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.586,20a.78.78,0,0,1-.363-.088l-3.6-1.863a8.4,8.4,0,0,1-2.435-1.814A8.2,8.2,0,0,1,.04,10.763L0,4.123A1.8,1.8,0,0,1,1.228,2.416L7.841.1a1.838,1.838,0,0,1,.61-.1,1.9,1.9,0,0,1,.618.1L15.7,2.328a1.8,1.8,0,0,1,1.248,1.7L17,10.664a8.248,8.248,0,0,1-2.074,5.492A8.366,8.366,0,0,1,12.511,18L8.938,19.912A.747.747,0,0,1,8.586,20ZM8.5,10.763h0l1.358,1.323a.757.757,0,0,0,.533.214.74.74,0,0,0,.534-.214.727.727,0,0,0,0-1.04L9.562,9.723,10.921,8.4a.717.717,0,0,0,.219-.509.742.742,0,0,0-.219-.531.773.773,0,0,0-1.067,0L8.5,8.684,7.136,7.359a.753.753,0,0,0-.53-.213.78.78,0,0,0-.537.213.741.741,0,0,0-.219.531A.715.715,0,0,0,6.07,8.4L7.428,9.723,6.07,11.047a.725.725,0,0,0,0,1.04A.76.76,0,0,0,6.6,12.3a.718.718,0,0,0,.534-.214l1.358-1.323Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.586,20a.778.778,0,0,1-.358-.086l-3.6-1.864a8.426,8.426,0,0,1-2.446-1.816A8.243,8.243,0,0,1,.041,10.76L0,4.124A1.812,1.812,0,0,1,1.227,2.412L7.84.107A1.883,1.883,0,0,1,9.07.1l6.638,2.227a1.809,1.809,0,0,1,1.249,1.7L17,10.663a8.241,8.241,0,0,1-2.065,5.5A8.437,8.437,0,0,1,12.514,18L8.944,19.909A.768.768,0,0,1,8.586,20'\n        transform='translate(0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M3.715,2.578,5.073,1.255a.721.721,0,0,0,0-1.039A.77.77,0,0,0,4,.215L2.647,1.537,1.289.215a.77.77,0,0,0-1.068,0,.721.721,0,0,0,0,1.039L1.579,2.578.221,3.9a.721.721,0,0,0,0,1.039.769.769,0,0,0,1.068,0L2.647,3.618,4,4.94a.769.769,0,0,0,1.068,0,.721.721,0,0,0,0-1.039Z'\n        transform='translate(5.853 7.147)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.787,7.787,0,0,1-1.9,5.1,7.785,7.785,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.753,7.753,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z'\n        transform='translate(0.75 0.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.758,3.758,0,0'\n        transform='translate(6.543 8.088)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.758,3.758,0'\n        transform='translate(6.543 8.088)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.147,19.912l-3.6-1.885A8.523,8.523,0,0,1,2.11,16.2,8.247,8.247,0,0,1,0,10.708a.748.748,0,0,1,.758-.736.747.747,0,0,1,.757.736,6.8,6.8,0,0,0,1.738,4.524,7.024,7.024,0,0,0,2.016,1.5l3.237,1.7,3.23-1.7a7.009,7.009,0,0,0,2.015-1.5,6.792,6.792,0,0,0,1.735-4.521V4.072a.335.335,0,0,0-.229-.315L8.614,1.49a.352.352,0,0,0-.228,0L1.744,3.757a.334.334,0,0,0-.229.315v1.9a.748.748,0,0,1-.757.737A.748.748,0,0,1,0,5.971v-1.9a1.815,1.815,0,0,1,1.243-1.7L7.885.1A1.929,1.929,0,0,1,9.114.1l6.644,2.266A1.814,1.814,0,0,1,17,4.072v6.64A8.238,8.238,0,0,1,14.9,16.2a8.5,8.5,0,0,1-2.438,1.831L8.866,19.912a.777.777,0,0,1-.719,0Zm1.7-7.748L8.486,10.841,7.125,12.163a.771.771,0,0,1-1.07,0,.72.72,0,0,1,0-1.04L7.416,9.8,6.055,8.477a.719.719,0,0,1,0-1.04.772.772,0,0,1,1.07,0L8.486,8.762,9.848,7.438a.772.772,0,0,1,1.07,0,.721.721,0,0,1,0,1.04L9.556,9.8l1.362,1.322a.722.722,0,0,1,0,1.04.771.771,0,0,1-1.07,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.787,7.787,0,0,1-1.9,5.1,7.785,7.785,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.753,7.753,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z'\n        transform='translate(0.75 0.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M1.879,1.879,0,3.758,1.879,1.879,0,0,1.879,1.879,3.758,0,1.879,1.879,3.758,3.758Z'\n        transform='translate(6.543 8.088)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M7.736,18.855a8.4,8.4,0,0,0,7.672-8.727c0-6.4.278-6.905-.338-7.521A12.592,12.592,0,0,0,7.736,0,12.6,12.6,0,0,0,.4,2.607c-.616.616-.338,1.117-.338,7.521A8.4,8.4,0,0,0,7.736,18.855Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.759,3.758,0,0'\n        transform='translate(6.605 8.066)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,3.758,3.759,0'\n        transform='translate(6.605 8.066)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nShieldFail.displayName = 'IconlyShieldFail'\nShieldFail.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ShieldFail)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Show = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M9.99,16C5.861,16,2.148,13.115.059,8.281a.724.724,0,0,1,0-.571C2.146,2.882,5.858,0,9.99,0H10a9.306,9.306,0,0,1,5.737,2.046,14.235,14.235,0,0,1,4.2,5.664.725.725,0,0,1,0,.571C17.851,13.115,14.135,16,10,16ZM6.1,8A3.9,3.9,0,1,0,10,4.121,3.89,3.89,0,0,0,6.1,8ZM7.562,8a2.487,2.487,0,0,1,.049-.475H7.66a2,2,0,0,0,2-1.921A1.989,1.989,0,0,1,10,5.574,2.419,2.419,0,1,1,7.562,8Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M10,16H9.99C5.861,16,2.148,13.114.058,8.281a.723.723,0,0,1,0-.571C2.145,2.882,5.858,0,9.99,0H10a9.307,9.307,0,0,1,5.737,2.046,14.231,14.231,0,0,1,4.2,5.664.723.723,0,0,1,0,.571C17.851,13.114,14.135,16,10,16ZM10,4.121A3.874,3.874,0,1,0,13.892,8,3.9,3.9,0,0,0,10,4.121Z'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.868,2.424A2.434,2.434,0,0,1,0,2.424,2.521,2.521,0,0,1,.049,1.95H.1A2,2,0,0,0,2.1.029,2.043,2.043,0,0,1,2.439,0,2.43,2.43,0,0,1,4.868,2.424'\n        transform='translate(7.563 5.573)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M6.323,3.162A3.162,3.162,0,1,1,3.161,0,3.162,3.162,0,0,1,6.323,3.162Z'\n        transform='translate(6.839 4.891)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M9.248,14.6c3.808,0,7.291-2.738,9.252-7.3C16.539,2.738,13.056,0,9.248,0h0C5.444,0,1.961,2.738,0,7.3c1.961,4.564,5.444,7.3,9.252,7.3Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M10,16h0C5.863,16,2.147,13.115.059,8.287a.721.721,0,0,1,0-.573C2.147,2.886,5.863,0,10,0h0c4.136,0,7.852,2.886,9.939,7.714a.721.721,0,0,1,0,.573,17.051,17.051,0,0,1-.823,1.654.734.734,0,0,1-1,.277.726.726,0,0,1-.277-.991c.221-.391.432-.8.625-1.228C16.6,3.9,13.453,1.456,10,1.455S3.4,3.9,1.531,8C3.4,12.1,6.547,14.545,10,14.545a8.108,8.108,0,0,0,5.6-2.4.736.736,0,0,1,1.033.024.722.722,0,0,1-.023,1.027A9.545,9.545,0,0,1,10,16ZM8,11.324a.723.723,0,0,1-.25-1,.732.732,0,0,1,1-.247A2.419,2.419,0,1,0,7.564,8,.731.731,0,0,1,6.1,8,3.892,3.892,0,1,1,8,11.324Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 4)'>\n      <path\n        d='M6.323,3.162A3.162,3.162,0,1,1,3.161,0,3.162,3.162,0,0,1,6.323,3.162Z'\n        transform='translate(6.839 4.891)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M9.248,14.6c3.808,0,7.291-2.738,9.252-7.3C16.539,2.738,13.056,0,9.248,0h0C5.444,0,1.961,2.738,0,7.3c1.961,4.564,5.444,7.3,9.252,7.3Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 4)'>\n      <path\n        id='Stroke_1'\n        data-name='Stroke 1'\n        d='M6.324,3.162A3.162,3.162,0,1,1,3.162,0,3.162,3.162,0,0,1,6.324,3.162Z'\n        transform='translate(6.84 4.89)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        id='Stroke_3'\n        data-name='Stroke 3'\n        d='M0,7.3c0,3.28,4.142,7.3,9.252,7.3S18.5,10.585,18.5,7.3,14.361,0,9.252,0,0,4.022,0,7.3Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nShow.displayName = 'IconlyShow'\nShow.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Show)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Hide = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M1.784,16.783a.738.738,0,0,1-.088-.925l.029-.04L16.156,1.257A.247.247,0,0,0,16.2,1.2a.327.327,0,0,0,.049-.059l.917-.925A.743.743,0,0,1,17.691,0a.723.723,0,0,1,.514.214.722.722,0,0,1,.219.522.722.722,0,0,1-.219.521L16.43,3.049a14.776,14.776,0,0,1,3.513,5.159.765.765,0,0,1,0,.581C17.851,13.7,14.135,16.626,10,16.626h-.01a9.091,9.091,0,0,1-5.279-1.752l-1.893,1.91A.728.728,0,0,1,2.3,17,.7.7,0,0,1,1.784,16.783ZM7.8,11.752A3.892,3.892,0,0,0,13.892,8.5a3.989,3.989,0,0,0-.673-2.216L12.155,7.362A2.481,2.481,0,0,1,12.429,8.5,2.444,2.444,0,0,1,10,10.955a2.409,2.409,0,0,1-1.132-.275ZM.059,8.793a.747.747,0,0,1,0-.58C2.147,3.309,5.864.385,9.992.385H10a8.851,8.851,0,0,1,4,.965L10.743,4.639A4.506,4.506,0,0,0,10,4.569,3.92,3.92,0,0,0,6.1,8.508a4.566,4.566,0,0,0,.068.748L2.556,12.9A15.833,15.833,0,0,1,.059,8.793Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M9.99,16.244a9.053,9.053,0,0,1-5.278-1.752L7.8,11.372a3.892,3.892,0,0,0,6.088-3.249,4.007,4.007,0,0,0-.673-2.216l3.21-3.239a14.862,14.862,0,0,1,3.512,5.159.749.749,0,0,1,0,.581c-2.088,4.9-5.805,7.836-9.941,7.836ZM.059,8.408a.749.749,0,0,1,0-.581C2.147,2.924,5.864,0,9.99,0H10a8.862,8.862,0,0,1,4,.964l-3.259,3.29A4.487,4.487,0,0,0,10,4.184,3.919,3.919,0,0,0,6.1,8.123a4.676,4.676,0,0,0,.068.748l-3.61,3.642A15.827,15.827,0,0,1,.059,8.408Z'\n        transform='translate(0 0.382)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.212,16.784a.737.737,0,0,1-.088-.926l.029-.04L10.622,5.256l3.092-3.121.869-.877a.236.236,0,0,0,.049-.058.235.235,0,0,0,.049-.059L15.6.214a.734.734,0,0,1,1.034,1.043L14.856,3.049l-3.21,3.239-10.4,10.5A.725.725,0,0,1,.729,17,.706.706,0,0,1,.212,16.784Zm7.083-6.1,3.288-3.317a2.467,2.467,0,0,1-2.156,3.594A2.4,2.4,0,0,1,7.3,10.679Z'\n        transform='translate(1.574)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M.925,5.395A3.123,3.123,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925'\n        transform='translate(6.836 5.472)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.537,0A3.158,3.158,0,0,1,0,2.542'\n        transform='translate(10.568 9.199)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.9,12.638A13.43,13.43,0,0,1,0,7.3,13.592,13.592,0,0,1,3.934,1.938,8.534,8.534,0,0,1,9.25,0a8.554,8.554,0,0,1,5.336,1.957'\n        transform='translate(0.75 1.334)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M9.98,0a15.359,15.359,0,0,1,1.8,3.146c-1.967,4.557-5.443,7.3-9.25,7.3A7.981,7.981,0,0,1,0,10.035'\n        transform='translate(7.468 5.491)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M15.774,0,0,15.774'\n        transform='translate(2.113 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M1.58,16.789a.712.712,0,0,1,0-1.018l5.2-5.116A3.749,3.749,0,0,1,6.1,8.5,3.876,3.876,0,0,1,10,4.659a3.919,3.919,0,0,1,2.191.666l2.034-2a7.712,7.712,0,0,0-9.1.45A12.62,12.62,0,0,0,1.532,8.5a14.426,14.426,0,0,0,1.4,2.43.711.711,0,0,1-.172,1,.738.738,0,0,1-1.021-.169A15.956,15.956,0,0,1,.059,8.784a.707.707,0,0,1,0-.569A14.218,14.218,0,0,1,4.221,2.642a9.23,9.23,0,0,1,11.056-.355L17.385.212a.739.739,0,0,1,1.035,0,.711.711,0,0,1,0,1.019L2.615,16.789a.739.739,0,0,1-1.035,0ZM7.561,8.5a2.324,2.324,0,0,0,.286,1.1L11.12,6.38A2.458,2.458,0,0,0,10,6.1,2.423,2.423,0,0,0,7.561,8.5Zm-.33,7.479a.719.719,0,0,1-.462-.912.736.736,0,0,1,.925-.456A7.369,7.369,0,0,0,10,14.983c3.445,0,6.592-2.417,8.468-6.483a14.169,14.169,0,0,0-1.59-2.67.712.712,0,0,1,.145-1.009.739.739,0,0,1,1.024.142A15.9,15.9,0,0,1,19.94,8.214a.715.715,0,0,1,0,.571c-2.1,4.783-5.813,7.639-9.941,7.639A8.867,8.867,0,0,1,7.231,15.98Zm2.618-4.289a.723.723,0,0,1,.59-.839A2.412,2.412,0,0,0,12.39,8.928a.733.733,0,0,1,.85-.582.72.72,0,0,1,.59.837,3.871,3.871,0,0,1-3.13,3.088.82.82,0,0,1-.132.011A.728.728,0,0,1,9.849,11.691Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M.925,5.395A3.123,3.123,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925'\n        transform='translate(6.836 5.472)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M2.537,0A3.158,3.158,0,0,1,0,2.542'\n        transform='translate(10.568 9.199)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.9,12.638A13.43,13.43,0,0,1,0,7.3,13.592,13.592,0,0,1,3.934,1.938,8.534,8.534,0,0,1,9.25,0a8.554,8.554,0,0,1,5.336,1.957'\n        transform='translate(0.75 1.334)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M9.98,0a15.359,15.359,0,0,1,1.8,3.146c-1.967,4.557-5.443,7.3-9.25,7.3A7.981,7.981,0,0,1,0,10.035'\n        transform='translate(7.468 5.491)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M15.774,0,0,15.774'\n        transform='translate(2.113 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(2 3.5)'>\n      <path\n        d='M3.67,12.89C1.44,11.43,0,9.23,0,7.3,0,4.02,4.14,0,9.25,0a10.118,10.118,0,0,1,5.59,1.71'\n        transform='translate(0.75 1.34)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M10.48,0a5.9,5.9,0,0,1,1.41,3.53c0,3.28-4.15,7.3-9.26,7.3A9.888,9.888,0,0,1,0,10.47'\n        transform='translate(7.37 5.11)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.925,5.4A3.12,3.12,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925'\n        transform='translate(6.841 5.472)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M2.537,0A3.158,3.158,0,0,1,0,2.542'\n        transform='translate(10.573 9.199)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M15.774,0,0,15.774'\n        transform='translate(2.118 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nHide.displayName = 'IconlyHide'\nHide.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Hide)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Filter = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M13.122,14.4a3.439,3.439,0,1,1,3.439,3.379A3.41,3.41,0,0,1,13.122,14.4ZM1.508,15.921a1.482,1.482,0,1,1,0-2.963H8.083a1.482,1.482,0,1,1,0,2.963ZM0,3.379A3.409,3.409,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.379,3.409,3.409,0,0,1,3.439,6.758,3.41,3.41,0,0,1,0,3.379ZM11.918,4.86a1.481,1.481,0,1,1,0-2.962h6.575a1.481,1.481,0,1,1,0,2.962Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 3)'>\n      <path\n        d='M8.083,0H1.508A1.5,1.5,0,0,0,0,1.481,1.5,1.5,0,0,0,1.508,2.963H8.083A1.5,1.5,0,0,0,9.591,1.481,1.5,1.5,0,0,0,8.083,0'\n        transform='translate(0 12.958)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M9.59,1.48A1.5,1.5,0,0,0,8.083,0H1.508A1.5,1.5,0,0,0,0,1.48,1.5,1.5,0,0,0,1.508,2.962H8.083A1.5,1.5,0,0,0,9.59,1.48'\n        transform='translate(10.41 1.898)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M6.878,3.379a3.409,3.409,0,0,1-3.439,3.38A3.41,3.41,0,0,1,0,3.379,3.41,3.41,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.379'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M6.878,3.38A3.409,3.409,0,0,1,3.439,6.758,3.41,3.41,0,0,1,0,3.38,3.41,3.41,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.38'\n        transform='translate(13.122 11.02)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M7.234.588H0'\n        transform='translate(0.883 14.898)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.76,2.88A2.88,2.88,0,1,1,2.88,0,2.88,2.88,0,0,1,5.76,2.88Z'\n        transform='translate(13.358 12.607)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.588H7.235'\n        transform='translate(11.883 3.174)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.88A2.88,2.88,0,1,0,2.88,0,2.879,2.879,0,0,0,0,2.88Z'\n        transform='translate(0.883 0.882)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M12.476,15.286a3.741,3.741,0,0,1,3.762-3.713,3.817,3.817,0,0,1,.84.093.87.87,0,0,1,.666,1.041.884.884,0,0,1-1.057.656,2.025,2.025,0,0,0-2.447,1.923,2,2,0,0,0,4,0,1.955,1.955,0,0,0-.027-.328.873.873,0,0,1,.725-1,.882.882,0,0,1,1.015.716,3.648,3.648,0,0,1,.051.615,3.762,3.762,0,0,1-7.524,0Zm-11.594.87a.871.871,0,1,1,0-1.742H8.117a.871.871,0,1,1,0,1.742ZM0,3.713A3.637,3.637,0,0,1,.052,3.1a.881.881,0,0,1,1.015-.716.873.873,0,0,1,.725,1,2.063,2.063,0,0,0-.027.328A2,2,0,1,0,3.318,1.791a.88.88,0,0,1-1.06-.651A.869.869,0,0,1,2.918.1,3.765,3.765,0,0,1,7.525,3.713,3.742,3.742,0,0,1,3.763,7.428,3.743,3.743,0,0,1,0,3.713Zm11.884.871a.871.871,0,1,1,0-1.742h7.234a.871.871,0,1,1,0,1.742Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2.5)'>\n      <path\n        d='M7.234.588H0'\n        transform='translate(0.883 14.898)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M5.76,2.88A2.88,2.88,0,1,1,2.88,0,2.88,2.88,0,0,1,5.76,2.88Z'\n        transform='translate(13.358 12.607)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.588H7.235'\n        transform='translate(11.883 3.174)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,2.88A2.88,2.88,0,1,0,2.88,0,2.879,2.879,0,0,0,0,2.88Z'\n        transform='translate(0.883 0.882)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(4 4)'>\n      <path\n        d='M6.473.447H0'\n        transform='translate(0.671 13.435)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.722C0,4.764.681,5.444,2.722,5.444s2.722-.68,2.722-2.722S4.763,0,2.722,0,0,.68,0,2.722Z'\n        transform='translate(11.205 11.162)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,.447H6.472'\n        transform='translate(10.177 2.947)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.444,2.722C5.444.681,4.764,0,2.723,0S0,.681,0,2.722.681,5.444,2.723,5.444,5.444,4.764,5.444,2.722Z'\n        transform='translate(0.671 0.671)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nFilter.displayName = 'IconlyFilter'\nFilter.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Filter)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Filter2 = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M7.085,19.874a.8.8,0,0,1-.356-.67V14.389a.558.558,0,0,1,.551-.565l4.855.015a.558.558,0,0,1,.548.565v2.731a.8.8,0,0,1-.454.724L7.823,19.929A.765.765,0,0,1,7.5,20,.754.754,0,0,1,7.085,19.874Zm5.35-7.83-5.447-.016a.591.591,0,0,1-.437-.2L.574,5.258A2.234,2.234,0,0,1,0,3.758V2.193A2.161,2.161,0,0,1,2.128,0H17.872A2.16,2.16,0,0,1,20,2.192V3.724a2.225,2.225,0,0,1-.637,1.563l-6.505,6.58a.582.582,0,0,1-.416.176Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M11.571,10.594,17.427,4.72A1.981,1.981,0,0,0,18,3.324V1.6C18,.52,17.142,0,16.084,0H1.916C.858,0,0,.52,0,1.6V3.355A1.983,1.983,0,0,0,.518,4.694L5.9,10.563a.537.537,0,0,0,.393.175l4.9.014a.528.528,0,0,0,.38-.158'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M0,0V6.6a.715.715,0,0,0,.319.6.681.681,0,0,0,.375.113.7.7,0,0,0,.289-.063L4.95,5.4a.71.71,0,0,0,.407-.646V0Z'\n        transform='translate(6.056 10.686)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M6.564,18l4.3-2.023v-5.3L17.6,3.838a1.385,1.385,0,0,0,.4-.976v-1.5A1.345,1.345,0,0,0,16.677,0H1.323A1.345,1.345,0,0,0,0,1.366V2.9a1.389,1.389,0,0,0,.357.934l6.207,6.843Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Broken = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M6.2,17.587a.727.727,0,0,1,.338-.952l3.486-1.67V10.542a.726.726,0,0,1,.209-.51l6.22-6.294a.547.547,0,0,0,.158-.385V1.974a.535.535,0,0,0-.527-.541H8.074A.707.707,0,0,1,7.379.715.707.707,0,0,1,8.074,0h8.009A1.949,1.949,0,0,1,18,1.974V3.353a2.012,2.012,0,0,1-.575,1.408l-6.011,6.08v4.58a.716.716,0,0,1-.4.648L7.124,17.933A.68.68,0,0,1,6.831,18,.7.7,0,0,1,6.2,17.587Zm-.143-3.346v-3.3L.517,4.784A2.034,2.034,0,0,1,0,3.419V2A1.959,1.959,0,0,1,1.916,0H4.7a.711.711,0,0,1,.695.725.71.71,0,0,1-.695.724H1.916A.538.538,0,0,0,1.39,2V3.419a.564.564,0,0,0,.142.374l5.727,6.368a.737.737,0,0,1,.188.494v3.586a.7.7,0,1,1-1.39,0Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3 3)'>\n      <path\n        d='M9,18c-2.011,0-2.02-2.006-2.02-5.4S0,6.827,0,3.1C0-.047,2.79,0,9,0s9-.047,9,3.1c0,3.726-6.983,6.1-6.983,9.5S11.014,18,9,18Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nFilter2.displayName = 'IconlyFilter2'\nFilter2.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Filter2)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Image = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.332,20H5.666C2.277,20,0,17.622,0,14.083V5.917C0,2.378,2.277,0,5.666,0h8.667C17.723,0,20,2.378,20,5.917v8.167C20,17.622,17.722,20,14.332,20ZM6.307,13.241c-.5,0-1.018.383-1.724,1.279l-.038.048c-.45.569-.912,1.155-1.371,1.726a.8.8,0,0,0-.162.633.716.716,0,0,0,.328.5A4.112,4.112,0,0,0,5.529,18h8.428a4.524,4.524,0,0,0,1.407-.214,3.717,3.717,0,0,0,2.261-2.111,3.756,3.756,0,0,0,.2-2.741,2.263,2.263,0,0,0-.513-.784l0,0a10.811,10.811,0,0,0-1.868-1.6,1.429,1.429,0,0,0-.76-.235,1.874,1.874,0,0,0-1.363.806c-.177.238-.33.491-.492.759l-.1.171-.007.012a5.683,5.683,0,0,1-1.96,2.218,2.487,2.487,0,0,1-1.208.335,3.516,3.516,0,0,1-1.959-.785,5.491,5.491,0,0,0-.827-.49A1.12,1.12,0,0,0,6.307,13.241ZM6.5,4A2.5,2.5,0,1,0,9,6.5,2.5,2.5,0,0,0,6.5,4Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.333,20H5.666C2.277,20,0,17.623,0,14.084V5.917C0,2.378,2.277,0,5.666,0h8.668C17.723,0,20,2.378,20,5.917v8.168C20,17.623,17.723,20,14.333,20'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M2.515,13.567a4.184,4.184,0,0,1-2.177-.558.736.736,0,0,1-.165-1.1c.47-.57.934-1.142,1.4-1.719.892-1.1,1.492-1.424,2.161-1.143a5.581,5.581,0,0,1,.823.475,2.807,2.807,0,0,0,3.149.436A5.617,5.617,0,0,0,9.664,7.8c.194-.311.378-.621.592-.9a1.585,1.585,0,0,1,2.111-.553A10.687,10.687,0,0,1,14.229,7.9a2.181,2.181,0,0,1,.509.76,3.564,3.564,0,0,1-.2,2.656,3.635,3.635,0,0,1-2.247,2.046,4.585,4.585,0,0,1-1.4.207ZM1.1,2.486A2.485,2.485,0,1,1,3.588,4.971,2.488,2.488,0,0,1,1.1,2.486Z'\n        transform='translate(3.172 4.189)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M18.46,5.149V13.3c0,3.02-1.89,5.15-4.91,5.15H4.9c-3.02,0-4.9-2.13-4.9-5.15V5.149C0,2.129,1.89,0,4.9,0h8.65C16.57,0,18.46,2.129,18.46,5.149Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.14,1.529,2.527a1.4,1.4,0,0,1,2.032-.008l.885.9a1.433,1.433,0,0,0,2.131-.094L8.806.617a1.687,1.687,0,0,1,2.515-.1L13.4,2.655'\n        transform='translate(3.281 10.292)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.507,1.754A1.754,1.754,0,1,1,1.753,0,1.755,1.755,0,0,1,3.507,1.754Z'\n        transform='translate(4.806 5.38)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10.98,19.949a.75.75,0,0,1,0-1.5H14.3c2.527,0,4.16-1.727,4.16-4.4V5.9c0-2.673-1.633-4.4-4.16-4.4H5.65C3.129,1.5,1.5,3.226,1.5,5.9V14.05c0,2.672,1.629,4.4,4.15,4.4h.721a.75.75,0,0,1,0,1.5H5.65c-3.38,0-5.65-2.372-5.65-5.9V5.9C0,2.371,2.271,0,5.65,0H14.3c3.386,0,5.66,2.371,5.66,5.9V14.05c0,3.528-2.274,5.9-5.66,5.9ZM2.766,14.978a.751.751,0,0,1-.028-1.061L4.267,12.3a2.126,2.126,0,0,1,1.554-.672,2.345,2.345,0,0,1,1.561.661l.881.9a.65.65,0,0,0,.517.2.677.677,0,0,0,.5-.248l2.228-2.713a2.444,2.444,0,0,1,1.783-.887,2.471,2.471,0,0,1,1.849.739l2.077,2.141a.75.75,0,0,1-1.077,1.045l-2.077-2.141a.893.893,0,0,0-.711-.285.929.929,0,0,0-.685.342L10.438,14.1a2.185,2.185,0,0,1-1.59.795,2.244,2.244,0,0,1-1.655-.652l-.886-.9a.52.52,0,0,0-.479-.206.647.647,0,0,0-.472.2l-1.53,1.615a.752.752,0,0,1-1.06.03ZM4.056,7.133a2.5,2.5,0,1,1,2.5,2.5A2.507,2.507,0,0,1,4.056,7.133Zm1.5,0a1,1,0,1,0,1-1A1.005,1.005,0,0,0,5.557,7.133Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M18.46,5.149V13.3c0,3.02-1.89,5.15-4.91,5.15H4.9c-3.02,0-4.9-2.13-4.9-5.15V5.149C0,2.129,1.89,0,4.9,0h8.65C16.57,0,18.46,2.129,18.46,5.149Z'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,4.14,1.529,2.527a1.4,1.4,0,0,1,2.032-.008l.885.9a1.433,1.433,0,0,0,2.131-.094L8.806.617a1.687,1.687,0,0,1,2.515-.1L13.4,2.655'\n        transform='translate(3.281 10.292)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M3.507,1.754A1.754,1.754,0,1,1,1.753,0,1.755,1.755,0,0,1,3.507,1.754Z'\n        transform='translate(4.806 5.38)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,3.71S.812,2.073,1.994,2.073,3.78,3.448,5.09,3.448,7.868,0,9.352,0,11.9,2.391,11.9,2.391'\n        transform='translate(4.071 10.749)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.115,1.558A1.558,1.558,0,1,1,1.557,0,1.558,1.558,0,0,1,3.115,1.558Z'\n        transform='translate(5.024 5.547)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nImage.displayName = 'IconlyImage'\nImage.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Image)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Image2 = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(1.999 2)'>\n      <path\n        d='M5.638,20a6.641,6.641,0,0,1-1.082-.094L4.524,19.9a5.232,5.232,0,0,1-3.268-1.872c-.005,0-.007,0-.011-.009a.053.053,0,0,0-.007-.01A6.2,6.2,0,0,1,0,14.1V5.888C0,2.366,2.265,0,5.638,0h8.717C17.731,0,20,2.366,20,5.888V14.1a2.3,2.3,0,0,1-.019.256c-.006.058-.013.116-.016.176,0,.034,0,.068,0,.1,0,.05,0,.1-.007.153a.537.537,0,0,1-.009.055.393.393,0,0,0-.01.057,6.709,6.709,0,0,1-.155.9c-.014.059-.03.119-.045.175l-.015.054a6.059,6.059,0,0,1-.287.807c-.021.047-.043.092-.066.138-.014.026-.025.05-.037.075a5.376,5.376,0,0,1-.407.7c-.031.043-.062.084-.094.122l-.055.07a4.914,4.914,0,0,1-.513.581c-.037.035-.076.067-.115.1s-.053.042-.078.065a5.246,5.246,0,0,1-.608.461c-.047.029-.1.054-.146.078-.033.016-.066.032-.1.05a5.223,5.223,0,0,1-.687.333,1.848,1.848,0,0,1-.186.055c-.042.012-.086.023-.129.036l-.076.023a5.194,5.194,0,0,1-.657.172,3.755,3.755,0,0,1-.42.041l-.188.014c-.068,0-.135.014-.2.021a2.608,2.608,0,0,1-.32.026ZM1.4,5.888V14.1a5.328,5.328,0,0,0,.385,2.038l.358-.436c.563-.687,1.611-1.963,1.619-1.971A3.616,3.616,0,0,1,6.4,12.259a2.71,2.71,0,0,1,1.05.22,6.455,6.455,0,0,1,1.01.561l.09.058a2.329,2.329,0,0,0,1.186.537c.024,0,.049,0,.074,0a1.04,1.04,0,0,0,.41-.143,13.5,13.5,0,0,0,2.123-2.619c.057-.081.094-.134.107-.15a3.345,3.345,0,0,1,2.619-1.4,2.983,2.983,0,0,1,1.551.441c.194.116,1.535,1.052,1.981,1.431v-5.3c0-2.73-1.669-4.493-4.251-4.493H5.638C3.061,1.395,1.4,3.158,1.4,5.888ZM4.06,6.993A2.4,2.4,0,0,1,4,6.468a2.5,2.5,0,0,1,5,.046,2.495,2.495,0,0,1-4.941.479Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M19.208,3.41V4.794c0,.23-.01.461-.03.691a5.407,5.407,0,0,1-5.641,5.223H4.88A5.5,5.5,0,0,1,.952,9.244,4.592,4.592,0,0,1,0,8.012c.331-.4.7-.842,1.062-1.283C1.673,6,2.265,5.274,2.635,4.8c.551-.682,2-2.476,4.018-1.634a7.191,7.191,0,0,1,1.1.622c.812.541,1.152.7,1.723.391a4.461,4.461,0,0,0,1.473-1.714c.23-.372.461-.732.711-1.063A3.115,3.115,0,0,1,15.842.443a10.544,10.544,0,0,1,1.864,1.493c.12.12.24.232.351.342.15.15.651.652,1.152,1.133'\n        transform='translate(0.791 9.292)'\n        fill={color}\n      />\n      <path\n        d='M14.339,0H5.671C2.275,0,0,2.376,0,5.914v8.172A6.435,6.435,0,0,0,.792,17.3c.331-.4.7-.842,1.062-1.284.611-.731,1.2-1.454,1.573-1.924.551-.682,2-2.476,4.018-1.634a7.191,7.191,0,0,1,1.1.622c.812.541,1.152.7,1.723.39a4.446,4.446,0,0,0,1.473-1.714c.23-.371.461-.731.711-1.062a3.115,3.115,0,0,1,4.178-.962A10.544,10.544,0,0,1,18.5,11.228c.12.12.24.232.351.342.15.149.651.651,1.152,1.133V5.914C20,2.376,17.725,0,14.339,0'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M5.161,2.582A2.6,2.6,0,0,1,2.58,5.163,2.6,2.6,0,0,1,0,2.582,2.6,2.6,0,0,1,2.58,0,2.6,2.6,0,0,1,5.161,2.582'\n        transform='translate(4.293 4.215)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.553,0H4.9C1.889,0,0,2.134,0,5.154V13.3c0,3.02,1.881,5.154,4.9,5.154h8.648c3.024,0,4.905-2.134,4.905-5.154V5.154C18.457,2.134,16.576,0,13.553,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.691,1.846A1.846,1.846,0,1,1,1.845,0,1.847,1.847,0,0,1,3.691,1.846Z'\n        transform='translate(5.012 4.939)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M17.457,2.929a22.809,22.809,0,0,0-3-2.593A2.345,2.345,0,0,0,11.3,1.1c-.765.991-1.243,2.324-2.4,2.949-1.423.771-2.259-.472-3.446-.97-1.325-.555-2.331.443-3.105,1.4S.788,6.389,0,7.339'\n        transform='translate(1.75 10.022)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M5.641,20C2.267,20,0,17.632,0,14.107V5.893C0,2.368,2.267,0,5.641,0h8.717C17.733,0,20,2.368,20,5.893v2.37a.7.7,0,1,1-1.4,0V5.893c0-2.733-1.666-4.5-4.245-4.5H5.641c-2.579,0-4.246,1.764-4.246,4.5v8.213c0,2.733,1.667,4.5,4.246,4.5h8.717c2.579,0,4.246-1.764,4.246-4.5V13.022c-.152-.126-.307-.261-.464-.4-1.1-.951-2.236-1.933-3.477-1.646-.867.2-1.351.916-1.911,1.743a6.164,6.164,0,0,1-1.79,1.951c-1.205.746-2.477.191-3.406-.216L7.4,14.391a2.112,2.112,0,0,0-2.683.349.7.7,0,0,1-.99-.983,3.475,3.475,0,0,1,4.23-.647l.158.069c.923.4,1.57.645,2.113.308A5.046,5.046,0,0,0,11.6,11.939a4.667,4.667,0,0,1,2.75-2.32c1.932-.45,3.47.882,4.705,1.949.234.2.462.4.684.579a.7.7,0,0,1,.262.544v1.415C20,17.632,17.732,20,14.358,20ZM4.3,6.78a2.558,2.558,0,1,1,2.558,2.56A2.561,2.561,0,0,1,4.3,6.78Zm1.395,0A1.163,1.163,0,1,0,6.854,5.618,1.163,1.163,0,0,0,5.691,6.78Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.553,0H4.9C1.889,0,0,2.134,0,5.154V13.3c0,3.02,1.881,5.154,4.9,5.154h8.648c3.024,0,4.905-2.134,4.905-5.154V5.154C18.457,2.134,16.576,0,13.553,0Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.691,1.846A1.846,1.846,0,1,1,1.845,0,1.847,1.847,0,0,1,3.691,1.846Z'\n        transform='translate(5.012 4.939)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M17.457,2.929a22.809,22.809,0,0,0-3-2.593A2.345,2.345,0,0,0,11.3,1.1c-.765.991-1.243,2.324-2.4,2.949-1.423.771-2.259-.472-3.446-.97-1.325-.555-2.331.443-3.105,1.4S.788,6.389,0,7.339'\n        transform='translate(1.75 10.022)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.522,1.761A1.761,1.761,0,1,1,1.761,0,1.76,1.76,0,0,1,3.522,1.761Z'\n        transform='translate(5.077 5.023)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M16.654,2.737C15.773,1.831,14.527,0,12.238,0S9.9,4.038,7.563,4.038s-3.278-1.371-4.8-.655S0,6.944,0,6.944'\n        transform='translate(2.466 9.93)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nImage2.displayName = 'IconlyImage2'\nImage2.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Image2)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Image = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2.001)'>\n      <path\n        d='M16.167,12.379a2.279,2.279,0,0,0-1.674.44c-.482.281-1.4,1.024-1.923.834a11.932,11.932,0,0,1-6.313-6.16c-.193-.536.547-1.458.825-1.946a2.335,2.335,0,0,0,.436-1.685A13.7,13.7,0,0,0,5.189.615,1.912,1.912,0,0,0,4.021,0C2.52-.063.844,1.94.549,2.419-.187,3.441-.183,4.8.562,6.45c1.8,4.428,8.586,11.112,13.031,12.974A5.371,5.371,0,0,0,15.837,20a2.919,2.919,0,0,0,1.751-.549c.381-.219,2.466-1.979,2.411-3.521a1.941,1.941,0,0,0-.608-1.166,13.8,13.8,0,0,0-3.224-2.385'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Light = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M.49,2.373C.807,1.849,2.549-.056,3.793,0a1.636,1.636,0,0,1,.967.517,16.863,16.863,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.426,1.851-.966,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.665-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.373Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.1,19.41c-3.265-1.355-8.2-5.75-10.982-9.783a.749.749,0,1,1,1.235-.85c2.6,3.767,7.336,8.008,10.352,9.261,1.219.567,2.128.6,2.8.117.527-.319,2.024-1.805,2-2.579a.982.982,0,0,0-.29-.443,18.073,18.073,0,0,0-2.913-2.2c-.319-.068-.651.126-1.156.445l-.257.159a.75.75,0,1,1-.774-1.284l.231-.143a3.062,3.062,0,0,1,2.3-.633,15.579,15.579,0,0,1,3.636,2.611,2.3,2.3,0,0,1,.716,1.4c.065,1.842-2.4,3.767-2.686,3.929A3.138,3.138,0,0,1,15.435,20,5.59,5.59,0,0,1,13.1,19.41ZM9.982,12.353A10.4,10.4,0,0,1,6.391,7.727a2.428,2.428,0,0,1,.365-2.192c.226-.392.351-.625.3-.876A18.964,18.964,0,0,0,4.863,1.793.909.909,0,0,0,4.382,1.5C3.667,1.482,2.2,2.9,1.87,3.448c-.515.707-.479,1.615.074,2.829A.75.75,0,0,1,.58,6.9C-.208,5.171-.193,3.73.624,2.617.927,2.109,2.839-.1,4.479,0A2.305,2.305,0,0,1,5.91.718,15.6,15.6,0,0,1,8.524,4.352a2.645,2.645,0,0,1-.467,1.929c-.265.461-.357.658-.266.907a8.884,8.884,0,0,0,3.065,3.945.75.75,0,0,1-.873,1.22Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M.49,2.373C.807,1.849,2.549-.056,3.793,0a1.636,1.636,0,0,1,.967.517,16.863,16.863,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.426,1.851-.966,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.665-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.373Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,1.469,2.179'\n        transform='translate(1.883 1.294)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,2.188,1.71'\n        transform='translate(15.364 15.567)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2.5 2.5)'>\n      <path\n        d='M5.7,13.3C-1.2,6.4-.217,3.241.511,2.223.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.889,10.111s4.432-2.611,9.476,3.514c2.022,2.469-1.425,4.772-1.588,4.864C15.76,19.217,12.6,20.2,5.7,13.3Z'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bold />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nImage.displayName = 'IconlyImage'\nImage.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Image)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Calling = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.12,19.446C8.83,17.655,2.275,11.231.543,6.974-.176,5.389-.182,4.082.531,3.1.815,2.639,2.433.713,3.882.774a1.863,1.863,0,0,1,1.128.59A13.212,13.212,0,0,1,7.258,4.486a2.233,2.233,0,0,1-.422,1.62c-.267.468-.982,1.354-.8,1.871a11.491,11.491,0,0,0,6.093,5.92c.506.184,1.391-.53,1.857-.8a2.211,2.211,0,0,1,1.616-.424,13.422,13.422,0,0,1,3.112,2.293,1.856,1.856,0,0,1,.585,1.121c.054,1.482-1.96,3.174-2.327,3.385a2.822,2.822,0,0,1-1.69.527A5.191,5.191,0,0,1,13.12,19.446ZM14.835,7.931h0a3.461,3.461,0,0,0-2.743-2.75.86.86,0,0,1,.327-1.689,5.175,5.175,0,0,1,4.1,4.11.865.865,0,0,1-.678,1.011.945.945,0,0,1-.166.015A.86.86,0,0,1,14.835,7.931Zm3.456-.075a6.912,6.912,0,0,0-6.126-6.138A.863.863,0,0,1,11.731.184a.818.818,0,0,1,.625-.176,8.617,8.617,0,0,1,7.638,7.656.857.857,0,0,1-.756.95.705.705,0,0,1-.1.006A.856.856,0,0,1,18.291,7.856Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M1.02.015A.861.861,0,0,0,.693,1.7a3.462,3.462,0,0,1,2.744,2.75h0a.859.859,0,0,0,.841.7.933.933,0,0,0,.165-.015A.865.865,0,0,0,5.12,4.125,5.174,5.174,0,0,0,1.02.015'\n        transform='translate(11.398 3.475)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.954.008A.817.817,0,0,0,.328.184.863.863,0,0,0,.762,1.718,6.912,6.912,0,0,1,6.888,7.857a.857.857,0,0,0,.851.764.8.8,0,0,0,.1-.006A.847.847,0,0,0,8.411,8.3a.856.856,0,0,0,.181-.633A8.616,8.616,0,0,0,.954.008'\n        transform='translate(11.402 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M15.6,11.9a2.211,2.211,0,0,0-1.615.424c-.465.27-1.35.984-1.856.8A11.493,11.493,0,0,1,6.04,7.2c-.186-.517.528-1.4.8-1.871a2.235,2.235,0,0,0,.422-1.62A13.176,13.176,0,0,0,5.009.592,1.858,1.858,0,0,0,3.882,0C2.433-.06.815,1.866.531,2.327-.181,3.309-.176,4.616.543,6.2,2.276,10.458,8.83,16.883,13.12,18.674a5.2,5.2,0,0,0,2.166.554,2.825,2.825,0,0,0,1.69-.528c.366-.211,2.38-1.9,2.326-3.385a1.856,1.856,0,0,0-.586-1.121A13.372,13.372,0,0,0,15.6,11.9'\n        transform='translate(0 0.773)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.49,2.374C.806,1.849,2.55-.056,3.793,0A1.642,1.642,0,0,1,4.76.518h0a16.884,16.884,0,0,1,2.467,3.34C7.472,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.864,16.864,0,0,1,3.34,2.468h0a1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.146,4.525-.191,3.3.49,2.374Z'\n        transform='translate(0.5 0.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A7.971,7.971,0,0,1,7.041,7.032'\n        transform='translate(12.565 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A4.426,4.426,0,0,1,3.5,3.5'\n        transform='translate(12.565 4.293)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M12.86,19.418C9.653,18.076,4.8,13.727,2.076,9.736A.745.745,0,0,1,2.264,8.7.734.734,0,0,1,3.289,8.9c2.547,3.726,7.2,7.923,10.165,9.164,1.2.56,2.092.595,2.755.116.517-.317,1.987-1.787,1.961-2.552a.988.988,0,0,0-.285-.439,17.661,17.661,0,0,0-2.859-2.18c-.317-.065-.639.123-1.135.437l-.255.16a.735.735,0,0,1-1.011-.254.745.745,0,0,1,.251-1.019l.23-.143a2.988,2.988,0,0,1,2.262-.623,15.22,15.22,0,0,1,3.569,2.584,2.277,2.277,0,0,1,.7,1.389c.064,1.821-2.36,3.725-2.637,3.885A3.067,3.067,0,0,1,15.157,20,5.486,5.486,0,0,1,12.86,19.418ZM9.8,12.434A10.29,10.29,0,0,1,6.275,7.857a2.418,2.418,0,0,1,.36-2.17c.221-.388.345-.619.293-.867A18.756,18.756,0,0,0,4.774,1.985.886.886,0,0,0,4.3,1.694c-.662-.031-2.14,1.384-2.467,1.928-.506.7-.47,1.6.073,2.8a.744.744,0,0,1-.365.983.734.734,0,0,1-.975-.368C-.2,5.328-.19,3.9.612,2.8.78,2.514,2.65.1,4.4.214A2.257,2.257,0,0,1,5.8.923a15.353,15.353,0,0,1,2.566,3.6,2.631,2.631,0,0,1-.459,1.909c-.26.455-.35.651-.261.9a8.793,8.793,0,0,0,3.008,3.9.745.745,0,0,1,.171,1.035.733.733,0,0,1-1.027.173Zm5.26-4.586a3.607,3.607,0,0,0-2.854-2.873.742.742,0,0,1,.282-1.456,5.081,5.081,0,0,1,4.019,4.046.742.742,0,0,1-.582.87.759.759,0,0,1-.142.013A.737.737,0,0,1,15.062,7.848Zm3.47-.067a7.08,7.08,0,0,0-6.264-6.3.741.741,0,0,1-.652-.819.733.733,0,0,1,.814-.654A8.545,8.545,0,0,1,20,7.614a.739.739,0,0,1-.649.82.675.675,0,0,1-.084.005A.739.739,0,0,1,18.532,7.781Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.49,2.374C.806,1.849,2.55-.056,3.793,0A1.642,1.642,0,0,1,4.76.518h0a16.884,16.884,0,0,1,2.467,3.34C7.472,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.864,16.864,0,0,1,3.34,2.468h0a1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.146,4.525-.191,3.3.49,2.374Z'\n        transform='translate(0.5 0.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A7.971,7.971,0,0,1,7.041,7.032'\n        transform='translate(12.565 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0A4.426,4.426,0,0,1,3.5,3.5'\n        transform='translate(12.565 4.293)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,0A7.971,7.971,0,0,1,7.041,7.032'\n        transform='translate(12.352 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0A4.426,4.426,0,0,1,3.5,3.5'\n        transform='translate(12.352 4.293)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.7,13.3C-1.2,6.4-.217,3.241.511,2.223.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.889,10.111S13.32,7.5,18.366,13.625c2.022,2.469-1.425,4.772-1.588,4.864C15.76,19.217,12.6,20.2,5.7,13.3Z'\n        transform='translate(0 1)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCalling.displayName = 'IconlyCalling'\nCalling.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Calling)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CallMissed = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.3,19.439C8.949,17.623,2.306,11.109.549,6.791-.178,5.185-.184,3.86.537,2.864.825,2.4,2.466.445,3.934.506a1.884,1.884,0,0,1,1.143.6A13.314,13.314,0,0,1,7.356,4.27a2.269,2.269,0,0,1-.427,1.643c-.273.474-1,1.372-.807,1.9a11.651,11.651,0,0,0,6.176,6c.514.186,1.41-.538,1.881-.812a2.241,2.241,0,0,1,1.638-.429A13.523,13.523,0,0,1,18.971,14.9a1.878,1.878,0,0,1,.594,1.138c.054,1.5-1.986,3.218-2.359,3.432A2.861,2.861,0,0,1,15.494,20,5.276,5.276,0,0,1,13.3,19.439ZM18.492,7.584l-2.4-2.413-2.4,2.413a.9.9,0,0,1-1.248,0,.89.89,0,0,1,0-1.254l2.4-2.413L12.435,1.5a.89.89,0,0,1,0-1.254.9.9,0,0,1,1.248,0l2.4,2.413,2.4-2.413a.9.9,0,0,1,1.248,0,.888.888,0,0,1,0,1.254l-2.4,2.413,2.4,2.413a.888.888,0,0,1,0,1.254.879.879,0,0,1-1.248,0Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M15.816,12.066a2.241,2.241,0,0,0-1.637.43c-.471.274-1.368,1-1.882.812a11.652,11.652,0,0,1-6.176-6c-.189-.524.535-1.423.808-1.9a2.271,2.271,0,0,0,.427-1.642A13.359,13.359,0,0,0,5.077.6,1.881,1.881,0,0,0,3.934,0C2.466-.06.825,1.892.537,2.359c-.721,1-.716,2.321.012,3.927C2.306,10.6,8.949,17.118,13.3,18.934a5.271,5.271,0,0,0,2.2.561,2.863,2.863,0,0,0,1.713-.535c.372-.214,2.413-1.929,2.359-3.432a1.884,1.884,0,0,0-.595-1.137,13.534,13.534,0,0,0-3.155-2.325'\n        transform='translate(0 0.505)'\n        fill={color}\n      />\n      <path\n        d='M5.16,3.918l2.4-2.413a.888.888,0,0,0,0-1.254.9.9,0,0,0-1.249,0l-2.4,2.414L1.507.251a.9.9,0,0,0-1.249,0,.89.89,0,0,0,0,1.254l2.4,2.413L.258,6.33a.89.89,0,0,0,0,1.254.9.9,0,0,0,1.249,0l2.4-2.414,2.4,2.414A.885.885,0,0,0,7.564,6.33Z'\n        transform='translate(12.177 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.49,2.374C.807,1.849,2.549-.056,3.793,0a1.642,1.642,0,0,1,.967.517,16.893,16.893,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.872,9.872,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.374Z'\n        transform='translate(0.5 0.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M6,0,0,6'\n        transform='translate(13.25 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,6,6'\n        transform='translate(13.25 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.1,19.412c-3.266-1.357-8.2-5.751-10.981-9.785A.749.749,0,1,1,3.349,8.78c2.594,3.765,7.334,8.006,10.35,9.26,1.22.566,2.128.6,2.8.117.526-.319,2.024-1.806,2-2.579a.992.992,0,0,0-.291-.444,18.045,18.045,0,0,0-2.912-2.2c-.316-.066-.65.126-1.156.443l-.258.161a.75.75,0,0,1-.773-1.286l.233-.143a3.066,3.066,0,0,1,2.3-.631,15.6,15.6,0,0,1,3.636,2.611,2.291,2.291,0,0,1,.715,1.4c.065,1.84-2.4,3.766-2.685,3.927A3.139,3.139,0,0,1,15.433,20,5.613,5.613,0,0,1,13.1,19.412ZM9.981,12.353A10.4,10.4,0,0,1,6.39,7.727a2.427,2.427,0,0,1,.366-2.193c.226-.391.351-.625.3-.876A19.039,19.039,0,0,0,4.862,1.792a.914.914,0,0,0-.48-.293C3.666,1.453,2.2,2.9,1.87,3.449c-.515.707-.479,1.614.074,2.829A.749.749,0,0,1,.58,6.9C-.208,5.171-.193,3.73.624,2.618.927,2.109,2.838-.106,4.479,0A2.315,2.315,0,0,1,5.91.718,15.543,15.543,0,0,1,8.523,4.353a2.647,2.647,0,0,1-.467,1.929c-.266.461-.357.658-.266.906a8.889,8.889,0,0,0,3.063,3.945.75.75,0,0,1-.871,1.22Zm8.738-5.076L16.25,4.81,13.781,7.277A.75.75,0,0,1,12.72,6.218l2.47-2.47L12.72,1.28A.75.75,0,0,1,13.781.221L16.25,2.688,18.2.736h0l.515-.515A.75.75,0,0,1,19.78,1.28L18.747,2.313h0L17.311,3.749l2.47,2.47a.75.75,0,0,1-1.061,1.059Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.49,2.374C.807,1.849,2.549-.056,3.793,0a1.642,1.642,0,0,1,.967.517,16.893,16.893,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.872,9.872,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.374Z'\n        transform='translate(0.5 0.5)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3,3,0,6,3,3,0,0,3,3,6,0,3,3,6,6Z'\n        transform='translate(13.25 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6,0,0,6'\n        transform='translate(13.328 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,6,6'\n        transform='translate(13.328 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M5.7,13.3C-1.2,6.4-.217,3.241.511,2.222.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.89,10.111s4.431-2.611,9.476,3.514c2.022,2.469-1.425,4.77-1.588,4.864C15.759,19.217,12.6,20.2,5.7,13.3Z'\n        transform='translate(0 1)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCallMissed.displayName = 'IconlyCallMissed'\nCallMissed.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CallMissed)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CallSilent = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(2 1.5)'>\n      <path\n        d='M.245,20.746a.9.9,0,0,1-.129-1.058l.03-.041a.518.518,0,0,1,.069-.091L18.176,1.13A.814.814,0,0,1,18.77.864a.853.853,0,0,1,.6.266.892.892,0,0,1,0,1.229V2.37L9.958,12.015l-.572.587.8-.82a11.186,11.186,0,0,0,2.626,1.566c.506.192,1.378-.54,1.844-.814a2.163,2.163,0,0,1,1.606-.427,13.159,13.159,0,0,1,3.1,2.327,1.978,1.978,0,0,1,.585,1.139C20,17.087,18,18.8,17.63,19.018a2.792,2.792,0,0,1-1.686.539A5.046,5.046,0,0,1,13.794,19,24.043,24.043,0,0,1,7.52,14.516l-6.075,6.23A.857.857,0,0,1,.85,21,.9.9,0,0,1,.245,20.746ZM1.275,6.3C.562,4.7.552,3.366,1.265,2.37,1.543,1.9,3.158-.059,4.6,0a1.78,1.78,0,0,1,1.12.6,13.472,13.472,0,0,1,2.24,3.171,2.315,2.315,0,0,1-.417,1.657c-.267.468-.981,1.372-.793,1.9A10.335,10.335,0,0,0,7.827,9.3L5.141,12.056A21.819,21.819,0,0,1,1.275,6.3Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 1.5)'>\n      <path\n        d='M7.092,9.3,4.406,12.056A21.819,21.819,0,0,1,.54,6.3C-.173,4.7-.183,3.366.53,2.37.808,1.9,2.423-.06,3.861,0a1.785,1.785,0,0,1,1.12.6,13.487,13.487,0,0,1,2.24,3.171A2.318,2.318,0,0,1,6.8,5.429c-.268.468-.981,1.372-.793,1.9A10.336,10.336,0,0,0,7.092,9.3'\n        transform='translate(0.735)'\n        fill={color}\n      />\n      <path\n        d='M12.429,3.79c.05,1.514-1.953,3.232-2.319,3.446a2.787,2.787,0,0,1-1.685.539,5.035,5.035,0,0,1-2.151-.559A24.046,24.046,0,0,1,0,2.733L2.666,0A11.193,11.193,0,0,0,5.293,1.565c.506.192,1.378-.54,1.844-.814A2.166,2.166,0,0,1,8.742.324a13.187,13.187,0,0,1,3.1,2.328,1.975,1.975,0,0,1,.585,1.138'\n        transform='translate(7.52 11.782)'\n        fill={color}\n      />\n      <path\n        d='M19.375,1.5v.01L9.958,11.151,1.444,19.882a.856.856,0,0,1-.595.254.9.9,0,0,1-.6-.254.9.9,0,0,1-.129-1.057l.03-.041a.517.517,0,0,1,.069-.091L18.175.265A.816.816,0,0,1,18.77,0a.855.855,0,0,1,.6.265.893.893,0,0,1,0,1.23'\n        transform='translate(0 0.864)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M3.532,10.475A19.223,19.223,0,0,1,.515,5.841c-.66-1.439-.7-2.63-.04-3.529C.785,1.8,2.485-.058,3.7,0a1.623,1.623,0,0,1,.94.5,17.785,17.785,0,0,1,1.389,1.67,7.222,7.222,0,0,1,1.01,1.58c.24,1.14-1.12,1.8-.7,2.941.093.227.191.448.3.662'\n        transform='translate(0.754 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,18.5,18.5,0'\n        transform='translate(0.75 0.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,2.811a24.78,24.78,0,0,0,6.98,5.18c1.44.67,2.62.679,3.52.03.39-.221,2.36-1.94,2.31-3.221a1.612,1.612,0,0,0-.5-.939,16,16,0,0,0-3.25-2.4c-1.14-.24-1.8,1.121-2.94.7A10,10,0,0,1,2.81,0'\n        transform='translate(6.44 10.751)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M13.1,19.411a24.29,24.29,0,0,1-6.658-4.8L1.28,19.772a.75.75,0,0,1-1.06-1.06L5.91,13.025a.77.77,0,0,1,1.059,0,23.929,23.929,0,0,0,6.737,5.014c1.218.568,2.123.6,2.795.116.534-.321,2.029-1.8,2-2.581a.952.952,0,0,0-.292-.451,18.068,18.068,0,0,0-2.9-2.193c-.214-.048-.448.082-.842.309a2.417,2.417,0,0,1-2.165.372A10.814,10.814,0,0,1,8.72,11.277a.749.749,0,0,1,0-1.06l10-9.995a.75.75,0,1,1,1.06,1.06l-9.446,9.44a9.578,9.578,0,0,0,2.51,1.49c.219.079.415-.011.873-.274a2.658,2.658,0,0,1,1.938-.464c.764.148,3.174,2.136,3.633,2.609a2.319,2.319,0,0,1,.709,1.4c.075,1.858-2.406,3.773-2.69,3.931a3.1,3.1,0,0,1-1.87.586A5.586,5.586,0,0,1,13.1,19.411ZM3.711,11.7A19.838,19.838,0,0,1,.577,6.874C-.2,5.173-.191,3.73.625,2.617.8,2.326,2.685-.113,4.488,0A2.31,2.31,0,0,1,5.91.713,17.8,17.8,0,0,1,7.38,2.471c1.066,1.419,1.118,1.72,1.149,1.9a2.633,2.633,0,0,1-.47,1.908c-.265.459-.355.655-.265.9.077.19.169.393.266.592a.75.75,0,0,1-1.348.659C6.6,8.2,6.494,7.962,6.4,7.718a2.41,2.41,0,0,1,.363-2.184c.225-.392.351-.628.3-.878h0A9.494,9.494,0,0,0,6.18,3.371a17.088,17.088,0,0,0-1.311-1.58A.886.886,0,0,0,4.388,1.5c-.646-.051-2.181,1.4-2.516,1.95-.514.706-.475,1.613.081,2.827a18.356,18.356,0,0,0,2.91,4.461.75.75,0,1,1-1.151.962Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M3.629,10.757A19.74,19.74,0,0,1,.529,6C-.148,4.521-.19,3.3.488,2.375.807,1.85,2.553-.059,3.8,0a1.668,1.668,0,0,1,.966.513A18.265,18.265,0,0,1,6.189,2.23,7.416,7.416,0,0,1,7.227,3.852c.247,1.171-1.15,1.848-.719,3.02.1.233.2.46.305.68'\n        transform='translate(1 0)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,2.887A25.454,25.454,0,0,0,7.17,8.206c1.479.688,2.691.7,3.616.031.4-.227,2.424-1.992,2.373-3.308a1.655,1.655,0,0,0-.514-.964A16.432,16.432,0,0,0,9.307,1.5c-1.171-.246-1.849,1.151-3.02.72A10.27,10.27,0,0,1,2.886,0'\n        transform='translate(6.84 10.27)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,18.333,18.333,0'\n        transform='translate(0.743 0.744)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M3.609,11.058C-.977,5.7-.129,3.127.509,2.225c.1-.17,2.4-3.61,4.861-1.592,4.851,4,1,4.385,1.742,6.922'\n        transform='translate(0 1)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M3.185,0c4.927,4.746,4.3-2.728,9.278,3.312C14.49,5.786,11.04,8.079,10.87,8.175,9.874,8.9,6.762,9.863,0,3.185'\n        transform='translate(5.901 11.314)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,18.5,18.5,0'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCallSilent.displayName = 'IconlyCallSilent'\nCallSilent.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CallSilent)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Lock = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M12.732,20H4.269A4.227,4.227,0,0,1,0,15.826V10.888A4.165,4.165,0,0,1,2.977,6.929V5.4A5.472,5.472,0,0,1,8.485,0,5.576,5.576,0,0,1,12.4,1.58,5.3,5.3,0,0,1,14.023,5.4V6.929A4.165,4.165,0,0,1,17,10.888v4.937A4.227,4.227,0,0,1,12.732,20ZM8.5,11.384a.875.875,0,0,0-.884.865v2.206a.889.889,0,0,0,1.778,0V12.249A.881.881,0,0,0,8.5,11.384Zm.01-9.645A3.711,3.711,0,0,0,4.756,5.376V6.714h7.489V5.4A3.7,3.7,0,0,0,8.505,1.739Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M12.731,13.286H4.269A4.227,4.227,0,0,1,0,9.112V4.175A4.227,4.227,0,0,1,4.269,0h8.463A4.227,4.227,0,0,1,17,4.175V9.112A4.227,4.227,0,0,1,12.731,13.286ZM8.5,4.67a.875.875,0,0,0-.884.865V7.741a.889.889,0,0,0,1.778,0V5.535A.881.881,0,0,0,8.5,4.67Z'\n        transform='translate(0 6.714)'\n        fill={color}\n      />\n      <path\n        d='M11.045,5.4V6.867a4.153,4.153,0,0,0-1.118-.149h-.66V5.4A3.7,3.7,0,0,0,5.528,1.739a3.707,3.707,0,0,0-3.75,3.637V6.718h-.65A3.817,3.817,0,0,0,0,6.877V5.4A5.467,5.467,0,0,1,5.507,0a5.461,5.461,0,0,1,5.538,5.4'\n        transform='translate(2.977 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M9.121,6.7V4.551A4.561,4.561,0,0,0,0,4.531V6.7'\n        transform='translate(3.802 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M11.433,11.873H3.792A3.792,3.792,0,0,1,0,8.081V3.792A3.792,3.792,0,0,1,3.792,0h7.641a3.792,3.792,0,0,1,3.792,3.792V8.081A3.792,3.792,0,0,1,11.433,11.873Z'\n        transform='translate(0.75 7.377)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.221'\n        transform='translate(7.863 12.203)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M12.353,20H8.942a.75.75,0,1,1,0-1.5h3.411a3.07,3.07,0,0,0,3.092-3.042.364.364,0,0,1,.02-.105l.011-.041V11.169a3.071,3.071,0,0,0-3.093-3.042H4.617a3.071,3.071,0,0,0-3.092,3.042v4.144c0,.016.008.032.012.048a.351.351,0,0,1,.018.1A3.071,3.071,0,0,0,4.647,18.5a.75.75,0,1,1,0,1.5H4.622a4.632,4.632,0,0,1-3.269-1.331A4.472,4.472,0,0,1,0,15.458V11.169A4.55,4.55,0,0,1,3.1,6.9V5.3A5.367,5.367,0,0,1,8.49,0h.023A5.349,5.349,0,0,1,13.9,5.3V6.9A4.55,4.55,0,0,1,17,11.169v4.289A4.586,4.586,0,0,1,12.382,20ZM4.627,5.284V6.627h7.745V5.3A3.836,3.836,0,0,0,8.51,1.5H8.493A3.843,3.843,0,0,0,4.627,5.284Zm3.11,9.139V12.2a.762.762,0,0,1,1.525,0v2.22a.762.762,0,0,1-1.525,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M9.121,6.7V4.551A4.561,4.561,0,0,0,0,4.531V6.7'\n        transform='translate(3.802 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M11.433,11.873H3.792A3.792,3.792,0,0,1,0,8.081V3.792A3.792,3.792,0,0,1,3.792,0h7.641a3.792,3.792,0,0,1,3.792,3.792V8.081A3.792,3.792,0,0,1,11.433,11.873Z'\n        transform='translate(0.75 7.377)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.221'\n        transform='translate(7.863 12.203)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M9.121,6.653V4.5A4.561,4.561,0,0,0,0,4.484V6.653'\n        transform='translate(3.85 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.221'\n        transform='translate(7.91 12.156)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.4,0,7.66,0Z'\n        transform='translate(0.75 6.824)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nLock.displayName = 'IconlyLock'\nLock.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Lock)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst Unlock = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M12.731,20H4.268A4.227,4.227,0,0,1,0,15.825V10.886A4.038,4.038,0,0,1,.872,8.372,4.337,4.337,0,0,1,3.071,6.9l-.111.014V5.387A5.548,5.548,0,0,1,13.711,3.628a.838.838,0,0,1-.041.666.85.85,0,0,1-.509.438.887.887,0,0,1-.291.049.91.91,0,0,1-.847-.585A3.761,3.761,0,0,0,4.739,5.368V6.709l-.013,0h8.006A4.227,4.227,0,0,1,17,10.886v4.938A4.227,4.227,0,0,1,12.731,20ZM8.5,11.382a.875.875,0,0,0-.884.865v2.207a.889.889,0,0,0,1.778,0V12.247A.881.881,0,0,0,8.5,11.382Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M1.778,6.709V5.367a3.709,3.709,0,0,1,3.76-3.628A3.727,3.727,0,0,1,9.064,4.2a.906.906,0,0,0,1.138.537.861.861,0,0,0,.549-1.1A5.53,5.53,0,0,0,5.518,0,5.482,5.482,0,0,0,0,5.387V6.911Z'\n        transform='translate(2.961 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M12.731,13.289H4.269A4.227,4.227,0,0,1,0,9.113V4.175A4.227,4.227,0,0,1,4.269,0h8.463A4.227,4.227,0,0,1,17,4.175V9.113A4.227,4.227,0,0,1,12.731,13.289ZM8.5,4.672a.875.875,0,0,0-.884.864V7.743a.889.889,0,0,0,1.778,0V5.536A.88.88,0,0,0,8.5,4.672Z'\n        transform='translate(0 6.711)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(4.5 2.5)'>\n      <path\n        d='M8.872,3.062A4.563,4.563,0,0,0,0,4.531V6.7'\n        transform='translate(3.052)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M11.433,11.874H3.792A3.793,3.793,0,0,1,0,8.081V3.793A3.793,3.793,0,0,1,3.792,0h7.641a3.793,3.793,0,0,1,3.792,3.793V8.081A3.793,3.793,0,0,1,11.433,11.874Z'\n        transform='translate(0 6.626)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.222'\n        transform='translate(7.113 11.453)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M12.353,20H8.942a.75.75,0,1,1,0-1.5h3.411a3.071,3.071,0,0,0,3.092-3.042.67.67,0,0,1,.03-.144V11.169a3.071,3.071,0,0,0-3.092-3.042H4.617a3.071,3.071,0,0,0-3.092,3.042v4.145a.67.67,0,0,1,.03.144A3.071,3.071,0,0,0,4.648,18.5a.75.75,0,1,1,0,1.5l-.021,0-.01,0A4.584,4.584,0,0,1,0,15.458V11.169A4.542,4.542,0,0,1,3.1,6.9V5.3A5.357,5.357,0,0,1,8.49,0h.024A5.386,5.386,0,0,1,13.6,3.567a.747.747,0,0,1-.472.955.765.765,0,0,1-.969-.464A3.861,3.861,0,0,0,8.51,1.5H8.493A3.838,3.838,0,0,0,4.627,5.284V6.627h7.756A4.585,4.585,0,0,1,17,11.169v4.289A4.584,4.584,0,0,1,12.383,20ZM7.738,14.424V12.2a.762.762,0,0,1,1.525,0v2.221a.762.762,0,0,1-1.525,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(4.5 2.5)'>\n      <path\n        d='M8.872,3.062A4.563,4.563,0,0,0,0,4.531V6.7'\n        transform='translate(3.052)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M11.433,11.874H3.792A3.793,3.793,0,0,1,0,8.081V3.793A3.793,3.793,0,0,1,3.792,0h7.641a3.793,3.793,0,0,1,3.792,3.793V8.081A3.793,3.793,0,0,1,11.433,11.874Z'\n        transform='translate(0 6.626)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.222'\n        transform='translate(7.113 11.453)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n  const Curved = () => (\n    <g transform='translate(3.5 2)'>\n      <path\n        d='M8.927,3.237A4.562,4.562,0,0,0,0,4.484V6.653'\n        transform='translate(3.849 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,0V2.221'\n        transform='translate(7.91 12.156)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.406,0,7.66,0Z'\n        transform='translate(0.75 6.824)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nUnlock.displayName = 'IconlyUnlock'\nUnlock.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(Unlock)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronDownCircle = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,1,1,20,10,10.011,10.011,0,0,1,10,20ZM6.525,7.8A.737.737,0,0,0,6,8.02a.75.75,0,0,0-.225.54A.727.727,0,0,0,6,9.08l3.47,3.49a.75.75,0,0,0,1.06,0L14,9.08a.7.7,0,0,0,.22-.52A.75.75,0,0,0,14,8.02a.76.76,0,0,0-.529-.216.733.733,0,0,0-.531.226L10,10.98,7.06,8.03A.737.737,0,0,0,6.525,7.8Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749'\n        transform='translate(5.778 7.808)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronDownCircle.displayName = 'IconlyChevronDownCircle'\nChevronDownCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronDownCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronRightCircle = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20l-.28,0A10.011,10.011,0,1,1,10,20ZM8.56,5.78a.745.745,0,0,0-.53,1.28L10.98,10,8.03,12.94A.746.746,0,0,0,8.02,14a.752.752,0,0,0,.534.225A.727.727,0,0,0,9.08,14l3.49-3.47a.75.75,0,0,0,0-1.06L9.08,6A.7.7,0,0,0,8.56,5.78Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749'\n        transform='translate(5.778 7.808)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z'\n        transform='translate(0 20) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronRightCircle.displayName = 'IconlyChevronRightCircle'\nChevronRightCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronRightCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronUpCircle = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,1,1,20,10l0,.28A10,10,0,0,1,10,20ZM10,9.02h0l2.94,2.949a.746.746,0,0,0,1.06.01.751.751,0,0,0,.225-.539A.729.729,0,0,0,14,10.92L10.53,7.43a.747.747,0,0,0-1.06,0L6,10.92a.7.7,0,0,0-.22.52.747.747,0,0,0,.22.54.758.758,0,0,0,.529.216.733.733,0,0,0,.531-.226L10,9.021Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749'\n        transform='translate(5.778 7.808)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z'\n        transform='translate(0 20) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronUpCircle.displayName = 'IconlyChevronUpCircle'\nChevronUpCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronUpCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronLeftCircle = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M10,20A10,10,0,1,1,10,0l.28,0A10,10,0,0,1,10,20ZM11.446,5.775A.728.728,0,0,0,10.92,6L7.43,9.47a.747.747,0,0,0,0,1.06L10.92,14a.7.7,0,0,0,.52.22.745.745,0,0,0,.53-1.28L9.02,10l2.95-2.94A.745.745,0,0,0,11.98,6,.75.75,0,0,0,11.446,5.775Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749'\n        transform='translate(5.778 7.808)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z'\n        transform='translate(0 20) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,3.471,3.486,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0'\n        transform='translate(6.529 8.558)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronLeftCircle.displayName = 'IconlyChevronLeftCircle'\nChevronLeftCircle.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronLeftCircle)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronDown = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6 7)'>\n      <path\n        d='M4.869,9.631c-.058-.057-.306-.27-.51-.469a21.69,21.69,0,0,1-4.024-5.8A4.617,4.617,0,0,1,0,2.188a1.933,1.933,0,0,1,.218-.9A1.874,1.874,0,0,1,1.122.5,9.84,9.84,0,0,1,2.186.242,23.979,23.979,0,0,1,5.992,0,27.724,27.724,0,0,1,9.681.213a8.495,8.495,0,0,1,1.327.341A1.785,1.785,0,0,1,12,2.132v.057a4.879,4.879,0,0,1-.409,1.321A21.69,21.69,0,0,1,7.625,9.177a5.66,5.66,0,0,1-.554.482A1.783,1.783,0,0,1,6.007,10a1.875,1.875,0,0,1-1.138-.369'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(6 7)'>\n      <path\n        d='M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z'\n        transform='translate(7.074 0.005)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(5 8.5)'>\n      <path\n        d='M14,0,7,7,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <path\n      d='M7.417,8.753.24,1.427a.846.846,0,0,1,0-1.183.813.813,0,0,1,1.164,0L8.582,7.573a.846.846,0,0,1,0,1.184.813.813,0,0,1-1.164,0ZM9.832,6.3a.847.847,0,0,1,0-1.184L14.593.247a.814.814,0,0,1,1.165,0,.847.847,0,0,1,0,1.183L10.994,6.293a.812.812,0,0,1-1.163,0Z'\n      transform='translate(4 7.5)'\n      fill={color}\n    />\n  )\n\n  const Curved = () => (\n    <g transform='translate(5 8.5)'>\n      <path\n        d='M14,0S9.856,7,7,7,0,0,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronDown.displayName = 'IconlyChevronDown'\nChevronDown.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronDown)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronRight = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(7 6)'>\n      <path\n        d='M9.631,7.131c-.057.058-.27.306-.469.51a21.69,21.69,0,0,1-5.8,4.024A4.617,4.617,0,0,1,2.188,12a1.933,1.933,0,0,1-.9-.218,1.874,1.874,0,0,1-.795-.9A9.84,9.84,0,0,1,.242,9.814,23.979,23.979,0,0,1,0,6.008,27.724,27.724,0,0,1,.213,2.319,8.495,8.495,0,0,1,.554.992,1.785,1.785,0,0,1,2.132,0h.057A4.879,4.879,0,0,1,3.509.409,21.69,21.69,0,0,1,9.177,4.375a5.66,5.66,0,0,1,.482.554A1.783,1.783,0,0,1,10,5.993a1.875,1.875,0,0,1-.369,1.138'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(7 18) rotate(-90)'>\n      <path\n        d='M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z'\n        transform='translate(7.074 0.005)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(8.5 19) rotate(-90)'>\n      <path\n        d='M14,0,7,7,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(7.5 4)'>\n      <path\n        d='M.244,15.758a.815.815,0,0,1-.073-1.08l.076-.084L7.573,7.418a.845.845,0,0,1,1.184,0A.813.813,0,0,1,8.829,8.5l-.076.084L1.427,15.759a.846.846,0,0,1-1.183,0ZM5.2,6.245l-.086-.074L.247,1.407a.813.813,0,0,1,0-1.164.847.847,0,0,1,1.1-.076l.086.073L6.293,5a.813.813,0,0,1,0,1.164.848.848,0,0,1-1.1.076Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(8.5 19) rotate(-90)'>\n      <path\n        d='M14,0S9.856,7,7,7,0,0,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronRight.displayName = 'IconlyChevronRight'\nChevronRight.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronRight)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronUp = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6 7)'>\n      <path\n        d='M7.131.369c.058.057.306.27.51.469a21.69,21.69,0,0,1,4.024,5.8A4.617,4.617,0,0,1,12,7.812a1.933,1.933,0,0,1-.218.9,1.874,1.874,0,0,1-.9.795,9.84,9.84,0,0,1-1.064.256A23.979,23.979,0,0,1,6.008,10a27.724,27.724,0,0,1-3.689-.213A8.495,8.495,0,0,1,.992,9.446,1.785,1.785,0,0,1,0,7.868V7.812A4.879,4.879,0,0,1,.409,6.491,21.69,21.69,0,0,1,4.375.823,5.66,5.66,0,0,1,4.929.341,1.783,1.783,0,0,1,5.993,0,1.875,1.875,0,0,1,7.131.369'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(18 17) rotate(180)'>\n      <path\n        d='M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z'\n        transform='translate(7.074 0.005)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(19 15.5) rotate(180)'>\n      <path\n        d='M14,0,7,7,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 7.5)'>\n      <path\n        d='M.242,8.756a.846.846,0,0,1,0-1.184L7.417.247,7.5.171A.813.813,0,0,1,8.581.244a.846.846,0,0,1,0,1.183L1.406,8.753l-.084.076a.814.814,0,0,1-1.08-.073Zm14.351,0L9.828,3.888,9.755,3.8a.847.847,0,0,1,.076-1.1.812.812,0,0,1,1.163,0l4.766,4.865.073.085a.847.847,0,0,1-.076,1.1.814.814,0,0,1-1.165,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(19 15.5) rotate(180)'>\n      <path\n        d='M14,0S9.856,7,7,7,0,0,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronUp.displayName = 'IconlyChevronUp'\nChevronUp.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronUp)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ChevronLeft = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(7 6)'>\n      <path\n        d='M.369,4.869c.057-.058.27-.306.469-.51A21.69,21.69,0,0,1,6.633.335,4.617,4.617,0,0,1,7.812,0a1.933,1.933,0,0,1,.9.218,1.874,1.874,0,0,1,.795.9,9.84,9.84,0,0,1,.256,1.064A23.979,23.979,0,0,1,10,5.992a27.724,27.724,0,0,1-.213,3.689,8.495,8.495,0,0,1-.341,1.327A1.785,1.785,0,0,1,7.868,12H7.812a4.879,4.879,0,0,1-1.321-.409A21.69,21.69,0,0,1,.823,7.625a5.66,5.66,0,0,1-.482-.554A1.783,1.783,0,0,1,0,6.007,1.875,1.875,0,0,1,.369,4.869'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(17 6) rotate(90)'>\n      <path\n        d='M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214'\n        transform='translate(0 0)'\n        fill={color}\n      />\n      <path\n        d='M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z'\n        transform='translate(7.074 0.005)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(15.5 5) rotate(90)'>\n      <path\n        d='M14,0,7,7,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(7.5 4)'>\n      <path\n        d='M7.573,15.759.247,8.582.171,8.5A.813.813,0,0,1,.244,7.42a.845.845,0,0,1,1.183,0l7.326,7.177.076.084a.815.815,0,0,1-.073,1.08.846.846,0,0,1-1.184,0ZM2.7,6.169A.813.813,0,0,1,2.707,5L7.573.239,7.658.167a.847.847,0,0,1,1.1.076.813.813,0,0,1,0,1.164L3.888,6.171,3.8,6.245a.848.848,0,0,1-1.1-.076Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(15.5 5) rotate(90)'>\n      <path\n        d='M14,0S9.856,7,7,7,0,0,0,0'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nChevronLeft.displayName = 'IconlyChevronLeft'\nChevronLeft.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ChevronLeft)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowDownSquare = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.33,20H5.66C2.275,20,0,17.621,0,14.08V5.91C0,2.375,2.275,0,5.66,0h8.67C17.721,0,20,2.375,20,5.91V14.08C20,17.621,17.721,20,14.33,20ZM6.25,9.57a.787.787,0,0,0-.529.22.753.753,0,0,0,0,1.06L9.47,14.62a.772.772,0,0,0,1.06,0l3.75-3.769a.751.751,0,0,0,0-1.06.767.767,0,0,0-1.07,0L10.75,12.27V5.92A.751.751,0,0,0,10,5.17a.742.742,0,0,0-.75.751v6.35L6.78,9.79A.763.763,0,0,0,6.25,9.57Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687'\n        transform='translate(5.502 5.168)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowDownSquare.displayName = 'IconlyArrowDownSquare'\nArrowDownSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowDownSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowRightSquare = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.08,20H5.91C2.375,20,0,17.725,0,14.34V5.67C0,2.279,2.375,0,5.91,0H14.08C17.621,0,20,2.279,20,5.67v8.67C20,17.725,17.621,20,14.08,20ZM5.92,9.25A.751.751,0,0,0,5.17,10a.742.742,0,0,0,.751.75h6.35L9.79,13.22a.763.763,0,0,0-.22.53.792.792,0,0,0,.22.53.755.755,0,0,0,1.06,0l3.769-3.75a.772.772,0,0,0,0-1.06L10.85,5.72a.753.753,0,0,0-1.06,0,.766.766,0,0,0,0,1.069L12.27,9.25Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687'\n        transform='translate(5.502 5.168)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(2 22) rotate(-90)'>\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowRightSquare.displayName = 'IconlyArrowRightSquare'\nArrowRightSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowRightSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowUpSquare = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.34,20H5.67C2.279,20,0,17.625,0,14.09V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.17C20,17.625,17.725,20,14.34,20ZM9.25,7.73v6.35a.751.751,0,0,0,.75.751.742.742,0,0,0,.75-.751V7.73l2.47,2.479a.763.763,0,0,0,.53.22.792.792,0,0,0,.53-.22.75.75,0,0,0,0-1.059L10.53,5.38a.774.774,0,0,0-1.06,0L5.72,9.15a.752.752,0,0,0,0,1.059.764.764,0,0,0,1.069,0L9.248,7.732Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687'\n        transform='translate(5.502 5.168)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(22 22) rotate(180)'>\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowUpSquare.displayName = 'IconlyArrowUpSquare'\nArrowUpSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowUpSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowLeftSquare = ({\n  color,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set\n}) => {\n  const Bold = () => (\n    <g transform='translate(2 2)'>\n      <path\n        d='M14.09,20H5.92C2.379,20,0,17.721,0,14.33V5.66C0,2.275,2.379,0,5.92,0h8.17C17.625,0,20,2.275,20,5.66v8.67C20,17.721,17.625,20,14.09,20ZM9.68,5.5a.742.742,0,0,0-.53.218L5.38,9.47a.774.774,0,0,0,0,1.06l3.77,3.75a.754.754,0,0,0,1.059,0,.766.766,0,0,0,0-1.07L7.73,10.75h6.35A.751.751,0,0,0,14.83,10a.742.742,0,0,0-.751-.75H7.73L10.21,6.78a.763.763,0,0,0,.22-.53.787.787,0,0,0-.22-.529A.742.742,0,0,0,9.68,5.5Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916'\n        transform='translate(0 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687'\n        transform='translate(5.502 5.168)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0,3.748,3.764,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(22 2) rotate(90)'>\n      <path\n        d='M.5,8.172V0'\n        transform='translate(9.5 5.914)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0'\n        transform='translate(6.252 10.322)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z'\n        transform='translate(0.75 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowLeftSquare.displayName = 'IconlyArrowLeftSquare'\nArrowLeftSquare.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowLeftSquare)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowDown = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6 3)'>\n      <path\n        d='M4.87,17.625c-.059-.058-.305-.274-.51-.477A22.081,22.081,0,0,1,.336,11.257,4.815,4.815,0,0,1,0,10.058a2,2,0,0,1,.22-.91,1.883,1.883,0,0,1,.9-.808,9.781,9.781,0,0,1,1.065-.261,23.616,23.616,0,0,1,3.805-.244,27.187,27.187,0,0,1,3.688.216,8.15,8.15,0,0,1,1.328.347A1.815,1.815,0,0,1,12,10v.058a5.023,5.023,0,0,1-.408,1.343,22.023,22.023,0,0,1-3.966,5.761,5.686,5.686,0,0,1-.553.491A1.771,1.771,0,0,1,6.008,18,1.853,1.853,0,0,1,4.87,17.625ZM4.81,5.2,4.483,1.5a1.518,1.518,0,0,1,3.036,0L7.191,5.2a1.191,1.191,0,0,1-2.381,0Z'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(6 3)'>\n      <path\n        d='M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0'\n        transform='translate(4.483 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79'\n        transform='translate(0 7.835)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(5.5 4)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4 3)'>\n      <path\n        d='M6.912,17.759l-6.67-6.6A.81.81,0,0,1,.244,10a.839.839,0,0,1,1.175,0L6.67,15.2V.818a.83.83,0,0,1,1.661,0V17.182a.818.818,0,0,1-.514.756.837.837,0,0,1-.9-.179ZM9.9,14.8a.807.807,0,0,1,0-1.156L13.581,10a.841.841,0,0,1,1.175,0,.811.811,0,0,1,0,1.157L11.079,14.8a.84.84,0,0,1-1.175,0Z'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(5.5 4)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(5.5 4)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowDown.displayName = 'IconlyArrowDown'\nArrowDown.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowDown)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowRight = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 6)'>\n      <path\n        d='M9.149,11.781a1.889,1.889,0,0,1-.808-.9,9.727,9.727,0,0,1-.261-1.064A22.373,22.373,0,0,1,7.836,6.36V6.007a27.187,27.187,0,0,1,.216-3.688l.113-.544A3.886,3.886,0,0,1,8.4.992,1.814,1.814,0,0,1,10,0h.058A5.023,5.023,0,0,1,11.4.408,22.606,22.606,0,0,1,16.994,4.2l.379.4a3.481,3.481,0,0,1,.281.334A1.766,1.766,0,0,1,18,5.992a1.853,1.853,0,0,1-.375,1.138l-.39.42-.087.09a22.081,22.081,0,0,1-5.891,4.024l-.244.094a4.065,4.065,0,0,1-.955.242A2.005,2.005,0,0,1,9.149,11.781ZM0,6A1.511,1.511,0,0,1,1.5,4.482l3.7.327a1.191,1.191,0,0,1,0,2.381l-3.7.328A1.511,1.511,0,0,1,0,6Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(3 18) rotate(-90)'>\n      <path\n        d='M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0'\n        transform='translate(4.483 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79'\n        transform='translate(0 7.835)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(4 18.5) rotate(-90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(3 4.5)'>\n      <path\n        d='M10,14.756a.839.839,0,0,1-.071-1.09L10,13.581,15.2,8.33H.818a.831.831,0,0,1-.1-1.654l.1-.006H17.182a.818.818,0,0,1,.756.513A.841.841,0,0,1,17.832,8l-.073.083-6.6,6.671a.81.81,0,0,1-1.156,0Zm3.726-9.584L13.645,5.1,10,1.418A.839.839,0,0,1,10,.244.81.81,0,0,1,11.075.167l.085.075L14.8,3.92a.841.841,0,0,1,0,1.175.808.808,0,0,1-1.073.077Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(4 18.5) rotate(-90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(4 18.5) rotate(-90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowRight.displayName = 'IconlyArrowRight'\nArrowRight.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowRight)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowUp = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6 3)'>\n      <path\n        d='M4.482,16.5l.327-3.7a1.191,1.191,0,0,1,2.381,0l.328,3.7a1.518,1.518,0,0,1-3.036,0ZM2.318,9.949l-.544-.113A3.886,3.886,0,0,1,.992,9.6,1.814,1.814,0,0,1,0,8V7.942A5.023,5.023,0,0,1,.408,6.6,22.605,22.605,0,0,1,4.2,1.006l.4-.379A3.481,3.481,0,0,1,4.928.347,1.766,1.766,0,0,1,5.992,0,1.853,1.853,0,0,1,7.13.375l.42.39.09.087a22.081,22.081,0,0,1,4.024,5.891l.094.244A4.065,4.065,0,0,1,12,7.942a2.005,2.005,0,0,1-.219.91,1.889,1.889,0,0,1-.9.808,9.728,9.728,0,0,1-1.064.261,22.373,22.373,0,0,1-3.452.243H6.007A27.187,27.187,0,0,1,2.318,9.949Z'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(18 21) rotate(180)'>\n      <path\n        d='M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0'\n        transform='translate(4.483 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79'\n        transform='translate(0 7.835)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(18.5 20) rotate(180)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(4.5 3)'>\n      <path\n        d='M6.676,17.285l-.006-.1V.818A.818.818,0,0,1,7.183.062.841.841,0,0,1,8,.168l.083.073,6.671,6.6a.81.81,0,0,1,0,1.157.839.839,0,0,1-1.09.071L13.581,8,8.33,2.8V17.182a.831.831,0,0,1-1.654.1ZM.244,8A.81.81,0,0,1,.167,6.925L.242,6.84,3.92,3.2A.841.841,0,0,1,5.1,3.2a.808.808,0,0,1,.077,1.073L5.1,4.355,1.418,8A.839.839,0,0,1,.244,8Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(18.5 20) rotate(180)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(18.5 20) rotate(180)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowUp.displayName = 'IconlyArrowUp'\nArrowUp.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowUp)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst ArrowLeft = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 6)'>\n      <path\n        d='M7.942,12A5.023,5.023,0,0,1,6.6,11.592,22.626,22.626,0,0,1,1.006,7.8l-.379-.4a3.6,3.6,0,0,1-.281-.334A1.771,1.771,0,0,1,0,6.008,1.853,1.853,0,0,1,.375,4.87l.39-.42.087-.09A22.081,22.081,0,0,1,6.743.336L6.987.242A4.065,4.065,0,0,1,7.942,0a2,2,0,0,1,.91.22,1.883,1.883,0,0,1,.808.9,9.781,9.781,0,0,1,.261,1.065,22.351,22.351,0,0,1,.243,3.451v.354a27.187,27.187,0,0,1-.216,3.688l-.113.544a3.9,3.9,0,0,1-.233.784A1.815,1.815,0,0,1,8,12ZM12.8,7.191a1.191,1.191,0,0,1,0-2.381l3.7-.327a1.518,1.518,0,0,1,0,3.036Z'\n        transform='translate(0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <g transform='translate(21 6) rotate(90)'>\n      <path\n        d='M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0'\n        transform='translate(4.483 0)'\n        fill={secondaryColor}\n        opacity={opacity}\n      />\n      <path\n        d='M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79'\n        transform='translate(0 7.835)'\n        fill={color}\n      />\n    </g>\n  )\n  const Light = () => (\n    <g transform='translate(20 5.5) rotate(90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 4)'>\n      <path\n        d='M6.676,17.285l-.006-.1V.818A.818.818,0,0,1,7.183.062.841.841,0,0,1,8,.168l.083.073,6.671,6.6a.81.81,0,0,1,0,1.157.839.839,0,0,1-1.09.071L13.581,8,8.33,2.8V17.182a.831.831,0,0,1-1.654.1ZM.244,8A.81.81,0,0,1,.167,6.925L.242,6.84,3.92,3.2A.841.841,0,0,1,5.1,3.2a.808.808,0,0,1,.077,1.073L5.1,4.355,1.418,8A.839.839,0,0,1,.244,8Z'\n        transform='translate(0.5 15.5) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(20 5.5) rotate(90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M12.049,0,6.025,6.05,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(20 5.5) rotate(90)'>\n      <path\n        d='M.5,15V0'\n        transform='translate(6.274 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nArrowLeft.displayName = 'IconlyArrowLeft'\nArrowLeft.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(ArrowLeft)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CaretRight = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 6.5)'>\n      <path\n        d='M9.141.09a.715.715,0,0,0-.38.627V4.783H.734a.717.717,0,1,0,0,1.435H8.762v4.065a.712.712,0,0,0,.38.627.748.748,0,0,0,.746-.02l7.77-4.783a.709.709,0,0,0,0-1.215L9.888.11A.748.748,0,0,0,9.141.09'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <>\n      <defs>\n        <clipPath id='clip-path'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n        </clipPath>\n      </defs>\n      <g transform='translate(3 17.5) rotate(-90)'>\n        <path\n          d='M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0'\n          transform='translate(4.738 0)'\n          fill={secondaryColor}\n          opacity={opacity}\n        />\n        <g transform='translate(0 7.944)'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n          <g clipPath='url(#clip-path)'>\n            <path\n              d='M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711'\n              transform='translate(0 0.534)'\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </>\n  )\n  const Light = () => (\n    <g transform='translate(3 17.5) rotate(-90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 6)'>\n      <path\n        d='M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468'\n        transform='translate(0.5 11.5) rotate(-90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(3 17.5) rotate(-90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(3 17.5) rotate(-90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(4.894 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCaretRight.displayName = 'IconlyCaretRight'\nCaretRight.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CaretRight)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CaretDown = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M10.91,9.141a.715.715,0,0,0-.627-.38H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.712.712,0,0,0-.627.38.748.748,0,0,0,.02.746l4.783,7.77a.709.709,0,0,0,1.215,0l4.783-7.77a.748.748,0,0,0,.02-.746'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <>\n      <defs>\n        <clipPath id='clip-path'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n        </clipPath>\n      </defs>\n      <g transform='translate(6.5 3)'>\n        <path\n          d='M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0'\n          transform='translate(4.738 0)'\n          fill={secondaryColor}\n          opacity={opacity}\n        />\n        <g transform='translate(0 7.944)'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n          <g clipPath='url(#clip-path)'>\n            <path\n              d='M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711'\n              transform='translate(0 0.534)'\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </>\n  )\n  const Light = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(4.894 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCaretDown.displayName = 'IconlyCaretDown'\nCaretDown.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CaretDown)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CaretUp = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M.09,8.859a.715.715,0,0,0,.627.38H4.783v8.027a.717.717,0,1,0,1.435,0V9.238h4.065a.712.712,0,0,0,.627-.38.748.748,0,0,0-.02-.746L6.107.343a.709.709,0,0,0-1.215,0L.11,8.112a.748.748,0,0,0-.02.746'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <>\n      <defs>\n        <clipPath id='clip-path'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n        </clipPath>\n      </defs>\n      <g transform='translate(17.5 21) rotate(180)'>\n        <path\n          d='M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0'\n          transform='translate(4.738 0)'\n          fill={secondaryColor}\n          opacity={opacity}\n        />\n        <g transform='translate(0 7.944)'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n          <g clipPath='url(#clip-path)'>\n            <path\n              d='M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711'\n              transform='translate(0 0.534)'\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </>\n  )\n  const Light = () => (\n    <g transform='translate(17.5 21) rotate(180)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(6.5 3)'>\n      <path\n        d='M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468'\n        transform='translate(11 18) rotate(180)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(17.5 21) rotate(180)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(17.5 21) rotate(180)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(4.894 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCaretUp.displayName = 'IconlyCaretUp'\nCaretUp.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CaretUp)\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport withIcon from '../lib/withIcon'\n\nconst CaretLeft = ({ color, secondaryColor, strokeWidth, opacity, set }) => {\n  const Bold = () => (\n    <g transform='translate(3 6.5)'>\n      <path\n        d='M8.859,10.91a.715.715,0,0,0,.38-.627V6.217h8.027a.717.717,0,1,0,0-1.435H9.238V.717A.712.712,0,0,0,8.859.09a.748.748,0,0,0-.746.02L.343,4.893a.709.709,0,0,0,0,1.215l7.77,4.783a.748.748,0,0,0,.746.02'\n        transform='translate(0 0)'\n        fill={color}\n      />\n    </g>\n  )\n  const Bulk = () => (\n    <>\n      <defs>\n        <clipPath id='clip-path'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n        </clipPath>\n      </defs>\n      <g transform='translate(21 6.5) rotate(90)'>\n        <path\n          d='M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0'\n          transform='translate(4.738 0)'\n          fill={secondaryColor}\n          opacity={opacity}\n        />\n        <g transform='translate(0 7.944)'>\n          <path\n            d='M0,0H10.9V8.939H0Z'\n            transform='translate(0 0.534)'\n            fill='none'\n          />\n          <g clipPath='url(#clip-path)'>\n            <path\n              d='M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711'\n              transform='translate(0 0.534)'\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </>\n  )\n  const Light = () => (\n    <g transform='translate(21 6.5) rotate(90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Broken = () => (\n    <g transform='translate(2.5 6)'>\n      <path\n        d='M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468'\n        transform='translate(18.5 0.5) rotate(90)'\n        fill={color}\n      />\n    </g>\n  )\n\n  const TwoTone = () => (\n    <g transform='translate(21 6.5) rotate(90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(5.251 0.75)'\n        fill='none'\n        stroke={secondaryColor}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n      />\n      <path\n        d='M0,0,5,7.937,10,0Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  const Curved = () => (\n    <g transform='translate(21 6.5) rotate(90)'>\n      <path\n        d='M.5,8.95V0'\n        transform='translate(4.894 0.75)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n      <path\n        d='M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z'\n        transform='translate(0.75 9.7)'\n        fill='none'\n        stroke={color}\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit='10'\n        strokeWidth={strokeWidth}\n      />\n    </g>\n  )\n\n  switch (set) {\n    case 'bold':\n      return <Bold />\n    case 'bulk':\n      return <Bulk />\n    case 'broken':\n      return <Broken />\n    case 'two-tone':\n      return <TwoTone />\n    case 'curved':\n      return <Curved />\n    default:\n      return <Light />\n  }\n}\nCaretLeft.displayName = 'IconlyCaretLeft'\nCaretLeft.propTypes = {\n  opacity: PropTypes.string,\n  color: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  set: PropTypes.string,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default withIcon(CaretLeft)\n","import React from 'react'\nimport * as IconPack from '../Icons'\n\nconst icons = {\n  Search: IconPack.Search,\n  Folder: IconPack.Folder,\n  Wallet: IconPack.Wallet,\n  Graph: IconPack.Graph,\n  Bookmark: IconPack.Bookmark,\n  Category: IconPack.Category,\n  Home: IconPack.Home,\n  Notification: IconPack.Notification,\n  Chat: IconPack.Chat,\n  Heart: IconPack.Heart,\n  Heart2: IconPack.Heart2,\n  Paper: IconPack.Paper,\n  PaperPlus: IconPack.PaperPlus,\n  PaperNegative: IconPack.PaperNegative,\n  PaperFail: IconPack.PaperFail,\n  PaperDownload: IconPack.PaperDownload,\n  PaperUpload: IconPack.PaperUpload,\n  Send: IconPack.Send,\n  Password: IconPack.Password,\n  Swap: IconPack.Swap,\n  Work: IconPack.Work,\n  Scan: IconPack.Scan,\n  Activity: IconPack.Activity,\n  Calendar: IconPack.Calendar,\n  Message: IconPack.Message,\n  Video: IconPack.Video,\n  Plus: IconPack.Plus,\n  Chart: IconPack.Chart,\n  Game: IconPack.Game,\n  Bag: IconPack.Bag,\n  Bag2: IconPack.Bag2,\n  TicketStar: IconPack.TicketStar,\n  MoreCircle: IconPack.MoreCircle,\n  MoreSquare: IconPack.MoreSquare,\n  Discount: IconPack.Discount,\n  Buy: IconPack.Buy,\n  InfoCircle: IconPack.InfoCircle,\n  InfoSquare: IconPack.InfoSquare,\n  Danger: IconPack.Danger,\n  CloseSquare: IconPack.CloseSquare,\n  TickSquare: IconPack.TickSquare,\n  Discovery: IconPack.Discovery,\n  Location: IconPack.Location,\n  Document: IconPack.Document,\n  Setting: IconPack.Setting,\n  TimeSquare: IconPack.TimeSquare,\n  TimeCircle: IconPack.TimeCircle,\n  VolumeUp: IconPack.VolumeUp,\n  VolumeDown: IconPack.VolumeDown,\n  VolumeOff: IconPack.VolumeOff,\n  Star: IconPack.Star,\n  Ticket: IconPack.Ticket,\n  Camera: IconPack.Camera,\n  User: IconPack.User,\n  AddUser: IconPack.AddUser,\n  TwoUsers: IconPack.TwoUsers,\n  People: IconPack.People,\n  Login: IconPack.Login,\n  Logout: IconPack.Logout,\n  Download: IconPack.Download,\n  Upload: IconPack.Upload,\n  Voice: IconPack.Voice,\n  Voice2: IconPack.Voice2,\n  Delete: IconPack.Delete,\n  Edit: IconPack.Edit,\n  EditSquare: IconPack.EditSquare,\n  Play: IconPack.Play,\n  ShieldDone: IconPack.ShieldDone,\n  ShieldFail: IconPack.ShieldFail,\n  Show: IconPack.Show,\n  Hide: IconPack.Hide,\n  Filter: IconPack.Filter,\n  Filter2: IconPack.Filter2,\n  Image: IconPack.Image,\n  Image2: IconPack.Image2,\n  Call: IconPack.Call,\n  Calling: IconPack.Calling,\n  CallMissed: IconPack.CallMissed,\n  CallSilent: IconPack.CallSilent,\n  Lock: IconPack.Lock,\n  Unlock: IconPack.Unlock,\n  ChevronDownCircle: IconPack.ChevronDownCircle,\n  ChevronRightCircle: IconPack.ChevronRightCircle,\n  ChevronUpCircle: IconPack.ChevronUpCircle,\n  ChevronLeftCircle: IconPack.ChevronLeftCircle,\n  ChevronDown: IconPack.ChevronDown,\n  ChevronRight: IconPack.ChevronRight,\n  ChevronUp: IconPack.ChevronUp,\n  ChevronLeft: IconPack.ChevronLeft,\n  ArrowDownSquare: IconPack.ArrowDownSquare,\n  ArrowRightSquare: IconPack.ArrowRightSquare,\n  ArrowUpSquare: IconPack.ArrowUpSquare,\n  ArrowLeftSquare: IconPack.ArrowLeftSquare,\n  ArrowDown: IconPack.ArrowDown,\n  ArrowRight: IconPack.ArrowRight,\n  ArrowUp: IconPack.ArrowUp,\n  ArrowLeft: IconPack.ArrowLeft,\n  CaretRight: IconPack.CaretRight,\n  CaretDown: IconPack.CaretDown,\n  CaretUp: IconPack.CaretUp,\n  CaretLeft: IconPack.CaretLeft\n}\n\nconst Iconly = ({\n  className,\n  primaryColor,\n  secondaryColor,\n  strokeWidth,\n  opacity,\n  set,\n  size,\n  name,\n  style,\n  ...props\n}) => {\n  const Icon = icons[name]\n  if (!Icon) {\n    throw new Error(`Icon '${name}' doesn't exists in react-iconly`)\n  }\n  return (\n    <Icon\n      className={className}\n      primaryColor={primaryColor}\n      secondaryColor={secondaryColor}\n      strokeWidth={strokeWidth}\n      opacity={opacity}\n      set={set}\n      size={size}\n      style={style}\n      {...props}\n    />\n  )\n}\n\nexport default Iconly\n"],"names":["IconlyContext","createContext","displayName","IconlyProvider","_ref","React","createElement","Provider","value","primaryColor","secondaryColor","set","size","stroke","children","useIconlyTheme","context","useContext","undefined","Error","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","emptyFunction","emptyFunctionWithReset","module","require$$0","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$2","sizes","small","medium","large","xlarge","strokes","light","regular","bold","getSize","Number","isInteger","getStroke","getOpacity","getThemeProp","prop","theme","withIcon","Component","IconWrapper","_React$Component","apply","arguments","prototype","render","_this$props","this","label","filled","style","restProps","_objectWithoutPropertiesLoose","_excluded","iconSize","iconPrimaryColor","iconSecondaryColor","_extends","xmlns","width","height","viewBox","role","aria-label","color","opacity","strokeWidth","contextType","propTypes","memo","Search","Bold","transform","fill","Bulk","cx","cy","rx","ry","Light","strokeLinecap","strokeLinejoin","strokeMiterlimit","Broken","TwoTone","Curved","Folder","Wallet","id","Graph","Bookmark","Category","Home","Notification","Chat","Heart","Heart2","Paper","PaperPlus","PaperNegative","PaperFail","PaperDownload","PaperUpload","Send","Password","Swap","Work","Scan","Activity","Calendar","Message","Video","Plus","Chart","Game","Bag","Bag2","TicketStar","MoreCircle","MoreSquare","Discount","Buy","InfoCircle","InfoSquare","Danger","CloseSquare","TickSquare","Discovery","Location","Document","Setting","TimeSquare","TimeCircle","VolumeUp","VolumeDown","VolumeOff","Star","Ticket","Camera","User","AddUser","TwoUsers","People","Login","Logout","Download","Upload","Voice","Voice2","Delete","Edit","EditSquare","Play","ShieldDone","ShieldFail","Show","data-name","Hide","Filter","Filter2","Image","Image2","Calling","CallMissed","CallSilent","Lock","Unlock","ChevronDownCircle","ChevronRightCircle","ChevronUpCircle","ChevronLeftCircle","ChevronDown","ChevronRight","ChevronUp","ChevronLeft","ArrowDownSquare","ArrowRightSquare","ArrowUpSquare","ArrowLeftSquare","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","CaretRight","Fragment","clipPath","CaretDown","CaretUp","CaretLeft","icons","IconPack","Call","Iconly","className","Icon"],"mappings":"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"}